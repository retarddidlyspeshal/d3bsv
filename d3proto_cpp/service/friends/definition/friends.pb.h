// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/friends/definition/friends.proto

#ifndef PROTOBUF_service_2ffriends_2fdefinition_2ffriends_2eproto__INCLUDED
#define PROTOBUF_service_2ffriends_2fdefinition_2ffriends_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "lib/protocol/attribute.pb.h"
#include "lib/protocol/entity.pb.h"
#include "lib/protocol/invitation.pb.h"
#include "lib/rpc/rpc.pb.h"
#include "service/friends/friends_types.pb.h"
// @@protoc_insertion_point(includes)

namespace bnet {
namespace protocol {
namespace friends {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
void protobuf_AssignDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
void protobuf_ShutdownFile_service_2ffriends_2fdefinition_2ffriends_2eproto();

class SubscribeToFriendsRequest;
class SubscribeToFriendsResponse;
class UnsubscribeToFriendsRequest;
class GenericFriendRequest;
class GenericFriendResponse;
class SendInvitationRequest;
class ViewFriendsRequest;
class ViewFriendsResponse;
class UpdateFriendStateRequest;
class UpdateFriendStateResponse;
class FriendNotification;
class InvitationAddedNotification;
class InvitationRemovedNotification;

// ===================================================================

class SubscribeToFriendsRequest : public ::google::protobuf::Message {
 public:
  SubscribeToFriendsRequest();
  virtual ~SubscribeToFriendsRequest();
  
  SubscribeToFriendsRequest(const SubscribeToFriendsRequest& from);
  
  inline SubscribeToFriendsRequest& operator=(const SubscribeToFriendsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubscribeToFriendsRequest& default_instance();
  
  void Swap(SubscribeToFriendsRequest* other);
  
  // implements Message ----------------------------------------------
  
  SubscribeToFriendsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubscribeToFriendsRequest& from);
  void MergeFrom(const SubscribeToFriendsRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .bnet.protocol.EntityId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bnet::protocol::EntityId& agent_id() const;
  inline ::bnet::protocol::EntityId* mutable_agent_id();
  inline ::bnet::protocol::EntityId* release_agent_id();
  
  // required uint64 object_id = 2;
  inline bool has_object_id() const;
  inline void clear_object_id();
  static const int kObjectIdFieldNumber = 2;
  inline ::google::protobuf::uint64 object_id() const;
  inline void set_object_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.friends.SubscribeToFriendsRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_object_id();
  inline void clear_has_object_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::EntityId* agent_id_;
  ::google::protobuf::uint64 object_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
  friend void protobuf_AssignDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
  friend void protobuf_ShutdownFile_service_2ffriends_2fdefinition_2ffriends_2eproto();
  
  void InitAsDefaultInstance();
  static SubscribeToFriendsRequest* default_instance_;
};
// -------------------------------------------------------------------

class SubscribeToFriendsResponse : public ::google::protobuf::Message {
 public:
  SubscribeToFriendsResponse();
  virtual ~SubscribeToFriendsResponse();
  
  SubscribeToFriendsResponse(const SubscribeToFriendsResponse& from);
  
  inline SubscribeToFriendsResponse& operator=(const SubscribeToFriendsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubscribeToFriendsResponse& default_instance();
  
  void Swap(SubscribeToFriendsResponse* other);
  
  // implements Message ----------------------------------------------
  
  SubscribeToFriendsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubscribeToFriendsResponse& from);
  void MergeFrom(const SubscribeToFriendsResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 max_friends = 2;
  inline bool has_max_friends() const;
  inline void clear_max_friends();
  static const int kMaxFriendsFieldNumber = 2;
  inline ::google::protobuf::uint32 max_friends() const;
  inline void set_max_friends(::google::protobuf::uint32 value);
  
  // optional uint32 max_received_invitations = 3;
  inline bool has_max_received_invitations() const;
  inline void clear_max_received_invitations();
  static const int kMaxReceivedInvitationsFieldNumber = 3;
  inline ::google::protobuf::uint32 max_received_invitations() const;
  inline void set_max_received_invitations(::google::protobuf::uint32 value);
  
  // optional uint32 max_sent_invitations = 4;
  inline bool has_max_sent_invitations() const;
  inline void clear_max_sent_invitations();
  static const int kMaxSentInvitationsFieldNumber = 4;
  inline ::google::protobuf::uint32 max_sent_invitations() const;
  inline void set_max_sent_invitations(::google::protobuf::uint32 value);
  
  // repeated .bnet.protocol.friends.Friend friends = 5;
  inline int friends_size() const;
  inline void clear_friends();
  static const int kFriendsFieldNumber = 5;
  inline const ::bnet::protocol::friends::Friend& friends(int index) const;
  inline ::bnet::protocol::friends::Friend* mutable_friends(int index);
  inline ::bnet::protocol::friends::Friend* add_friends();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::friends::Friend >&
      friends() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::friends::Friend >*
      mutable_friends();
  
  // repeated .bnet.protocol.invitation.Invitation sent_invitations = 6;
  inline int sent_invitations_size() const;
  inline void clear_sent_invitations();
  static const int kSentInvitationsFieldNumber = 6;
  inline const ::bnet::protocol::invitation::Invitation& sent_invitations(int index) const;
  inline ::bnet::protocol::invitation::Invitation* mutable_sent_invitations(int index);
  inline ::bnet::protocol::invitation::Invitation* add_sent_invitations();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::invitation::Invitation >&
      sent_invitations() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::invitation::Invitation >*
      mutable_sent_invitations();
  
  // repeated .bnet.protocol.invitation.Invitation received_invitations = 7;
  inline int received_invitations_size() const;
  inline void clear_received_invitations();
  static const int kReceivedInvitationsFieldNumber = 7;
  inline const ::bnet::protocol::invitation::Invitation& received_invitations(int index) const;
  inline ::bnet::protocol::invitation::Invitation* mutable_received_invitations(int index);
  inline ::bnet::protocol::invitation::Invitation* add_received_invitations();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::invitation::Invitation >&
      received_invitations() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::invitation::Invitation >*
      mutable_received_invitations();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.friends.SubscribeToFriendsResponse)
 private:
  inline void set_has_max_friends();
  inline void clear_has_max_friends();
  inline void set_has_max_received_invitations();
  inline void clear_has_max_received_invitations();
  inline void set_has_max_sent_invitations();
  inline void clear_has_max_sent_invitations();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 max_friends_;
  ::google::protobuf::uint32 max_received_invitations_;
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::friends::Friend > friends_;
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::invitation::Invitation > sent_invitations_;
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::invitation::Invitation > received_invitations_;
  ::google::protobuf::uint32 max_sent_invitations_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
  friend void protobuf_AssignDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
  friend void protobuf_ShutdownFile_service_2ffriends_2fdefinition_2ffriends_2eproto();
  
  void InitAsDefaultInstance();
  static SubscribeToFriendsResponse* default_instance_;
};
// -------------------------------------------------------------------

class UnsubscribeToFriendsRequest : public ::google::protobuf::Message {
 public:
  UnsubscribeToFriendsRequest();
  virtual ~UnsubscribeToFriendsRequest();
  
  UnsubscribeToFriendsRequest(const UnsubscribeToFriendsRequest& from);
  
  inline UnsubscribeToFriendsRequest& operator=(const UnsubscribeToFriendsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnsubscribeToFriendsRequest& default_instance();
  
  void Swap(UnsubscribeToFriendsRequest* other);
  
  // implements Message ----------------------------------------------
  
  UnsubscribeToFriendsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnsubscribeToFriendsRequest& from);
  void MergeFrom(const UnsubscribeToFriendsRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .bnet.protocol.EntityId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bnet::protocol::EntityId& agent_id() const;
  inline ::bnet::protocol::EntityId* mutable_agent_id();
  inline ::bnet::protocol::EntityId* release_agent_id();
  
  // optional uint64 object_id = 2;
  inline bool has_object_id() const;
  inline void clear_object_id();
  static const int kObjectIdFieldNumber = 2;
  inline ::google::protobuf::uint64 object_id() const;
  inline void set_object_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.friends.UnsubscribeToFriendsRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_object_id();
  inline void clear_has_object_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::EntityId* agent_id_;
  ::google::protobuf::uint64 object_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
  friend void protobuf_AssignDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
  friend void protobuf_ShutdownFile_service_2ffriends_2fdefinition_2ffriends_2eproto();
  
  void InitAsDefaultInstance();
  static UnsubscribeToFriendsRequest* default_instance_;
};
// -------------------------------------------------------------------

class GenericFriendRequest : public ::google::protobuf::Message {
 public:
  GenericFriendRequest();
  virtual ~GenericFriendRequest();
  
  GenericFriendRequest(const GenericFriendRequest& from);
  
  inline GenericFriendRequest& operator=(const GenericFriendRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GenericFriendRequest& default_instance();
  
  void Swap(GenericFriendRequest* other);
  
  // implements Message ----------------------------------------------
  
  GenericFriendRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GenericFriendRequest& from);
  void MergeFrom(const GenericFriendRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .bnet.protocol.EntityId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bnet::protocol::EntityId& agent_id() const;
  inline ::bnet::protocol::EntityId* mutable_agent_id();
  inline ::bnet::protocol::EntityId* release_agent_id();
  
  // required .bnet.protocol.EntityId target_id = 2;
  inline bool has_target_id() const;
  inline void clear_target_id();
  static const int kTargetIdFieldNumber = 2;
  inline const ::bnet::protocol::EntityId& target_id() const;
  inline ::bnet::protocol::EntityId* mutable_target_id();
  inline ::bnet::protocol::EntityId* release_target_id();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.friends.GenericFriendRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_target_id();
  inline void clear_has_target_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::EntityId* agent_id_;
  ::bnet::protocol::EntityId* target_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
  friend void protobuf_AssignDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
  friend void protobuf_ShutdownFile_service_2ffriends_2fdefinition_2ffriends_2eproto();
  
  void InitAsDefaultInstance();
  static GenericFriendRequest* default_instance_;
};
// -------------------------------------------------------------------

class GenericFriendResponse : public ::google::protobuf::Message {
 public:
  GenericFriendResponse();
  virtual ~GenericFriendResponse();
  
  GenericFriendResponse(const GenericFriendResponse& from);
  
  inline GenericFriendResponse& operator=(const GenericFriendResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GenericFriendResponse& default_instance();
  
  void Swap(GenericFriendResponse* other);
  
  // implements Message ----------------------------------------------
  
  GenericFriendResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GenericFriendResponse& from);
  void MergeFrom(const GenericFriendResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .bnet.protocol.friends.Friend target_friend = 2;
  inline bool has_target_friend() const;
  inline void clear_target_friend();
  static const int kTargetFriendFieldNumber = 2;
  inline const ::bnet::protocol::friends::Friend& target_friend() const;
  inline ::bnet::protocol::friends::Friend* mutable_target_friend();
  inline ::bnet::protocol::friends::Friend* release_target_friend();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.friends.GenericFriendResponse)
 private:
  inline void set_has_target_friend();
  inline void clear_has_target_friend();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::friends::Friend* target_friend_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
  friend void protobuf_AssignDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
  friend void protobuf_ShutdownFile_service_2ffriends_2fdefinition_2ffriends_2eproto();
  
  void InitAsDefaultInstance();
  static GenericFriendResponse* default_instance_;
};
// -------------------------------------------------------------------

class SendInvitationRequest : public ::google::protobuf::Message {
 public:
  SendInvitationRequest();
  virtual ~SendInvitationRequest();
  
  SendInvitationRequest(const SendInvitationRequest& from);
  
  inline SendInvitationRequest& operator=(const SendInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendInvitationRequest& default_instance();
  
  void Swap(SendInvitationRequest* other);
  
  // implements Message ----------------------------------------------
  
  SendInvitationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendInvitationRequest& from);
  void MergeFrom(const SendInvitationRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string target_email = 3;
  inline bool has_target_email() const;
  inline void clear_target_email();
  static const int kTargetEmailFieldNumber = 3;
  inline const ::std::string& target_email() const;
  inline void set_target_email(const ::std::string& value);
  inline void set_target_email(const char* value);
  inline void set_target_email(const char* value, size_t size);
  inline ::std::string* mutable_target_email();
  inline ::std::string* release_target_email();
  
  // optional string display_string = 4;
  inline bool has_display_string() const;
  inline void clear_display_string();
  static const int kDisplayStringFieldNumber = 4;
  inline const ::std::string& display_string() const;
  inline void set_display_string(const ::std::string& value);
  inline void set_display_string(const char* value);
  inline void set_display_string(const char* value, size_t size);
  inline ::std::string* mutable_display_string();
  inline ::std::string* release_display_string();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.friends.SendInvitationRequest)
 private:
  inline void set_has_target_email();
  inline void clear_has_target_email();
  inline void set_has_display_string();
  inline void clear_has_display_string();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* target_email_;
  ::std::string* display_string_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
  friend void protobuf_AssignDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
  friend void protobuf_ShutdownFile_service_2ffriends_2fdefinition_2ffriends_2eproto();
  
  void InitAsDefaultInstance();
  static SendInvitationRequest* default_instance_;
};
// -------------------------------------------------------------------

class ViewFriendsRequest : public ::google::protobuf::Message {
 public:
  ViewFriendsRequest();
  virtual ~ViewFriendsRequest();
  
  ViewFriendsRequest(const ViewFriendsRequest& from);
  
  inline ViewFriendsRequest& operator=(const ViewFriendsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ViewFriendsRequest& default_instance();
  
  void Swap(ViewFriendsRequest* other);
  
  // implements Message ----------------------------------------------
  
  ViewFriendsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ViewFriendsRequest& from);
  void MergeFrom(const ViewFriendsRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .bnet.protocol.EntityId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bnet::protocol::EntityId& agent_id() const;
  inline ::bnet::protocol::EntityId* mutable_agent_id();
  inline ::bnet::protocol::EntityId* release_agent_id();
  
  // required .bnet.protocol.EntityId target_id = 2;
  inline bool has_target_id() const;
  inline void clear_target_id();
  static const int kTargetIdFieldNumber = 2;
  inline const ::bnet::protocol::EntityId& target_id() const;
  inline ::bnet::protocol::EntityId* mutable_target_id();
  inline ::bnet::protocol::EntityId* release_target_id();
  
  // required .bnet.protocol.attribute.AttributeFilter filter = 3;
  inline bool has_filter() const;
  inline void clear_filter();
  static const int kFilterFieldNumber = 3;
  inline const ::bnet::protocol::attribute::AttributeFilter& filter() const;
  inline ::bnet::protocol::attribute::AttributeFilter* mutable_filter();
  inline ::bnet::protocol::attribute::AttributeFilter* release_filter();
  
  // optional uint32 start_index = 4;
  inline bool has_start_index() const;
  inline void clear_start_index();
  static const int kStartIndexFieldNumber = 4;
  inline ::google::protobuf::uint32 start_index() const;
  inline void set_start_index(::google::protobuf::uint32 value);
  
  // optional uint32 max_results = 5;
  inline bool has_max_results() const;
  inline void clear_max_results();
  static const int kMaxResultsFieldNumber = 5;
  inline ::google::protobuf::uint32 max_results() const;
  inline void set_max_results(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.friends.ViewFriendsRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_target_id();
  inline void clear_has_target_id();
  inline void set_has_filter();
  inline void clear_has_filter();
  inline void set_has_start_index();
  inline void clear_has_start_index();
  inline void set_has_max_results();
  inline void clear_has_max_results();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::EntityId* agent_id_;
  ::bnet::protocol::EntityId* target_id_;
  ::bnet::protocol::attribute::AttributeFilter* filter_;
  ::google::protobuf::uint32 start_index_;
  ::google::protobuf::uint32 max_results_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
  friend void protobuf_AssignDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
  friend void protobuf_ShutdownFile_service_2ffriends_2fdefinition_2ffriends_2eproto();
  
  void InitAsDefaultInstance();
  static ViewFriendsRequest* default_instance_;
};
// -------------------------------------------------------------------

class ViewFriendsResponse : public ::google::protobuf::Message {
 public:
  ViewFriendsResponse();
  virtual ~ViewFriendsResponse();
  
  ViewFriendsResponse(const ViewFriendsResponse& from);
  
  inline ViewFriendsResponse& operator=(const ViewFriendsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ViewFriendsResponse& default_instance();
  
  void Swap(ViewFriendsResponse* other);
  
  // implements Message ----------------------------------------------
  
  ViewFriendsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ViewFriendsResponse& from);
  void MergeFrom(const ViewFriendsResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .bnet.protocol.friends.Friend friends = 1;
  inline int friends_size() const;
  inline void clear_friends();
  static const int kFriendsFieldNumber = 1;
  inline const ::bnet::protocol::friends::Friend& friends(int index) const;
  inline ::bnet::protocol::friends::Friend* mutable_friends(int index);
  inline ::bnet::protocol::friends::Friend* add_friends();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::friends::Friend >&
      friends() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::friends::Friend >*
      mutable_friends();
  
  // optional uint32 total_results = 2;
  inline bool has_total_results() const;
  inline void clear_total_results();
  static const int kTotalResultsFieldNumber = 2;
  inline ::google::protobuf::uint32 total_results() const;
  inline void set_total_results(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.friends.ViewFriendsResponse)
 private:
  inline void set_has_total_results();
  inline void clear_has_total_results();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::friends::Friend > friends_;
  ::google::protobuf::uint32 total_results_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
  friend void protobuf_AssignDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
  friend void protobuf_ShutdownFile_service_2ffriends_2fdefinition_2ffriends_2eproto();
  
  void InitAsDefaultInstance();
  static ViewFriendsResponse* default_instance_;
};
// -------------------------------------------------------------------

class UpdateFriendStateRequest : public ::google::protobuf::Message {
 public:
  UpdateFriendStateRequest();
  virtual ~UpdateFriendStateRequest();
  
  UpdateFriendStateRequest(const UpdateFriendStateRequest& from);
  
  inline UpdateFriendStateRequest& operator=(const UpdateFriendStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateFriendStateRequest& default_instance();
  
  void Swap(UpdateFriendStateRequest* other);
  
  // implements Message ----------------------------------------------
  
  UpdateFriendStateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateFriendStateRequest& from);
  void MergeFrom(const UpdateFriendStateRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .bnet.protocol.EntityId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bnet::protocol::EntityId& agent_id() const;
  inline ::bnet::protocol::EntityId* mutable_agent_id();
  inline ::bnet::protocol::EntityId* release_agent_id();
  
  // required .bnet.protocol.EntityId target_id = 2;
  inline bool has_target_id() const;
  inline void clear_target_id();
  static const int kTargetIdFieldNumber = 2;
  inline const ::bnet::protocol::EntityId& target_id() const;
  inline ::bnet::protocol::EntityId* mutable_target_id();
  inline ::bnet::protocol::EntityId* release_target_id();
  
  // repeated .bnet.protocol.attribute.Attribute attribute = 3;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 3;
  inline const ::bnet::protocol::attribute::Attribute& attribute(int index) const;
  inline ::bnet::protocol::attribute::Attribute* mutable_attribute(int index);
  inline ::bnet::protocol::attribute::Attribute* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >*
      mutable_attribute();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.friends.UpdateFriendStateRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_target_id();
  inline void clear_has_target_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::EntityId* agent_id_;
  ::bnet::protocol::EntityId* target_id_;
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute > attribute_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
  friend void protobuf_AssignDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
  friend void protobuf_ShutdownFile_service_2ffriends_2fdefinition_2ffriends_2eproto();
  
  void InitAsDefaultInstance();
  static UpdateFriendStateRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateFriendStateResponse : public ::google::protobuf::Message {
 public:
  UpdateFriendStateResponse();
  virtual ~UpdateFriendStateResponse();
  
  UpdateFriendStateResponse(const UpdateFriendStateResponse& from);
  
  inline UpdateFriendStateResponse& operator=(const UpdateFriendStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateFriendStateResponse& default_instance();
  
  void Swap(UpdateFriendStateResponse* other);
  
  // implements Message ----------------------------------------------
  
  UpdateFriendStateResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateFriendStateResponse& from);
  void MergeFrom(const UpdateFriendStateResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.EntityId target_id = 2;
  inline bool has_target_id() const;
  inline void clear_target_id();
  static const int kTargetIdFieldNumber = 2;
  inline const ::bnet::protocol::EntityId& target_id() const;
  inline ::bnet::protocol::EntityId* mutable_target_id();
  inline ::bnet::protocol::EntityId* release_target_id();
  
  // repeated .bnet.protocol.attribute.Attribute attribute = 3;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 3;
  inline const ::bnet::protocol::attribute::Attribute& attribute(int index) const;
  inline ::bnet::protocol::attribute::Attribute* mutable_attribute(int index);
  inline ::bnet::protocol::attribute::Attribute* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >*
      mutable_attribute();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.friends.UpdateFriendStateResponse)
 private:
  inline void set_has_target_id();
  inline void clear_has_target_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::EntityId* target_id_;
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute > attribute_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
  friend void protobuf_AssignDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
  friend void protobuf_ShutdownFile_service_2ffriends_2fdefinition_2ffriends_2eproto();
  
  void InitAsDefaultInstance();
  static UpdateFriendStateResponse* default_instance_;
};
// -------------------------------------------------------------------

class FriendNotification : public ::google::protobuf::Message {
 public:
  FriendNotification();
  virtual ~FriendNotification();
  
  FriendNotification(const FriendNotification& from);
  
  inline FriendNotification& operator=(const FriendNotification& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendNotification& default_instance();
  
  void Swap(FriendNotification* other);
  
  // implements Message ----------------------------------------------
  
  FriendNotification* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendNotification& from);
  void MergeFrom(const FriendNotification& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.friends.Friend target = 1;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 1;
  inline const ::bnet::protocol::friends::Friend& target() const;
  inline ::bnet::protocol::friends::Friend* mutable_target();
  inline ::bnet::protocol::friends::Friend* release_target();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.friends.FriendNotification)
 private:
  inline void set_has_target();
  inline void clear_has_target();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::friends::Friend* target_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
  friend void protobuf_AssignDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
  friend void protobuf_ShutdownFile_service_2ffriends_2fdefinition_2ffriends_2eproto();
  
  void InitAsDefaultInstance();
  static FriendNotification* default_instance_;
};
// -------------------------------------------------------------------

class InvitationAddedNotification : public ::google::protobuf::Message {
 public:
  InvitationAddedNotification();
  virtual ~InvitationAddedNotification();
  
  InvitationAddedNotification(const InvitationAddedNotification& from);
  
  inline InvitationAddedNotification& operator=(const InvitationAddedNotification& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const InvitationAddedNotification& default_instance();
  
  void Swap(InvitationAddedNotification* other);
  
  // implements Message ----------------------------------------------
  
  InvitationAddedNotification* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InvitationAddedNotification& from);
  void MergeFrom(const InvitationAddedNotification& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.invitation.Invitation invitation = 1;
  inline bool has_invitation() const;
  inline void clear_invitation();
  static const int kInvitationFieldNumber = 1;
  inline const ::bnet::protocol::invitation::Invitation& invitation() const;
  inline ::bnet::protocol::invitation::Invitation* mutable_invitation();
  inline ::bnet::protocol::invitation::Invitation* release_invitation();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.friends.InvitationAddedNotification)
 private:
  inline void set_has_invitation();
  inline void clear_has_invitation();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::invitation::Invitation* invitation_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
  friend void protobuf_AssignDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
  friend void protobuf_ShutdownFile_service_2ffriends_2fdefinition_2ffriends_2eproto();
  
  void InitAsDefaultInstance();
  static InvitationAddedNotification* default_instance_;
};
// -------------------------------------------------------------------

class InvitationRemovedNotification : public ::google::protobuf::Message {
 public:
  InvitationRemovedNotification();
  virtual ~InvitationRemovedNotification();
  
  InvitationRemovedNotification(const InvitationRemovedNotification& from);
  
  inline InvitationRemovedNotification& operator=(const InvitationRemovedNotification& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const InvitationRemovedNotification& default_instance();
  
  void Swap(InvitationRemovedNotification* other);
  
  // implements Message ----------------------------------------------
  
  InvitationRemovedNotification* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InvitationRemovedNotification& from);
  void MergeFrom(const InvitationRemovedNotification& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.invitation.Invitation invitation = 1;
  inline bool has_invitation() const;
  inline void clear_invitation();
  static const int kInvitationFieldNumber = 1;
  inline const ::bnet::protocol::invitation::Invitation& invitation() const;
  inline ::bnet::protocol::invitation::Invitation* mutable_invitation();
  inline ::bnet::protocol::invitation::Invitation* release_invitation();
  
  // optional uint32 reason = 2;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 2;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);
  
  // optional .bnet.protocol.friends.Friend added_friend = 3;
  inline bool has_added_friend() const;
  inline void clear_added_friend();
  static const int kAddedFriendFieldNumber = 3;
  inline const ::bnet::protocol::friends::Friend& added_friend() const;
  inline ::bnet::protocol::friends::Friend* mutable_added_friend();
  inline ::bnet::protocol::friends::Friend* release_added_friend();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.friends.InvitationRemovedNotification)
 private:
  inline void set_has_invitation();
  inline void clear_has_invitation();
  inline void set_has_reason();
  inline void clear_has_reason();
  inline void set_has_added_friend();
  inline void clear_has_added_friend();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::invitation::Invitation* invitation_;
  ::bnet::protocol::friends::Friend* added_friend_;
  ::google::protobuf::uint32 reason_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
  friend void protobuf_AssignDesc_service_2ffriends_2fdefinition_2ffriends_2eproto();
  friend void protobuf_ShutdownFile_service_2ffriends_2fdefinition_2ffriends_2eproto();
  
  void InitAsDefaultInstance();
  static InvitationRemovedNotification* default_instance_;
};
// ===================================================================


// ===================================================================

// SubscribeToFriendsRequest

// optional .bnet.protocol.EntityId agent_id = 1;
inline bool SubscribeToFriendsRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SubscribeToFriendsRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SubscribeToFriendsRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SubscribeToFriendsRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bnet::protocol::EntityId::Clear();
  clear_has_agent_id();
}
inline const ::bnet::protocol::EntityId& SubscribeToFriendsRequest::agent_id() const {
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bnet::protocol::EntityId* SubscribeToFriendsRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bnet::protocol::EntityId;
  return agent_id_;
}
inline ::bnet::protocol::EntityId* SubscribeToFriendsRequest::release_agent_id() {
  clear_has_agent_id();
  ::bnet::protocol::EntityId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}

// required uint64 object_id = 2;
inline bool SubscribeToFriendsRequest::has_object_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SubscribeToFriendsRequest::set_has_object_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SubscribeToFriendsRequest::clear_has_object_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SubscribeToFriendsRequest::clear_object_id() {
  object_id_ = GOOGLE_ULONGLONG(0);
  clear_has_object_id();
}
inline ::google::protobuf::uint64 SubscribeToFriendsRequest::object_id() const {
  return object_id_;
}
inline void SubscribeToFriendsRequest::set_object_id(::google::protobuf::uint64 value) {
  set_has_object_id();
  object_id_ = value;
}

// -------------------------------------------------------------------

// SubscribeToFriendsResponse

// optional uint32 max_friends = 2;
inline bool SubscribeToFriendsResponse::has_max_friends() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SubscribeToFriendsResponse::set_has_max_friends() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SubscribeToFriendsResponse::clear_has_max_friends() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SubscribeToFriendsResponse::clear_max_friends() {
  max_friends_ = 0u;
  clear_has_max_friends();
}
inline ::google::protobuf::uint32 SubscribeToFriendsResponse::max_friends() const {
  return max_friends_;
}
inline void SubscribeToFriendsResponse::set_max_friends(::google::protobuf::uint32 value) {
  set_has_max_friends();
  max_friends_ = value;
}

// optional uint32 max_received_invitations = 3;
inline bool SubscribeToFriendsResponse::has_max_received_invitations() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SubscribeToFriendsResponse::set_has_max_received_invitations() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SubscribeToFriendsResponse::clear_has_max_received_invitations() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SubscribeToFriendsResponse::clear_max_received_invitations() {
  max_received_invitations_ = 0u;
  clear_has_max_received_invitations();
}
inline ::google::protobuf::uint32 SubscribeToFriendsResponse::max_received_invitations() const {
  return max_received_invitations_;
}
inline void SubscribeToFriendsResponse::set_max_received_invitations(::google::protobuf::uint32 value) {
  set_has_max_received_invitations();
  max_received_invitations_ = value;
}

// optional uint32 max_sent_invitations = 4;
inline bool SubscribeToFriendsResponse::has_max_sent_invitations() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SubscribeToFriendsResponse::set_has_max_sent_invitations() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SubscribeToFriendsResponse::clear_has_max_sent_invitations() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SubscribeToFriendsResponse::clear_max_sent_invitations() {
  max_sent_invitations_ = 0u;
  clear_has_max_sent_invitations();
}
inline ::google::protobuf::uint32 SubscribeToFriendsResponse::max_sent_invitations() const {
  return max_sent_invitations_;
}
inline void SubscribeToFriendsResponse::set_max_sent_invitations(::google::protobuf::uint32 value) {
  set_has_max_sent_invitations();
  max_sent_invitations_ = value;
}

// repeated .bnet.protocol.friends.Friend friends = 5;
inline int SubscribeToFriendsResponse::friends_size() const {
  return friends_.size();
}
inline void SubscribeToFriendsResponse::clear_friends() {
  friends_.Clear();
}
inline const ::bnet::protocol::friends::Friend& SubscribeToFriendsResponse::friends(int index) const {
  return friends_.Get(index);
}
inline ::bnet::protocol::friends::Friend* SubscribeToFriendsResponse::mutable_friends(int index) {
  return friends_.Mutable(index);
}
inline ::bnet::protocol::friends::Friend* SubscribeToFriendsResponse::add_friends() {
  return friends_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::friends::Friend >&
SubscribeToFriendsResponse::friends() const {
  return friends_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::friends::Friend >*
SubscribeToFriendsResponse::mutable_friends() {
  return &friends_;
}

// repeated .bnet.protocol.invitation.Invitation sent_invitations = 6;
inline int SubscribeToFriendsResponse::sent_invitations_size() const {
  return sent_invitations_.size();
}
inline void SubscribeToFriendsResponse::clear_sent_invitations() {
  sent_invitations_.Clear();
}
inline const ::bnet::protocol::invitation::Invitation& SubscribeToFriendsResponse::sent_invitations(int index) const {
  return sent_invitations_.Get(index);
}
inline ::bnet::protocol::invitation::Invitation* SubscribeToFriendsResponse::mutable_sent_invitations(int index) {
  return sent_invitations_.Mutable(index);
}
inline ::bnet::protocol::invitation::Invitation* SubscribeToFriendsResponse::add_sent_invitations() {
  return sent_invitations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::invitation::Invitation >&
SubscribeToFriendsResponse::sent_invitations() const {
  return sent_invitations_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::invitation::Invitation >*
SubscribeToFriendsResponse::mutable_sent_invitations() {
  return &sent_invitations_;
}

// repeated .bnet.protocol.invitation.Invitation received_invitations = 7;
inline int SubscribeToFriendsResponse::received_invitations_size() const {
  return received_invitations_.size();
}
inline void SubscribeToFriendsResponse::clear_received_invitations() {
  received_invitations_.Clear();
}
inline const ::bnet::protocol::invitation::Invitation& SubscribeToFriendsResponse::received_invitations(int index) const {
  return received_invitations_.Get(index);
}
inline ::bnet::protocol::invitation::Invitation* SubscribeToFriendsResponse::mutable_received_invitations(int index) {
  return received_invitations_.Mutable(index);
}
inline ::bnet::protocol::invitation::Invitation* SubscribeToFriendsResponse::add_received_invitations() {
  return received_invitations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::invitation::Invitation >&
SubscribeToFriendsResponse::received_invitations() const {
  return received_invitations_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::invitation::Invitation >*
SubscribeToFriendsResponse::mutable_received_invitations() {
  return &received_invitations_;
}

// -------------------------------------------------------------------

// UnsubscribeToFriendsRequest

// optional .bnet.protocol.EntityId agent_id = 1;
inline bool UnsubscribeToFriendsRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnsubscribeToFriendsRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnsubscribeToFriendsRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnsubscribeToFriendsRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bnet::protocol::EntityId::Clear();
  clear_has_agent_id();
}
inline const ::bnet::protocol::EntityId& UnsubscribeToFriendsRequest::agent_id() const {
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bnet::protocol::EntityId* UnsubscribeToFriendsRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bnet::protocol::EntityId;
  return agent_id_;
}
inline ::bnet::protocol::EntityId* UnsubscribeToFriendsRequest::release_agent_id() {
  clear_has_agent_id();
  ::bnet::protocol::EntityId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}

// optional uint64 object_id = 2;
inline bool UnsubscribeToFriendsRequest::has_object_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnsubscribeToFriendsRequest::set_has_object_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnsubscribeToFriendsRequest::clear_has_object_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnsubscribeToFriendsRequest::clear_object_id() {
  object_id_ = GOOGLE_ULONGLONG(0);
  clear_has_object_id();
}
inline ::google::protobuf::uint64 UnsubscribeToFriendsRequest::object_id() const {
  return object_id_;
}
inline void UnsubscribeToFriendsRequest::set_object_id(::google::protobuf::uint64 value) {
  set_has_object_id();
  object_id_ = value;
}

// -------------------------------------------------------------------

// GenericFriendRequest

// optional .bnet.protocol.EntityId agent_id = 1;
inline bool GenericFriendRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GenericFriendRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GenericFriendRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GenericFriendRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bnet::protocol::EntityId::Clear();
  clear_has_agent_id();
}
inline const ::bnet::protocol::EntityId& GenericFriendRequest::agent_id() const {
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bnet::protocol::EntityId* GenericFriendRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bnet::protocol::EntityId;
  return agent_id_;
}
inline ::bnet::protocol::EntityId* GenericFriendRequest::release_agent_id() {
  clear_has_agent_id();
  ::bnet::protocol::EntityId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}

// required .bnet.protocol.EntityId target_id = 2;
inline bool GenericFriendRequest::has_target_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GenericFriendRequest::set_has_target_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GenericFriendRequest::clear_has_target_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GenericFriendRequest::clear_target_id() {
  if (target_id_ != NULL) target_id_->::bnet::protocol::EntityId::Clear();
  clear_has_target_id();
}
inline const ::bnet::protocol::EntityId& GenericFriendRequest::target_id() const {
  return target_id_ != NULL ? *target_id_ : *default_instance_->target_id_;
}
inline ::bnet::protocol::EntityId* GenericFriendRequest::mutable_target_id() {
  set_has_target_id();
  if (target_id_ == NULL) target_id_ = new ::bnet::protocol::EntityId;
  return target_id_;
}
inline ::bnet::protocol::EntityId* GenericFriendRequest::release_target_id() {
  clear_has_target_id();
  ::bnet::protocol::EntityId* temp = target_id_;
  target_id_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// GenericFriendResponse

// optional .bnet.protocol.friends.Friend target_friend = 2;
inline bool GenericFriendResponse::has_target_friend() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GenericFriendResponse::set_has_target_friend() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GenericFriendResponse::clear_has_target_friend() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GenericFriendResponse::clear_target_friend() {
  if (target_friend_ != NULL) target_friend_->::bnet::protocol::friends::Friend::Clear();
  clear_has_target_friend();
}
inline const ::bnet::protocol::friends::Friend& GenericFriendResponse::target_friend() const {
  return target_friend_ != NULL ? *target_friend_ : *default_instance_->target_friend_;
}
inline ::bnet::protocol::friends::Friend* GenericFriendResponse::mutable_target_friend() {
  set_has_target_friend();
  if (target_friend_ == NULL) target_friend_ = new ::bnet::protocol::friends::Friend;
  return target_friend_;
}
inline ::bnet::protocol::friends::Friend* GenericFriendResponse::release_target_friend() {
  clear_has_target_friend();
  ::bnet::protocol::friends::Friend* temp = target_friend_;
  target_friend_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// SendInvitationRequest

// optional string target_email = 3;
inline bool SendInvitationRequest::has_target_email() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendInvitationRequest::set_has_target_email() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendInvitationRequest::clear_has_target_email() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendInvitationRequest::clear_target_email() {
  if (target_email_ != &::google::protobuf::internal::kEmptyString) {
    target_email_->clear();
  }
  clear_has_target_email();
}
inline const ::std::string& SendInvitationRequest::target_email() const {
  return *target_email_;
}
inline void SendInvitationRequest::set_target_email(const ::std::string& value) {
  set_has_target_email();
  if (target_email_ == &::google::protobuf::internal::kEmptyString) {
    target_email_ = new ::std::string;
  }
  target_email_->assign(value);
}
inline void SendInvitationRequest::set_target_email(const char* value) {
  set_has_target_email();
  if (target_email_ == &::google::protobuf::internal::kEmptyString) {
    target_email_ = new ::std::string;
  }
  target_email_->assign(value);
}
inline void SendInvitationRequest::set_target_email(const char* value, size_t size) {
  set_has_target_email();
  if (target_email_ == &::google::protobuf::internal::kEmptyString) {
    target_email_ = new ::std::string;
  }
  target_email_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SendInvitationRequest::mutable_target_email() {
  set_has_target_email();
  if (target_email_ == &::google::protobuf::internal::kEmptyString) {
    target_email_ = new ::std::string;
  }
  return target_email_;
}
inline ::std::string* SendInvitationRequest::release_target_email() {
  clear_has_target_email();
  if (target_email_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = target_email_;
    target_email_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string display_string = 4;
inline bool SendInvitationRequest::has_display_string() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendInvitationRequest::set_has_display_string() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendInvitationRequest::clear_has_display_string() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendInvitationRequest::clear_display_string() {
  if (display_string_ != &::google::protobuf::internal::kEmptyString) {
    display_string_->clear();
  }
  clear_has_display_string();
}
inline const ::std::string& SendInvitationRequest::display_string() const {
  return *display_string_;
}
inline void SendInvitationRequest::set_display_string(const ::std::string& value) {
  set_has_display_string();
  if (display_string_ == &::google::protobuf::internal::kEmptyString) {
    display_string_ = new ::std::string;
  }
  display_string_->assign(value);
}
inline void SendInvitationRequest::set_display_string(const char* value) {
  set_has_display_string();
  if (display_string_ == &::google::protobuf::internal::kEmptyString) {
    display_string_ = new ::std::string;
  }
  display_string_->assign(value);
}
inline void SendInvitationRequest::set_display_string(const char* value, size_t size) {
  set_has_display_string();
  if (display_string_ == &::google::protobuf::internal::kEmptyString) {
    display_string_ = new ::std::string;
  }
  display_string_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SendInvitationRequest::mutable_display_string() {
  set_has_display_string();
  if (display_string_ == &::google::protobuf::internal::kEmptyString) {
    display_string_ = new ::std::string;
  }
  return display_string_;
}
inline ::std::string* SendInvitationRequest::release_display_string() {
  clear_has_display_string();
  if (display_string_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = display_string_;
    display_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ViewFriendsRequest

// optional .bnet.protocol.EntityId agent_id = 1;
inline bool ViewFriendsRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ViewFriendsRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ViewFriendsRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ViewFriendsRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bnet::protocol::EntityId::Clear();
  clear_has_agent_id();
}
inline const ::bnet::protocol::EntityId& ViewFriendsRequest::agent_id() const {
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bnet::protocol::EntityId* ViewFriendsRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bnet::protocol::EntityId;
  return agent_id_;
}
inline ::bnet::protocol::EntityId* ViewFriendsRequest::release_agent_id() {
  clear_has_agent_id();
  ::bnet::protocol::EntityId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}

// required .bnet.protocol.EntityId target_id = 2;
inline bool ViewFriendsRequest::has_target_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ViewFriendsRequest::set_has_target_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ViewFriendsRequest::clear_has_target_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ViewFriendsRequest::clear_target_id() {
  if (target_id_ != NULL) target_id_->::bnet::protocol::EntityId::Clear();
  clear_has_target_id();
}
inline const ::bnet::protocol::EntityId& ViewFriendsRequest::target_id() const {
  return target_id_ != NULL ? *target_id_ : *default_instance_->target_id_;
}
inline ::bnet::protocol::EntityId* ViewFriendsRequest::mutable_target_id() {
  set_has_target_id();
  if (target_id_ == NULL) target_id_ = new ::bnet::protocol::EntityId;
  return target_id_;
}
inline ::bnet::protocol::EntityId* ViewFriendsRequest::release_target_id() {
  clear_has_target_id();
  ::bnet::protocol::EntityId* temp = target_id_;
  target_id_ = NULL;
  return temp;
}

// required .bnet.protocol.attribute.AttributeFilter filter = 3;
inline bool ViewFriendsRequest::has_filter() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ViewFriendsRequest::set_has_filter() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ViewFriendsRequest::clear_has_filter() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ViewFriendsRequest::clear_filter() {
  if (filter_ != NULL) filter_->::bnet::protocol::attribute::AttributeFilter::Clear();
  clear_has_filter();
}
inline const ::bnet::protocol::attribute::AttributeFilter& ViewFriendsRequest::filter() const {
  return filter_ != NULL ? *filter_ : *default_instance_->filter_;
}
inline ::bnet::protocol::attribute::AttributeFilter* ViewFriendsRequest::mutable_filter() {
  set_has_filter();
  if (filter_ == NULL) filter_ = new ::bnet::protocol::attribute::AttributeFilter;
  return filter_;
}
inline ::bnet::protocol::attribute::AttributeFilter* ViewFriendsRequest::release_filter() {
  clear_has_filter();
  ::bnet::protocol::attribute::AttributeFilter* temp = filter_;
  filter_ = NULL;
  return temp;
}

// optional uint32 start_index = 4;
inline bool ViewFriendsRequest::has_start_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ViewFriendsRequest::set_has_start_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ViewFriendsRequest::clear_has_start_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ViewFriendsRequest::clear_start_index() {
  start_index_ = 0u;
  clear_has_start_index();
}
inline ::google::protobuf::uint32 ViewFriendsRequest::start_index() const {
  return start_index_;
}
inline void ViewFriendsRequest::set_start_index(::google::protobuf::uint32 value) {
  set_has_start_index();
  start_index_ = value;
}

// optional uint32 max_results = 5;
inline bool ViewFriendsRequest::has_max_results() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ViewFriendsRequest::set_has_max_results() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ViewFriendsRequest::clear_has_max_results() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ViewFriendsRequest::clear_max_results() {
  max_results_ = 0u;
  clear_has_max_results();
}
inline ::google::protobuf::uint32 ViewFriendsRequest::max_results() const {
  return max_results_;
}
inline void ViewFriendsRequest::set_max_results(::google::protobuf::uint32 value) {
  set_has_max_results();
  max_results_ = value;
}

// -------------------------------------------------------------------

// ViewFriendsResponse

// repeated .bnet.protocol.friends.Friend friends = 1;
inline int ViewFriendsResponse::friends_size() const {
  return friends_.size();
}
inline void ViewFriendsResponse::clear_friends() {
  friends_.Clear();
}
inline const ::bnet::protocol::friends::Friend& ViewFriendsResponse::friends(int index) const {
  return friends_.Get(index);
}
inline ::bnet::protocol::friends::Friend* ViewFriendsResponse::mutable_friends(int index) {
  return friends_.Mutable(index);
}
inline ::bnet::protocol::friends::Friend* ViewFriendsResponse::add_friends() {
  return friends_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::friends::Friend >&
ViewFriendsResponse::friends() const {
  return friends_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::friends::Friend >*
ViewFriendsResponse::mutable_friends() {
  return &friends_;
}

// optional uint32 total_results = 2;
inline bool ViewFriendsResponse::has_total_results() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ViewFriendsResponse::set_has_total_results() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ViewFriendsResponse::clear_has_total_results() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ViewFriendsResponse::clear_total_results() {
  total_results_ = 0u;
  clear_has_total_results();
}
inline ::google::protobuf::uint32 ViewFriendsResponse::total_results() const {
  return total_results_;
}
inline void ViewFriendsResponse::set_total_results(::google::protobuf::uint32 value) {
  set_has_total_results();
  total_results_ = value;
}

// -------------------------------------------------------------------

// UpdateFriendStateRequest

// optional .bnet.protocol.EntityId agent_id = 1;
inline bool UpdateFriendStateRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateFriendStateRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateFriendStateRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateFriendStateRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bnet::protocol::EntityId::Clear();
  clear_has_agent_id();
}
inline const ::bnet::protocol::EntityId& UpdateFriendStateRequest::agent_id() const {
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bnet::protocol::EntityId* UpdateFriendStateRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bnet::protocol::EntityId;
  return agent_id_;
}
inline ::bnet::protocol::EntityId* UpdateFriendStateRequest::release_agent_id() {
  clear_has_agent_id();
  ::bnet::protocol::EntityId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}

// required .bnet.protocol.EntityId target_id = 2;
inline bool UpdateFriendStateRequest::has_target_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateFriendStateRequest::set_has_target_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateFriendStateRequest::clear_has_target_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateFriendStateRequest::clear_target_id() {
  if (target_id_ != NULL) target_id_->::bnet::protocol::EntityId::Clear();
  clear_has_target_id();
}
inline const ::bnet::protocol::EntityId& UpdateFriendStateRequest::target_id() const {
  return target_id_ != NULL ? *target_id_ : *default_instance_->target_id_;
}
inline ::bnet::protocol::EntityId* UpdateFriendStateRequest::mutable_target_id() {
  set_has_target_id();
  if (target_id_ == NULL) target_id_ = new ::bnet::protocol::EntityId;
  return target_id_;
}
inline ::bnet::protocol::EntityId* UpdateFriendStateRequest::release_target_id() {
  clear_has_target_id();
  ::bnet::protocol::EntityId* temp = target_id_;
  target_id_ = NULL;
  return temp;
}

// repeated .bnet.protocol.attribute.Attribute attribute = 3;
inline int UpdateFriendStateRequest::attribute_size() const {
  return attribute_.size();
}
inline void UpdateFriendStateRequest::clear_attribute() {
  attribute_.Clear();
}
inline const ::bnet::protocol::attribute::Attribute& UpdateFriendStateRequest::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::bnet::protocol::attribute::Attribute* UpdateFriendStateRequest::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::bnet::protocol::attribute::Attribute* UpdateFriendStateRequest::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >&
UpdateFriendStateRequest::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >*
UpdateFriendStateRequest::mutable_attribute() {
  return &attribute_;
}

// -------------------------------------------------------------------

// UpdateFriendStateResponse

// required .bnet.protocol.EntityId target_id = 2;
inline bool UpdateFriendStateResponse::has_target_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateFriendStateResponse::set_has_target_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateFriendStateResponse::clear_has_target_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateFriendStateResponse::clear_target_id() {
  if (target_id_ != NULL) target_id_->::bnet::protocol::EntityId::Clear();
  clear_has_target_id();
}
inline const ::bnet::protocol::EntityId& UpdateFriendStateResponse::target_id() const {
  return target_id_ != NULL ? *target_id_ : *default_instance_->target_id_;
}
inline ::bnet::protocol::EntityId* UpdateFriendStateResponse::mutable_target_id() {
  set_has_target_id();
  if (target_id_ == NULL) target_id_ = new ::bnet::protocol::EntityId;
  return target_id_;
}
inline ::bnet::protocol::EntityId* UpdateFriendStateResponse::release_target_id() {
  clear_has_target_id();
  ::bnet::protocol::EntityId* temp = target_id_;
  target_id_ = NULL;
  return temp;
}

// repeated .bnet.protocol.attribute.Attribute attribute = 3;
inline int UpdateFriendStateResponse::attribute_size() const {
  return attribute_.size();
}
inline void UpdateFriendStateResponse::clear_attribute() {
  attribute_.Clear();
}
inline const ::bnet::protocol::attribute::Attribute& UpdateFriendStateResponse::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::bnet::protocol::attribute::Attribute* UpdateFriendStateResponse::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::bnet::protocol::attribute::Attribute* UpdateFriendStateResponse::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >&
UpdateFriendStateResponse::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >*
UpdateFriendStateResponse::mutable_attribute() {
  return &attribute_;
}

// -------------------------------------------------------------------

// FriendNotification

// required .bnet.protocol.friends.Friend target = 1;
inline bool FriendNotification::has_target() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendNotification::set_has_target() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendNotification::clear_has_target() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendNotification::clear_target() {
  if (target_ != NULL) target_->::bnet::protocol::friends::Friend::Clear();
  clear_has_target();
}
inline const ::bnet::protocol::friends::Friend& FriendNotification::target() const {
  return target_ != NULL ? *target_ : *default_instance_->target_;
}
inline ::bnet::protocol::friends::Friend* FriendNotification::mutable_target() {
  set_has_target();
  if (target_ == NULL) target_ = new ::bnet::protocol::friends::Friend;
  return target_;
}
inline ::bnet::protocol::friends::Friend* FriendNotification::release_target() {
  clear_has_target();
  ::bnet::protocol::friends::Friend* temp = target_;
  target_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// InvitationAddedNotification

// required .bnet.protocol.invitation.Invitation invitation = 1;
inline bool InvitationAddedNotification::has_invitation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InvitationAddedNotification::set_has_invitation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InvitationAddedNotification::clear_has_invitation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InvitationAddedNotification::clear_invitation() {
  if (invitation_ != NULL) invitation_->::bnet::protocol::invitation::Invitation::Clear();
  clear_has_invitation();
}
inline const ::bnet::protocol::invitation::Invitation& InvitationAddedNotification::invitation() const {
  return invitation_ != NULL ? *invitation_ : *default_instance_->invitation_;
}
inline ::bnet::protocol::invitation::Invitation* InvitationAddedNotification::mutable_invitation() {
  set_has_invitation();
  if (invitation_ == NULL) invitation_ = new ::bnet::protocol::invitation::Invitation;
  return invitation_;
}
inline ::bnet::protocol::invitation::Invitation* InvitationAddedNotification::release_invitation() {
  clear_has_invitation();
  ::bnet::protocol::invitation::Invitation* temp = invitation_;
  invitation_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// InvitationRemovedNotification

// required .bnet.protocol.invitation.Invitation invitation = 1;
inline bool InvitationRemovedNotification::has_invitation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InvitationRemovedNotification::set_has_invitation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InvitationRemovedNotification::clear_has_invitation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InvitationRemovedNotification::clear_invitation() {
  if (invitation_ != NULL) invitation_->::bnet::protocol::invitation::Invitation::Clear();
  clear_has_invitation();
}
inline const ::bnet::protocol::invitation::Invitation& InvitationRemovedNotification::invitation() const {
  return invitation_ != NULL ? *invitation_ : *default_instance_->invitation_;
}
inline ::bnet::protocol::invitation::Invitation* InvitationRemovedNotification::mutable_invitation() {
  set_has_invitation();
  if (invitation_ == NULL) invitation_ = new ::bnet::protocol::invitation::Invitation;
  return invitation_;
}
inline ::bnet::protocol::invitation::Invitation* InvitationRemovedNotification::release_invitation() {
  clear_has_invitation();
  ::bnet::protocol::invitation::Invitation* temp = invitation_;
  invitation_ = NULL;
  return temp;
}

// optional uint32 reason = 2;
inline bool InvitationRemovedNotification::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InvitationRemovedNotification::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InvitationRemovedNotification::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InvitationRemovedNotification::clear_reason() {
  reason_ = 0u;
  clear_has_reason();
}
inline ::google::protobuf::uint32 InvitationRemovedNotification::reason() const {
  return reason_;
}
inline void InvitationRemovedNotification::set_reason(::google::protobuf::uint32 value) {
  set_has_reason();
  reason_ = value;
}

// optional .bnet.protocol.friends.Friend added_friend = 3;
inline bool InvitationRemovedNotification::has_added_friend() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InvitationRemovedNotification::set_has_added_friend() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InvitationRemovedNotification::clear_has_added_friend() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InvitationRemovedNotification::clear_added_friend() {
  if (added_friend_ != NULL) added_friend_->::bnet::protocol::friends::Friend::Clear();
  clear_has_added_friend();
}
inline const ::bnet::protocol::friends::Friend& InvitationRemovedNotification::added_friend() const {
  return added_friend_ != NULL ? *added_friend_ : *default_instance_->added_friend_;
}
inline ::bnet::protocol::friends::Friend* InvitationRemovedNotification::mutable_added_friend() {
  set_has_added_friend();
  if (added_friend_ == NULL) added_friend_ = new ::bnet::protocol::friends::Friend;
  return added_friend_;
}
inline ::bnet::protocol::friends::Friend* InvitationRemovedNotification::release_added_friend() {
  clear_has_added_friend();
  ::bnet::protocol::friends::Friend* temp = added_friend_;
  added_friend_ = NULL;
  return temp;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace friends
}  // namespace protocol
}  // namespace bnet

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_service_2ffriends_2fdefinition_2ffriends_2eproto__INCLUDED
