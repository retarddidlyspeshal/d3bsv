// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/game_master/game_master.proto

#ifndef PROTOBUF_service_2fgame_5fmaster_2fgame_5fmaster_2eproto__INCLUDED
#define PROTOBUF_service_2fgame_5fmaster_2fgame_5fmaster_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "service/game_master/game_factory.pb.h"
#include "service/server_pool/server_pool.pb.h"
#include "service/channel/channel_types.pb.h"
#include "lib/protocol/attribute.pb.h"
#include "lib/protocol/entity.pb.h"
#include "lib/rpc/rpc.pb.h"
#include "service/game_master/game_master_types.pb.h"
// @@protoc_insertion_point(includes)

namespace bnet {
namespace protocol {
namespace game_master {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
void protobuf_AssignDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
void protobuf_ShutdownFile_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();

class JoinGameRequest;
class JoinGameResponse;
class ListFactoriesRequest;
class ListFactoriesResponse;
class FindGameRequest;
class FindGameResponse;
class CancelFindGameRequest;
class GameEndedNotification;
class PlayerLeftNotification;
class RegisterServerRequest;
class UnregisterServerRequest;
class RegisterUtilitiesRequest;
class UnregisterUtilitiesRequest;
class SubscribeRequest;
class SubscribeResponse;
class UnsubscribeRequest;
class ChangeGameRequest;
class GetFactoryInfoRequest;
class GetFactoryInfoResponse;
class GetGameStatsRequest;
class GetGameStatsResponse;
class FactoryUpdateNotification;
class GameFoundNotification;

enum FactoryUpdateNotification_Operation {
  FactoryUpdateNotification_Operation_ADD = 1,
  FactoryUpdateNotification_Operation_REMOVE = 2,
  FactoryUpdateNotification_Operation_CHANGE = 3
};
bool FactoryUpdateNotification_Operation_IsValid(int value);
const FactoryUpdateNotification_Operation FactoryUpdateNotification_Operation_Operation_MIN = FactoryUpdateNotification_Operation_ADD;
const FactoryUpdateNotification_Operation FactoryUpdateNotification_Operation_Operation_MAX = FactoryUpdateNotification_Operation_CHANGE;
const int FactoryUpdateNotification_Operation_Operation_ARRAYSIZE = FactoryUpdateNotification_Operation_Operation_MAX + 1;

const ::google::protobuf::EnumDescriptor* FactoryUpdateNotification_Operation_descriptor();
inline const ::std::string& FactoryUpdateNotification_Operation_Name(FactoryUpdateNotification_Operation value) {
  return ::google::protobuf::internal::NameOfEnum(
    FactoryUpdateNotification_Operation_descriptor(), value);
}
inline bool FactoryUpdateNotification_Operation_Parse(
    const ::std::string& name, FactoryUpdateNotification_Operation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FactoryUpdateNotification_Operation>(
    FactoryUpdateNotification_Operation_descriptor(), name, value);
}
// ===================================================================

class JoinGameRequest : public ::google::protobuf::Message {
 public:
  JoinGameRequest();
  virtual ~JoinGameRequest();
  
  JoinGameRequest(const JoinGameRequest& from);
  
  inline JoinGameRequest& operator=(const JoinGameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinGameRequest& default_instance();
  
  void Swap(JoinGameRequest* other);
  
  // implements Message ----------------------------------------------
  
  JoinGameRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinGameRequest& from);
  void MergeFrom(const JoinGameRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.game_master.GameHandle game_handle = 1;
  inline bool has_game_handle() const;
  inline void clear_game_handle();
  static const int kGameHandleFieldNumber = 1;
  inline const ::bnet::protocol::game_master::GameHandle& game_handle() const;
  inline ::bnet::protocol::game_master::GameHandle* mutable_game_handle();
  inline ::bnet::protocol::game_master::GameHandle* release_game_handle();
  
  // repeated .bnet.protocol.game_master.Player player = 2;
  inline int player_size() const;
  inline void clear_player();
  static const int kPlayerFieldNumber = 2;
  inline const ::bnet::protocol::game_master::Player& player(int index) const;
  inline ::bnet::protocol::game_master::Player* mutable_player(int index);
  inline ::bnet::protocol::game_master::Player* add_player();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::Player >&
      player() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::Player >*
      mutable_player();
  
  // optional .bnet.protocol.channel.JoinChannelRequest channel_request = 3;
  inline bool has_channel_request() const;
  inline void clear_channel_request();
  static const int kChannelRequestFieldNumber = 3;
  inline const ::bnet::protocol::channel::JoinChannelRequest& channel_request() const;
  inline ::bnet::protocol::channel::JoinChannelRequest* mutable_channel_request();
  inline ::bnet::protocol::channel::JoinChannelRequest* release_channel_request();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.JoinGameRequest)
 private:
  inline void set_has_game_handle();
  inline void clear_has_game_handle();
  inline void set_has_channel_request();
  inline void clear_has_channel_request();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::game_master::GameHandle* game_handle_;
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::Player > player_;
  ::bnet::protocol::channel::JoinChannelRequest* channel_request_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_AssignDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_ShutdownFile_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  
  void InitAsDefaultInstance();
  static JoinGameRequest* default_instance_;
};
// -------------------------------------------------------------------

class JoinGameResponse : public ::google::protobuf::Message {
 public:
  JoinGameResponse();
  virtual ~JoinGameResponse();
  
  JoinGameResponse(const JoinGameResponse& from);
  
  inline JoinGameResponse& operator=(const JoinGameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinGameResponse& default_instance();
  
  void Swap(JoinGameResponse* other);
  
  // implements Message ----------------------------------------------
  
  JoinGameResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinGameResponse& from);
  void MergeFrom(const JoinGameResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .bnet.protocol.game_master.ConnectInfo connect_info = 1;
  inline int connect_info_size() const;
  inline void clear_connect_info();
  static const int kConnectInfoFieldNumber = 1;
  inline const ::bnet::protocol::game_master::ConnectInfo& connect_info(int index) const;
  inline ::bnet::protocol::game_master::ConnectInfo* mutable_connect_info(int index);
  inline ::bnet::protocol::game_master::ConnectInfo* add_connect_info();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::ConnectInfo >&
      connect_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::ConnectInfo >*
      mutable_connect_info();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.JoinGameResponse)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::ConnectInfo > connect_info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_AssignDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_ShutdownFile_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  
  void InitAsDefaultInstance();
  static JoinGameResponse* default_instance_;
};
// -------------------------------------------------------------------

class ListFactoriesRequest : public ::google::protobuf::Message {
 public:
  ListFactoriesRequest();
  virtual ~ListFactoriesRequest();
  
  ListFactoriesRequest(const ListFactoriesRequest& from);
  
  inline ListFactoriesRequest& operator=(const ListFactoriesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFactoriesRequest& default_instance();
  
  void Swap(ListFactoriesRequest* other);
  
  // implements Message ----------------------------------------------
  
  ListFactoriesRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListFactoriesRequest& from);
  void MergeFrom(const ListFactoriesRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.attribute.AttributeFilter filter = 1;
  inline bool has_filter() const;
  inline void clear_filter();
  static const int kFilterFieldNumber = 1;
  inline const ::bnet::protocol::attribute::AttributeFilter& filter() const;
  inline ::bnet::protocol::attribute::AttributeFilter* mutable_filter();
  inline ::bnet::protocol::attribute::AttributeFilter* release_filter();
  
  // optional uint32 start_index = 2;
  inline bool has_start_index() const;
  inline void clear_start_index();
  static const int kStartIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 start_index() const;
  inline void set_start_index(::google::protobuf::uint32 value);
  
  // optional uint32 max_results = 3;
  inline bool has_max_results() const;
  inline void clear_max_results();
  static const int kMaxResultsFieldNumber = 3;
  inline ::google::protobuf::uint32 max_results() const;
  inline void set_max_results(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.ListFactoriesRequest)
 private:
  inline void set_has_filter();
  inline void clear_has_filter();
  inline void set_has_start_index();
  inline void clear_has_start_index();
  inline void set_has_max_results();
  inline void clear_has_max_results();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::attribute::AttributeFilter* filter_;
  ::google::protobuf::uint32 start_index_;
  ::google::protobuf::uint32 max_results_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_AssignDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_ShutdownFile_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  
  void InitAsDefaultInstance();
  static ListFactoriesRequest* default_instance_;
};
// -------------------------------------------------------------------

class ListFactoriesResponse : public ::google::protobuf::Message {
 public:
  ListFactoriesResponse();
  virtual ~ListFactoriesResponse();
  
  ListFactoriesResponse(const ListFactoriesResponse& from);
  
  inline ListFactoriesResponse& operator=(const ListFactoriesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFactoriesResponse& default_instance();
  
  void Swap(ListFactoriesResponse* other);
  
  // implements Message ----------------------------------------------
  
  ListFactoriesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListFactoriesResponse& from);
  void MergeFrom(const ListFactoriesResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .bnet.protocol.game_master.GameFactoryDescription description = 1;
  inline int description_size() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 1;
  inline const ::bnet::protocol::game_master::GameFactoryDescription& description(int index) const;
  inline ::bnet::protocol::game_master::GameFactoryDescription* mutable_description(int index);
  inline ::bnet::protocol::game_master::GameFactoryDescription* add_description();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::GameFactoryDescription >&
      description() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::GameFactoryDescription >*
      mutable_description();
  
  // optional uint32 total_results = 2;
  inline bool has_total_results() const;
  inline void clear_total_results();
  static const int kTotalResultsFieldNumber = 2;
  inline ::google::protobuf::uint32 total_results() const;
  inline void set_total_results(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.ListFactoriesResponse)
 private:
  inline void set_has_total_results();
  inline void clear_has_total_results();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::GameFactoryDescription > description_;
  ::google::protobuf::uint32 total_results_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_AssignDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_ShutdownFile_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  
  void InitAsDefaultInstance();
  static ListFactoriesResponse* default_instance_;
};
// -------------------------------------------------------------------

class FindGameRequest : public ::google::protobuf::Message {
 public:
  FindGameRequest();
  virtual ~FindGameRequest();
  
  FindGameRequest(const FindGameRequest& from);
  
  inline FindGameRequest& operator=(const FindGameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FindGameRequest& default_instance();
  
  void Swap(FindGameRequest* other);
  
  // implements Message ----------------------------------------------
  
  FindGameRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FindGameRequest& from);
  void MergeFrom(const FindGameRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .bnet.protocol.game_master.Player player = 1;
  inline int player_size() const;
  inline void clear_player();
  static const int kPlayerFieldNumber = 1;
  inline const ::bnet::protocol::game_master::Player& player(int index) const;
  inline ::bnet::protocol::game_master::Player* mutable_player(int index);
  inline ::bnet::protocol::game_master::Player* add_player();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::Player >&
      player() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::Player >*
      mutable_player();
  
  // optional fixed64 factory_id = 2;
  inline bool has_factory_id() const;
  inline void clear_factory_id();
  static const int kFactoryIdFieldNumber = 2;
  inline ::google::protobuf::uint64 factory_id() const;
  inline void set_factory_id(::google::protobuf::uint64 value);
  
  // optional .bnet.protocol.game_master.GameProperties properties = 3;
  inline bool has_properties() const;
  inline void clear_properties();
  static const int kPropertiesFieldNumber = 3;
  inline const ::bnet::protocol::game_master::GameProperties& properties() const;
  inline ::bnet::protocol::game_master::GameProperties* mutable_properties();
  inline ::bnet::protocol::game_master::GameProperties* release_properties();
  
  // required uint64 object_id = 4;
  inline bool has_object_id() const;
  inline void clear_object_id();
  static const int kObjectIdFieldNumber = 4;
  inline ::google::protobuf::uint64 object_id() const;
  inline void set_object_id(::google::protobuf::uint64 value);
  
  // optional .bnet.protocol.channel.CreateChannelRequest channel_request = 5;
  inline bool has_channel_request() const;
  inline void clear_channel_request();
  static const int kChannelRequestFieldNumber = 5;
  inline const ::bnet::protocol::channel::CreateChannelRequest& channel_request() const;
  inline ::bnet::protocol::channel::CreateChannelRequest* mutable_channel_request();
  inline ::bnet::protocol::channel::CreateChannelRequest* release_channel_request();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.FindGameRequest)
 private:
  inline void set_has_factory_id();
  inline void clear_has_factory_id();
  inline void set_has_properties();
  inline void clear_has_properties();
  inline void set_has_object_id();
  inline void clear_has_object_id();
  inline void set_has_channel_request();
  inline void clear_has_channel_request();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::Player > player_;
  ::google::protobuf::uint64 factory_id_;
  ::bnet::protocol::game_master::GameProperties* properties_;
  ::google::protobuf::uint64 object_id_;
  ::bnet::protocol::channel::CreateChannelRequest* channel_request_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_AssignDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_ShutdownFile_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  
  void InitAsDefaultInstance();
  static FindGameRequest* default_instance_;
};
// -------------------------------------------------------------------

class FindGameResponse : public ::google::protobuf::Message {
 public:
  FindGameResponse();
  virtual ~FindGameResponse();
  
  FindGameResponse(const FindGameResponse& from);
  
  inline FindGameResponse& operator=(const FindGameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FindGameResponse& default_instance();
  
  void Swap(FindGameResponse* other);
  
  // implements Message ----------------------------------------------
  
  FindGameResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FindGameResponse& from);
  void MergeFrom(const FindGameResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 request_id = 1;
  inline bool has_request_id() const;
  inline void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  inline ::google::protobuf::uint64 request_id() const;
  inline void set_request_id(::google::protobuf::uint64 value);
  
  // optional fixed64 factory_id = 2;
  inline bool has_factory_id() const;
  inline void clear_factory_id();
  static const int kFactoryIdFieldNumber = 2;
  inline ::google::protobuf::uint64 factory_id() const;
  inline void set_factory_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.FindGameResponse)
 private:
  inline void set_has_request_id();
  inline void clear_has_request_id();
  inline void set_has_factory_id();
  inline void clear_has_factory_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 request_id_;
  ::google::protobuf::uint64 factory_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_AssignDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_ShutdownFile_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  
  void InitAsDefaultInstance();
  static FindGameResponse* default_instance_;
};
// -------------------------------------------------------------------

class CancelFindGameRequest : public ::google::protobuf::Message {
 public:
  CancelFindGameRequest();
  virtual ~CancelFindGameRequest();
  
  CancelFindGameRequest(const CancelFindGameRequest& from);
  
  inline CancelFindGameRequest& operator=(const CancelFindGameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CancelFindGameRequest& default_instance();
  
  void Swap(CancelFindGameRequest* other);
  
  // implements Message ----------------------------------------------
  
  CancelFindGameRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CancelFindGameRequest& from);
  void MergeFrom(const CancelFindGameRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required fixed64 factory_id = 1;
  inline bool has_factory_id() const;
  inline void clear_factory_id();
  static const int kFactoryIdFieldNumber = 1;
  inline ::google::protobuf::uint64 factory_id() const;
  inline void set_factory_id(::google::protobuf::uint64 value);
  
  // required uint64 request_id = 2;
  inline bool has_request_id() const;
  inline void clear_request_id();
  static const int kRequestIdFieldNumber = 2;
  inline ::google::protobuf::uint64 request_id() const;
  inline void set_request_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.CancelFindGameRequest)
 private:
  inline void set_has_factory_id();
  inline void clear_has_factory_id();
  inline void set_has_request_id();
  inline void clear_has_request_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 factory_id_;
  ::google::protobuf::uint64 request_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_AssignDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_ShutdownFile_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  
  void InitAsDefaultInstance();
  static CancelFindGameRequest* default_instance_;
};
// -------------------------------------------------------------------

class GameEndedNotification : public ::google::protobuf::Message {
 public:
  GameEndedNotification();
  virtual ~GameEndedNotification();
  
  GameEndedNotification(const GameEndedNotification& from);
  
  inline GameEndedNotification& operator=(const GameEndedNotification& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameEndedNotification& default_instance();
  
  void Swap(GameEndedNotification* other);
  
  // implements Message ----------------------------------------------
  
  GameEndedNotification* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameEndedNotification& from);
  void MergeFrom(const GameEndedNotification& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.game_master.GameHandle game_handle = 1;
  inline bool has_game_handle() const;
  inline void clear_game_handle();
  static const int kGameHandleFieldNumber = 1;
  inline const ::bnet::protocol::game_master::GameHandle& game_handle() const;
  inline ::bnet::protocol::game_master::GameHandle* mutable_game_handle();
  inline ::bnet::protocol::game_master::GameHandle* release_game_handle();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.GameEndedNotification)
 private:
  inline void set_has_game_handle();
  inline void clear_has_game_handle();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::game_master::GameHandle* game_handle_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_AssignDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_ShutdownFile_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  
  void InitAsDefaultInstance();
  static GameEndedNotification* default_instance_;
};
// -------------------------------------------------------------------

class PlayerLeftNotification : public ::google::protobuf::Message {
 public:
  PlayerLeftNotification();
  virtual ~PlayerLeftNotification();
  
  PlayerLeftNotification(const PlayerLeftNotification& from);
  
  inline PlayerLeftNotification& operator=(const PlayerLeftNotification& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLeftNotification& default_instance();
  
  void Swap(PlayerLeftNotification* other);
  
  // implements Message ----------------------------------------------
  
  PlayerLeftNotification* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerLeftNotification& from);
  void MergeFrom(const PlayerLeftNotification& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.game_master.GameHandle game_handle = 1;
  inline bool has_game_handle() const;
  inline void clear_game_handle();
  static const int kGameHandleFieldNumber = 1;
  inline const ::bnet::protocol::game_master::GameHandle& game_handle() const;
  inline ::bnet::protocol::game_master::GameHandle* mutable_game_handle();
  inline ::bnet::protocol::game_master::GameHandle* release_game_handle();
  
  // required .bnet.protocol.EntityId toon_id = 2;
  inline bool has_toon_id() const;
  inline void clear_toon_id();
  static const int kToonIdFieldNumber = 2;
  inline const ::bnet::protocol::EntityId& toon_id() const;
  inline ::bnet::protocol::EntityId* mutable_toon_id();
  inline ::bnet::protocol::EntityId* release_toon_id();
  
  // optional uint32 reason = 3;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 3;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.PlayerLeftNotification)
 private:
  inline void set_has_game_handle();
  inline void clear_has_game_handle();
  inline void set_has_toon_id();
  inline void clear_has_toon_id();
  inline void set_has_reason();
  inline void clear_has_reason();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::game_master::GameHandle* game_handle_;
  ::bnet::protocol::EntityId* toon_id_;
  ::google::protobuf::uint32 reason_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_AssignDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_ShutdownFile_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  
  void InitAsDefaultInstance();
  static PlayerLeftNotification* default_instance_;
};
// -------------------------------------------------------------------

class RegisterServerRequest : public ::google::protobuf::Message {
 public:
  RegisterServerRequest();
  virtual ~RegisterServerRequest();
  
  RegisterServerRequest(const RegisterServerRequest& from);
  
  inline RegisterServerRequest& operator=(const RegisterServerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterServerRequest& default_instance();
  
  void Swap(RegisterServerRequest* other);
  
  // implements Message ----------------------------------------------
  
  RegisterServerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RegisterServerRequest& from);
  void MergeFrom(const RegisterServerRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .bnet.protocol.attribute.Attribute attribute = 1;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 1;
  inline const ::bnet::protocol::attribute::Attribute& attribute(int index) const;
  inline ::bnet::protocol::attribute::Attribute* mutable_attribute(int index);
  inline ::bnet::protocol::attribute::Attribute* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >*
      mutable_attribute();
  
  // optional .bnet.protocol.server_pool.ServerState state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline const ::bnet::protocol::server_pool::ServerState& state() const;
  inline ::bnet::protocol::server_pool::ServerState* mutable_state();
  inline ::bnet::protocol::server_pool::ServerState* release_state();
  
  // required fixed32 program_id = 3;
  inline bool has_program_id() const;
  inline void clear_program_id();
  static const int kProgramIdFieldNumber = 3;
  inline ::google::protobuf::uint32 program_id() const;
  inline void set_program_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.RegisterServerRequest)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_program_id();
  inline void clear_has_program_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute > attribute_;
  ::bnet::protocol::server_pool::ServerState* state_;
  ::google::protobuf::uint32 program_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_AssignDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_ShutdownFile_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  
  void InitAsDefaultInstance();
  static RegisterServerRequest* default_instance_;
};
// -------------------------------------------------------------------

class UnregisterServerRequest : public ::google::protobuf::Message {
 public:
  UnregisterServerRequest();
  virtual ~UnregisterServerRequest();
  
  UnregisterServerRequest(const UnregisterServerRequest& from);
  
  inline UnregisterServerRequest& operator=(const UnregisterServerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnregisterServerRequest& default_instance();
  
  void Swap(UnregisterServerRequest* other);
  
  // implements Message ----------------------------------------------
  
  UnregisterServerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnregisterServerRequest& from);
  void MergeFrom(const UnregisterServerRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.UnregisterServerRequest)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_AssignDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_ShutdownFile_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  
  void InitAsDefaultInstance();
  static UnregisterServerRequest* default_instance_;
};
// -------------------------------------------------------------------

class RegisterUtilitiesRequest : public ::google::protobuf::Message {
 public:
  RegisterUtilitiesRequest();
  virtual ~RegisterUtilitiesRequest();
  
  RegisterUtilitiesRequest(const RegisterUtilitiesRequest& from);
  
  inline RegisterUtilitiesRequest& operator=(const RegisterUtilitiesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterUtilitiesRequest& default_instance();
  
  void Swap(RegisterUtilitiesRequest* other);
  
  // implements Message ----------------------------------------------
  
  RegisterUtilitiesRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RegisterUtilitiesRequest& from);
  void MergeFrom(const RegisterUtilitiesRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .bnet.protocol.attribute.Attribute attribute = 1;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 1;
  inline const ::bnet::protocol::attribute::Attribute& attribute(int index) const;
  inline ::bnet::protocol::attribute::Attribute* mutable_attribute(int index);
  inline ::bnet::protocol::attribute::Attribute* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >*
      mutable_attribute();
  
  // optional .bnet.protocol.server_pool.ServerState state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline const ::bnet::protocol::server_pool::ServerState& state() const;
  inline ::bnet::protocol::server_pool::ServerState* mutable_state();
  inline ::bnet::protocol::server_pool::ServerState* release_state();
  
  // required fixed32 program_id = 3;
  inline bool has_program_id() const;
  inline void clear_program_id();
  static const int kProgramIdFieldNumber = 3;
  inline ::google::protobuf::uint32 program_id() const;
  inline void set_program_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.RegisterUtilitiesRequest)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_program_id();
  inline void clear_has_program_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute > attribute_;
  ::bnet::protocol::server_pool::ServerState* state_;
  ::google::protobuf::uint32 program_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_AssignDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_ShutdownFile_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  
  void InitAsDefaultInstance();
  static RegisterUtilitiesRequest* default_instance_;
};
// -------------------------------------------------------------------

class UnregisterUtilitiesRequest : public ::google::protobuf::Message {
 public:
  UnregisterUtilitiesRequest();
  virtual ~UnregisterUtilitiesRequest();
  
  UnregisterUtilitiesRequest(const UnregisterUtilitiesRequest& from);
  
  inline UnregisterUtilitiesRequest& operator=(const UnregisterUtilitiesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnregisterUtilitiesRequest& default_instance();
  
  void Swap(UnregisterUtilitiesRequest* other);
  
  // implements Message ----------------------------------------------
  
  UnregisterUtilitiesRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnregisterUtilitiesRequest& from);
  void MergeFrom(const UnregisterUtilitiesRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.UnregisterUtilitiesRequest)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_AssignDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_ShutdownFile_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  
  void InitAsDefaultInstance();
  static UnregisterUtilitiesRequest* default_instance_;
};
// -------------------------------------------------------------------

class SubscribeRequest : public ::google::protobuf::Message {
 public:
  SubscribeRequest();
  virtual ~SubscribeRequest();
  
  SubscribeRequest(const SubscribeRequest& from);
  
  inline SubscribeRequest& operator=(const SubscribeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubscribeRequest& default_instance();
  
  void Swap(SubscribeRequest* other);
  
  // implements Message ----------------------------------------------
  
  SubscribeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubscribeRequest& from);
  void MergeFrom(const SubscribeRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 object_id = 1;
  inline bool has_object_id() const;
  inline void clear_object_id();
  static const int kObjectIdFieldNumber = 1;
  inline ::google::protobuf::uint64 object_id() const;
  inline void set_object_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.SubscribeRequest)
 private:
  inline void set_has_object_id();
  inline void clear_has_object_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 object_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_AssignDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_ShutdownFile_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  
  void InitAsDefaultInstance();
  static SubscribeRequest* default_instance_;
};
// -------------------------------------------------------------------

class SubscribeResponse : public ::google::protobuf::Message {
 public:
  SubscribeResponse();
  virtual ~SubscribeResponse();
  
  SubscribeResponse(const SubscribeResponse& from);
  
  inline SubscribeResponse& operator=(const SubscribeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubscribeResponse& default_instance();
  
  void Swap(SubscribeResponse* other);
  
  // implements Message ----------------------------------------------
  
  SubscribeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubscribeResponse& from);
  void MergeFrom(const SubscribeResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 subscription_id = 1;
  inline bool has_subscription_id() const;
  inline void clear_subscription_id();
  static const int kSubscriptionIdFieldNumber = 1;
  inline ::google::protobuf::uint64 subscription_id() const;
  inline void set_subscription_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.SubscribeResponse)
 private:
  inline void set_has_subscription_id();
  inline void clear_has_subscription_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 subscription_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_AssignDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_ShutdownFile_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  
  void InitAsDefaultInstance();
  static SubscribeResponse* default_instance_;
};
// -------------------------------------------------------------------

class UnsubscribeRequest : public ::google::protobuf::Message {
 public:
  UnsubscribeRequest();
  virtual ~UnsubscribeRequest();
  
  UnsubscribeRequest(const UnsubscribeRequest& from);
  
  inline UnsubscribeRequest& operator=(const UnsubscribeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnsubscribeRequest& default_instance();
  
  void Swap(UnsubscribeRequest* other);
  
  // implements Message ----------------------------------------------
  
  UnsubscribeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnsubscribeRequest& from);
  void MergeFrom(const UnsubscribeRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 subscription_id = 1;
  inline bool has_subscription_id() const;
  inline void clear_subscription_id();
  static const int kSubscriptionIdFieldNumber = 1;
  inline ::google::protobuf::uint64 subscription_id() const;
  inline void set_subscription_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.UnsubscribeRequest)
 private:
  inline void set_has_subscription_id();
  inline void clear_has_subscription_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 subscription_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_AssignDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_ShutdownFile_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  
  void InitAsDefaultInstance();
  static UnsubscribeRequest* default_instance_;
};
// -------------------------------------------------------------------

class ChangeGameRequest : public ::google::protobuf::Message {
 public:
  ChangeGameRequest();
  virtual ~ChangeGameRequest();
  
  ChangeGameRequest(const ChangeGameRequest& from);
  
  inline ChangeGameRequest& operator=(const ChangeGameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeGameRequest& default_instance();
  
  void Swap(ChangeGameRequest* other);
  
  // implements Message ----------------------------------------------
  
  ChangeGameRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeGameRequest& from);
  void MergeFrom(const ChangeGameRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.game_master.GameHandle game_handle = 1;
  inline bool has_game_handle() const;
  inline void clear_game_handle();
  static const int kGameHandleFieldNumber = 1;
  inline const ::bnet::protocol::game_master::GameHandle& game_handle() const;
  inline ::bnet::protocol::game_master::GameHandle* mutable_game_handle();
  inline ::bnet::protocol::game_master::GameHandle* release_game_handle();
  
  // optional bool open = 2;
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 2;
  inline bool open() const;
  inline void set_open(bool value);
  
  // repeated .bnet.protocol.attribute.Attribute attribute = 3;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 3;
  inline const ::bnet::protocol::attribute::Attribute& attribute(int index) const;
  inline ::bnet::protocol::attribute::Attribute* mutable_attribute(int index);
  inline ::bnet::protocol::attribute::Attribute* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >*
      mutable_attribute();
  
  // optional bool replace = 4;
  inline bool has_replace() const;
  inline void clear_replace();
  static const int kReplaceFieldNumber = 4;
  inline bool replace() const;
  inline void set_replace(bool value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.ChangeGameRequest)
 private:
  inline void set_has_game_handle();
  inline void clear_has_game_handle();
  inline void set_has_open();
  inline void clear_has_open();
  inline void set_has_replace();
  inline void clear_has_replace();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::game_master::GameHandle* game_handle_;
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute > attribute_;
  bool open_;
  bool replace_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_AssignDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_ShutdownFile_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  
  void InitAsDefaultInstance();
  static ChangeGameRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetFactoryInfoRequest : public ::google::protobuf::Message {
 public:
  GetFactoryInfoRequest();
  virtual ~GetFactoryInfoRequest();
  
  GetFactoryInfoRequest(const GetFactoryInfoRequest& from);
  
  inline GetFactoryInfoRequest& operator=(const GetFactoryInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFactoryInfoRequest& default_instance();
  
  void Swap(GetFactoryInfoRequest* other);
  
  // implements Message ----------------------------------------------
  
  GetFactoryInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFactoryInfoRequest& from);
  void MergeFrom(const GetFactoryInfoRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required fixed64 factory_id = 1;
  inline bool has_factory_id() const;
  inline void clear_factory_id();
  static const int kFactoryIdFieldNumber = 1;
  inline ::google::protobuf::uint64 factory_id() const;
  inline void set_factory_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.GetFactoryInfoRequest)
 private:
  inline void set_has_factory_id();
  inline void clear_has_factory_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 factory_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_AssignDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_ShutdownFile_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  
  void InitAsDefaultInstance();
  static GetFactoryInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetFactoryInfoResponse : public ::google::protobuf::Message {
 public:
  GetFactoryInfoResponse();
  virtual ~GetFactoryInfoResponse();
  
  GetFactoryInfoResponse(const GetFactoryInfoResponse& from);
  
  inline GetFactoryInfoResponse& operator=(const GetFactoryInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFactoryInfoResponse& default_instance();
  
  void Swap(GetFactoryInfoResponse* other);
  
  // implements Message ----------------------------------------------
  
  GetFactoryInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFactoryInfoResponse& from);
  void MergeFrom(const GetFactoryInfoResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .bnet.protocol.attribute.Attribute attribute = 1;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 1;
  inline const ::bnet::protocol::attribute::Attribute& attribute(int index) const;
  inline ::bnet::protocol::attribute::Attribute* mutable_attribute(int index);
  inline ::bnet::protocol::attribute::Attribute* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >*
      mutable_attribute();
  
  // repeated .bnet.protocol.game_master.GameStatsBucket stats_bucket = 2;
  inline int stats_bucket_size() const;
  inline void clear_stats_bucket();
  static const int kStatsBucketFieldNumber = 2;
  inline const ::bnet::protocol::game_master::GameStatsBucket& stats_bucket(int index) const;
  inline ::bnet::protocol::game_master::GameStatsBucket* mutable_stats_bucket(int index);
  inline ::bnet::protocol::game_master::GameStatsBucket* add_stats_bucket();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::GameStatsBucket >&
      stats_bucket() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::GameStatsBucket >*
      mutable_stats_bucket();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.GetFactoryInfoResponse)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute > attribute_;
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::GameStatsBucket > stats_bucket_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_AssignDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_ShutdownFile_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  
  void InitAsDefaultInstance();
  static GetFactoryInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetGameStatsRequest : public ::google::protobuf::Message {
 public:
  GetGameStatsRequest();
  virtual ~GetGameStatsRequest();
  
  GetGameStatsRequest(const GetGameStatsRequest& from);
  
  inline GetGameStatsRequest& operator=(const GetGameStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGameStatsRequest& default_instance();
  
  void Swap(GetGameStatsRequest* other);
  
  // implements Message ----------------------------------------------
  
  GetGameStatsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGameStatsRequest& from);
  void MergeFrom(const GetGameStatsRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required fixed64 factory_id = 1;
  inline bool has_factory_id() const;
  inline void clear_factory_id();
  static const int kFactoryIdFieldNumber = 1;
  inline ::google::protobuf::uint64 factory_id() const;
  inline void set_factory_id(::google::protobuf::uint64 value);
  
  // required .bnet.protocol.attribute.AttributeFilter filter = 2;
  inline bool has_filter() const;
  inline void clear_filter();
  static const int kFilterFieldNumber = 2;
  inline const ::bnet::protocol::attribute::AttributeFilter& filter() const;
  inline ::bnet::protocol::attribute::AttributeFilter* mutable_filter();
  inline ::bnet::protocol::attribute::AttributeFilter* release_filter();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.GetGameStatsRequest)
 private:
  inline void set_has_factory_id();
  inline void clear_has_factory_id();
  inline void set_has_filter();
  inline void clear_has_filter();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 factory_id_;
  ::bnet::protocol::attribute::AttributeFilter* filter_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_AssignDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_ShutdownFile_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  
  void InitAsDefaultInstance();
  static GetGameStatsRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetGameStatsResponse : public ::google::protobuf::Message {
 public:
  GetGameStatsResponse();
  virtual ~GetGameStatsResponse();
  
  GetGameStatsResponse(const GetGameStatsResponse& from);
  
  inline GetGameStatsResponse& operator=(const GetGameStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGameStatsResponse& default_instance();
  
  void Swap(GetGameStatsResponse* other);
  
  // implements Message ----------------------------------------------
  
  GetGameStatsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGameStatsResponse& from);
  void MergeFrom(const GetGameStatsResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .bnet.protocol.game_master.GameStatsBucket stats_bucket = 1;
  inline int stats_bucket_size() const;
  inline void clear_stats_bucket();
  static const int kStatsBucketFieldNumber = 1;
  inline const ::bnet::protocol::game_master::GameStatsBucket& stats_bucket(int index) const;
  inline ::bnet::protocol::game_master::GameStatsBucket* mutable_stats_bucket(int index);
  inline ::bnet::protocol::game_master::GameStatsBucket* add_stats_bucket();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::GameStatsBucket >&
      stats_bucket() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::GameStatsBucket >*
      mutable_stats_bucket();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.GetGameStatsResponse)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::GameStatsBucket > stats_bucket_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_AssignDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_ShutdownFile_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  
  void InitAsDefaultInstance();
  static GetGameStatsResponse* default_instance_;
};
// -------------------------------------------------------------------

class FactoryUpdateNotification : public ::google::protobuf::Message {
 public:
  FactoryUpdateNotification();
  virtual ~FactoryUpdateNotification();
  
  FactoryUpdateNotification(const FactoryUpdateNotification& from);
  
  inline FactoryUpdateNotification& operator=(const FactoryUpdateNotification& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FactoryUpdateNotification& default_instance();
  
  void Swap(FactoryUpdateNotification* other);
  
  // implements Message ----------------------------------------------
  
  FactoryUpdateNotification* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FactoryUpdateNotification& from);
  void MergeFrom(const FactoryUpdateNotification& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef FactoryUpdateNotification_Operation Operation;
  static const Operation ADD = FactoryUpdateNotification_Operation_ADD;
  static const Operation REMOVE = FactoryUpdateNotification_Operation_REMOVE;
  static const Operation CHANGE = FactoryUpdateNotification_Operation_CHANGE;
  static inline bool Operation_IsValid(int value) {
    return FactoryUpdateNotification_Operation_IsValid(value);
  }
  static const Operation Operation_MIN =
    FactoryUpdateNotification_Operation_Operation_MIN;
  static const Operation Operation_MAX =
    FactoryUpdateNotification_Operation_Operation_MAX;
  static const int Operation_ARRAYSIZE =
    FactoryUpdateNotification_Operation_Operation_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Operation_descriptor() {
    return FactoryUpdateNotification_Operation_descriptor();
  }
  static inline const ::std::string& Operation_Name(Operation value) {
    return FactoryUpdateNotification_Operation_Name(value);
  }
  static inline bool Operation_Parse(const ::std::string& name,
      Operation* value) {
    return FactoryUpdateNotification_Operation_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.game_master.FactoryUpdateNotification.Operation op = 1;
  inline bool has_op() const;
  inline void clear_op();
  static const int kOpFieldNumber = 1;
  inline ::bnet::protocol::game_master::FactoryUpdateNotification_Operation op() const;
  inline void set_op(::bnet::protocol::game_master::FactoryUpdateNotification_Operation value);
  
  // required .bnet.protocol.game_master.GameFactoryDescription description = 2;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 2;
  inline const ::bnet::protocol::game_master::GameFactoryDescription& description() const;
  inline ::bnet::protocol::game_master::GameFactoryDescription* mutable_description();
  inline ::bnet::protocol::game_master::GameFactoryDescription* release_description();
  
  // optional fixed32 program_id = 3;
  inline bool has_program_id() const;
  inline void clear_program_id();
  static const int kProgramIdFieldNumber = 3;
  inline ::google::protobuf::uint32 program_id() const;
  inline void set_program_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.FactoryUpdateNotification)
 private:
  inline void set_has_op();
  inline void clear_has_op();
  inline void set_has_description();
  inline void clear_has_description();
  inline void set_has_program_id();
  inline void clear_has_program_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::game_master::GameFactoryDescription* description_;
  int op_;
  ::google::protobuf::uint32 program_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_AssignDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_ShutdownFile_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  
  void InitAsDefaultInstance();
  static FactoryUpdateNotification* default_instance_;
};
// -------------------------------------------------------------------

class GameFoundNotification : public ::google::protobuf::Message {
 public:
  GameFoundNotification();
  virtual ~GameFoundNotification();
  
  GameFoundNotification(const GameFoundNotification& from);
  
  inline GameFoundNotification& operator=(const GameFoundNotification& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameFoundNotification& default_instance();
  
  void Swap(GameFoundNotification* other);
  
  // implements Message ----------------------------------------------
  
  GameFoundNotification* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameFoundNotification& from);
  void MergeFrom(const GameFoundNotification& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 request_id = 1;
  inline bool has_request_id() const;
  inline void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  inline ::google::protobuf::uint64 request_id() const;
  inline void set_request_id(::google::protobuf::uint64 value);
  
  // optional uint32 error_code = 2;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 error_code() const;
  inline void set_error_code(::google::protobuf::uint32 value);
  
  // optional .bnet.protocol.game_master.GameHandle game_handle = 3;
  inline bool has_game_handle() const;
  inline void clear_game_handle();
  static const int kGameHandleFieldNumber = 3;
  inline const ::bnet::protocol::game_master::GameHandle& game_handle() const;
  inline ::bnet::protocol::game_master::GameHandle* mutable_game_handle();
  inline ::bnet::protocol::game_master::GameHandle* release_game_handle();
  
  // repeated .bnet.protocol.game_master.ConnectInfo connect_info = 4;
  inline int connect_info_size() const;
  inline void clear_connect_info();
  static const int kConnectInfoFieldNumber = 4;
  inline const ::bnet::protocol::game_master::ConnectInfo& connect_info(int index) const;
  inline ::bnet::protocol::game_master::ConnectInfo* mutable_connect_info(int index);
  inline ::bnet::protocol::game_master::ConnectInfo* add_connect_info();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::ConnectInfo >&
      connect_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::ConnectInfo >*
      mutable_connect_info();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.GameFoundNotification)
 private:
  inline void set_has_request_id();
  inline void clear_has_request_id();
  inline void set_has_error_code();
  inline void clear_has_error_code();
  inline void set_has_game_handle();
  inline void clear_has_game_handle();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 request_id_;
  ::bnet::protocol::game_master::GameHandle* game_handle_;
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::ConnectInfo > connect_info_;
  ::google::protobuf::uint32 error_code_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_AssignDesc_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  friend void protobuf_ShutdownFile_service_2fgame_5fmaster_2fgame_5fmaster_2eproto();
  
  void InitAsDefaultInstance();
  static GameFoundNotification* default_instance_;
};
// ===================================================================


// ===================================================================

// JoinGameRequest

// required .bnet.protocol.game_master.GameHandle game_handle = 1;
inline bool JoinGameRequest::has_game_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinGameRequest::set_has_game_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinGameRequest::clear_has_game_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinGameRequest::clear_game_handle() {
  if (game_handle_ != NULL) game_handle_->::bnet::protocol::game_master::GameHandle::Clear();
  clear_has_game_handle();
}
inline const ::bnet::protocol::game_master::GameHandle& JoinGameRequest::game_handle() const {
  return game_handle_ != NULL ? *game_handle_ : *default_instance_->game_handle_;
}
inline ::bnet::protocol::game_master::GameHandle* JoinGameRequest::mutable_game_handle() {
  set_has_game_handle();
  if (game_handle_ == NULL) game_handle_ = new ::bnet::protocol::game_master::GameHandle;
  return game_handle_;
}
inline ::bnet::protocol::game_master::GameHandle* JoinGameRequest::release_game_handle() {
  clear_has_game_handle();
  ::bnet::protocol::game_master::GameHandle* temp = game_handle_;
  game_handle_ = NULL;
  return temp;
}

// repeated .bnet.protocol.game_master.Player player = 2;
inline int JoinGameRequest::player_size() const {
  return player_.size();
}
inline void JoinGameRequest::clear_player() {
  player_.Clear();
}
inline const ::bnet::protocol::game_master::Player& JoinGameRequest::player(int index) const {
  return player_.Get(index);
}
inline ::bnet::protocol::game_master::Player* JoinGameRequest::mutable_player(int index) {
  return player_.Mutable(index);
}
inline ::bnet::protocol::game_master::Player* JoinGameRequest::add_player() {
  return player_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::Player >&
JoinGameRequest::player() const {
  return player_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::Player >*
JoinGameRequest::mutable_player() {
  return &player_;
}

// optional .bnet.protocol.channel.JoinChannelRequest channel_request = 3;
inline bool JoinGameRequest::has_channel_request() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JoinGameRequest::set_has_channel_request() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JoinGameRequest::clear_has_channel_request() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JoinGameRequest::clear_channel_request() {
  if (channel_request_ != NULL) channel_request_->::bnet::protocol::channel::JoinChannelRequest::Clear();
  clear_has_channel_request();
}
inline const ::bnet::protocol::channel::JoinChannelRequest& JoinGameRequest::channel_request() const {
  return channel_request_ != NULL ? *channel_request_ : *default_instance_->channel_request_;
}
inline ::bnet::protocol::channel::JoinChannelRequest* JoinGameRequest::mutable_channel_request() {
  set_has_channel_request();
  if (channel_request_ == NULL) channel_request_ = new ::bnet::protocol::channel::JoinChannelRequest;
  return channel_request_;
}
inline ::bnet::protocol::channel::JoinChannelRequest* JoinGameRequest::release_channel_request() {
  clear_has_channel_request();
  ::bnet::protocol::channel::JoinChannelRequest* temp = channel_request_;
  channel_request_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// JoinGameResponse

// repeated .bnet.protocol.game_master.ConnectInfo connect_info = 1;
inline int JoinGameResponse::connect_info_size() const {
  return connect_info_.size();
}
inline void JoinGameResponse::clear_connect_info() {
  connect_info_.Clear();
}
inline const ::bnet::protocol::game_master::ConnectInfo& JoinGameResponse::connect_info(int index) const {
  return connect_info_.Get(index);
}
inline ::bnet::protocol::game_master::ConnectInfo* JoinGameResponse::mutable_connect_info(int index) {
  return connect_info_.Mutable(index);
}
inline ::bnet::protocol::game_master::ConnectInfo* JoinGameResponse::add_connect_info() {
  return connect_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::ConnectInfo >&
JoinGameResponse::connect_info() const {
  return connect_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::ConnectInfo >*
JoinGameResponse::mutable_connect_info() {
  return &connect_info_;
}

// -------------------------------------------------------------------

// ListFactoriesRequest

// required .bnet.protocol.attribute.AttributeFilter filter = 1;
inline bool ListFactoriesRequest::has_filter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ListFactoriesRequest::set_has_filter() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ListFactoriesRequest::clear_has_filter() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ListFactoriesRequest::clear_filter() {
  if (filter_ != NULL) filter_->::bnet::protocol::attribute::AttributeFilter::Clear();
  clear_has_filter();
}
inline const ::bnet::protocol::attribute::AttributeFilter& ListFactoriesRequest::filter() const {
  return filter_ != NULL ? *filter_ : *default_instance_->filter_;
}
inline ::bnet::protocol::attribute::AttributeFilter* ListFactoriesRequest::mutable_filter() {
  set_has_filter();
  if (filter_ == NULL) filter_ = new ::bnet::protocol::attribute::AttributeFilter;
  return filter_;
}
inline ::bnet::protocol::attribute::AttributeFilter* ListFactoriesRequest::release_filter() {
  clear_has_filter();
  ::bnet::protocol::attribute::AttributeFilter* temp = filter_;
  filter_ = NULL;
  return temp;
}

// optional uint32 start_index = 2;
inline bool ListFactoriesRequest::has_start_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ListFactoriesRequest::set_has_start_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ListFactoriesRequest::clear_has_start_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ListFactoriesRequest::clear_start_index() {
  start_index_ = 0u;
  clear_has_start_index();
}
inline ::google::protobuf::uint32 ListFactoriesRequest::start_index() const {
  return start_index_;
}
inline void ListFactoriesRequest::set_start_index(::google::protobuf::uint32 value) {
  set_has_start_index();
  start_index_ = value;
}

// optional uint32 max_results = 3;
inline bool ListFactoriesRequest::has_max_results() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ListFactoriesRequest::set_has_max_results() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ListFactoriesRequest::clear_has_max_results() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ListFactoriesRequest::clear_max_results() {
  max_results_ = 0u;
  clear_has_max_results();
}
inline ::google::protobuf::uint32 ListFactoriesRequest::max_results() const {
  return max_results_;
}
inline void ListFactoriesRequest::set_max_results(::google::protobuf::uint32 value) {
  set_has_max_results();
  max_results_ = value;
}

// -------------------------------------------------------------------

// ListFactoriesResponse

// repeated .bnet.protocol.game_master.GameFactoryDescription description = 1;
inline int ListFactoriesResponse::description_size() const {
  return description_.size();
}
inline void ListFactoriesResponse::clear_description() {
  description_.Clear();
}
inline const ::bnet::protocol::game_master::GameFactoryDescription& ListFactoriesResponse::description(int index) const {
  return description_.Get(index);
}
inline ::bnet::protocol::game_master::GameFactoryDescription* ListFactoriesResponse::mutable_description(int index) {
  return description_.Mutable(index);
}
inline ::bnet::protocol::game_master::GameFactoryDescription* ListFactoriesResponse::add_description() {
  return description_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::GameFactoryDescription >&
ListFactoriesResponse::description() const {
  return description_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::GameFactoryDescription >*
ListFactoriesResponse::mutable_description() {
  return &description_;
}

// optional uint32 total_results = 2;
inline bool ListFactoriesResponse::has_total_results() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ListFactoriesResponse::set_has_total_results() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ListFactoriesResponse::clear_has_total_results() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ListFactoriesResponse::clear_total_results() {
  total_results_ = 0u;
  clear_has_total_results();
}
inline ::google::protobuf::uint32 ListFactoriesResponse::total_results() const {
  return total_results_;
}
inline void ListFactoriesResponse::set_total_results(::google::protobuf::uint32 value) {
  set_has_total_results();
  total_results_ = value;
}

// -------------------------------------------------------------------

// FindGameRequest

// repeated .bnet.protocol.game_master.Player player = 1;
inline int FindGameRequest::player_size() const {
  return player_.size();
}
inline void FindGameRequest::clear_player() {
  player_.Clear();
}
inline const ::bnet::protocol::game_master::Player& FindGameRequest::player(int index) const {
  return player_.Get(index);
}
inline ::bnet::protocol::game_master::Player* FindGameRequest::mutable_player(int index) {
  return player_.Mutable(index);
}
inline ::bnet::protocol::game_master::Player* FindGameRequest::add_player() {
  return player_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::Player >&
FindGameRequest::player() const {
  return player_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::Player >*
FindGameRequest::mutable_player() {
  return &player_;
}

// optional fixed64 factory_id = 2;
inline bool FindGameRequest::has_factory_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FindGameRequest::set_has_factory_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FindGameRequest::clear_has_factory_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FindGameRequest::clear_factory_id() {
  factory_id_ = GOOGLE_ULONGLONG(0);
  clear_has_factory_id();
}
inline ::google::protobuf::uint64 FindGameRequest::factory_id() const {
  return factory_id_;
}
inline void FindGameRequest::set_factory_id(::google::protobuf::uint64 value) {
  set_has_factory_id();
  factory_id_ = value;
}

// optional .bnet.protocol.game_master.GameProperties properties = 3;
inline bool FindGameRequest::has_properties() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FindGameRequest::set_has_properties() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FindGameRequest::clear_has_properties() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FindGameRequest::clear_properties() {
  if (properties_ != NULL) properties_->::bnet::protocol::game_master::GameProperties::Clear();
  clear_has_properties();
}
inline const ::bnet::protocol::game_master::GameProperties& FindGameRequest::properties() const {
  return properties_ != NULL ? *properties_ : *default_instance_->properties_;
}
inline ::bnet::protocol::game_master::GameProperties* FindGameRequest::mutable_properties() {
  set_has_properties();
  if (properties_ == NULL) properties_ = new ::bnet::protocol::game_master::GameProperties;
  return properties_;
}
inline ::bnet::protocol::game_master::GameProperties* FindGameRequest::release_properties() {
  clear_has_properties();
  ::bnet::protocol::game_master::GameProperties* temp = properties_;
  properties_ = NULL;
  return temp;
}

// required uint64 object_id = 4;
inline bool FindGameRequest::has_object_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FindGameRequest::set_has_object_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FindGameRequest::clear_has_object_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FindGameRequest::clear_object_id() {
  object_id_ = GOOGLE_ULONGLONG(0);
  clear_has_object_id();
}
inline ::google::protobuf::uint64 FindGameRequest::object_id() const {
  return object_id_;
}
inline void FindGameRequest::set_object_id(::google::protobuf::uint64 value) {
  set_has_object_id();
  object_id_ = value;
}

// optional .bnet.protocol.channel.CreateChannelRequest channel_request = 5;
inline bool FindGameRequest::has_channel_request() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FindGameRequest::set_has_channel_request() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FindGameRequest::clear_has_channel_request() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FindGameRequest::clear_channel_request() {
  if (channel_request_ != NULL) channel_request_->::bnet::protocol::channel::CreateChannelRequest::Clear();
  clear_has_channel_request();
}
inline const ::bnet::protocol::channel::CreateChannelRequest& FindGameRequest::channel_request() const {
  return channel_request_ != NULL ? *channel_request_ : *default_instance_->channel_request_;
}
inline ::bnet::protocol::channel::CreateChannelRequest* FindGameRequest::mutable_channel_request() {
  set_has_channel_request();
  if (channel_request_ == NULL) channel_request_ = new ::bnet::protocol::channel::CreateChannelRequest;
  return channel_request_;
}
inline ::bnet::protocol::channel::CreateChannelRequest* FindGameRequest::release_channel_request() {
  clear_has_channel_request();
  ::bnet::protocol::channel::CreateChannelRequest* temp = channel_request_;
  channel_request_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// FindGameResponse

// optional uint64 request_id = 1;
inline bool FindGameResponse::has_request_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FindGameResponse::set_has_request_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FindGameResponse::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FindGameResponse::clear_request_id() {
  request_id_ = GOOGLE_ULONGLONG(0);
  clear_has_request_id();
}
inline ::google::protobuf::uint64 FindGameResponse::request_id() const {
  return request_id_;
}
inline void FindGameResponse::set_request_id(::google::protobuf::uint64 value) {
  set_has_request_id();
  request_id_ = value;
}

// optional fixed64 factory_id = 2;
inline bool FindGameResponse::has_factory_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FindGameResponse::set_has_factory_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FindGameResponse::clear_has_factory_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FindGameResponse::clear_factory_id() {
  factory_id_ = GOOGLE_ULONGLONG(0);
  clear_has_factory_id();
}
inline ::google::protobuf::uint64 FindGameResponse::factory_id() const {
  return factory_id_;
}
inline void FindGameResponse::set_factory_id(::google::protobuf::uint64 value) {
  set_has_factory_id();
  factory_id_ = value;
}

// -------------------------------------------------------------------

// CancelFindGameRequest

// required fixed64 factory_id = 1;
inline bool CancelFindGameRequest::has_factory_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CancelFindGameRequest::set_has_factory_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CancelFindGameRequest::clear_has_factory_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CancelFindGameRequest::clear_factory_id() {
  factory_id_ = GOOGLE_ULONGLONG(0);
  clear_has_factory_id();
}
inline ::google::protobuf::uint64 CancelFindGameRequest::factory_id() const {
  return factory_id_;
}
inline void CancelFindGameRequest::set_factory_id(::google::protobuf::uint64 value) {
  set_has_factory_id();
  factory_id_ = value;
}

// required uint64 request_id = 2;
inline bool CancelFindGameRequest::has_request_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CancelFindGameRequest::set_has_request_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CancelFindGameRequest::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CancelFindGameRequest::clear_request_id() {
  request_id_ = GOOGLE_ULONGLONG(0);
  clear_has_request_id();
}
inline ::google::protobuf::uint64 CancelFindGameRequest::request_id() const {
  return request_id_;
}
inline void CancelFindGameRequest::set_request_id(::google::protobuf::uint64 value) {
  set_has_request_id();
  request_id_ = value;
}

// -------------------------------------------------------------------

// GameEndedNotification

// required .bnet.protocol.game_master.GameHandle game_handle = 1;
inline bool GameEndedNotification::has_game_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameEndedNotification::set_has_game_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameEndedNotification::clear_has_game_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameEndedNotification::clear_game_handle() {
  if (game_handle_ != NULL) game_handle_->::bnet::protocol::game_master::GameHandle::Clear();
  clear_has_game_handle();
}
inline const ::bnet::protocol::game_master::GameHandle& GameEndedNotification::game_handle() const {
  return game_handle_ != NULL ? *game_handle_ : *default_instance_->game_handle_;
}
inline ::bnet::protocol::game_master::GameHandle* GameEndedNotification::mutable_game_handle() {
  set_has_game_handle();
  if (game_handle_ == NULL) game_handle_ = new ::bnet::protocol::game_master::GameHandle;
  return game_handle_;
}
inline ::bnet::protocol::game_master::GameHandle* GameEndedNotification::release_game_handle() {
  clear_has_game_handle();
  ::bnet::protocol::game_master::GameHandle* temp = game_handle_;
  game_handle_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PlayerLeftNotification

// required .bnet.protocol.game_master.GameHandle game_handle = 1;
inline bool PlayerLeftNotification::has_game_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerLeftNotification::set_has_game_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerLeftNotification::clear_has_game_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerLeftNotification::clear_game_handle() {
  if (game_handle_ != NULL) game_handle_->::bnet::protocol::game_master::GameHandle::Clear();
  clear_has_game_handle();
}
inline const ::bnet::protocol::game_master::GameHandle& PlayerLeftNotification::game_handle() const {
  return game_handle_ != NULL ? *game_handle_ : *default_instance_->game_handle_;
}
inline ::bnet::protocol::game_master::GameHandle* PlayerLeftNotification::mutable_game_handle() {
  set_has_game_handle();
  if (game_handle_ == NULL) game_handle_ = new ::bnet::protocol::game_master::GameHandle;
  return game_handle_;
}
inline ::bnet::protocol::game_master::GameHandle* PlayerLeftNotification::release_game_handle() {
  clear_has_game_handle();
  ::bnet::protocol::game_master::GameHandle* temp = game_handle_;
  game_handle_ = NULL;
  return temp;
}

// required .bnet.protocol.EntityId toon_id = 2;
inline bool PlayerLeftNotification::has_toon_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerLeftNotification::set_has_toon_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerLeftNotification::clear_has_toon_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerLeftNotification::clear_toon_id() {
  if (toon_id_ != NULL) toon_id_->::bnet::protocol::EntityId::Clear();
  clear_has_toon_id();
}
inline const ::bnet::protocol::EntityId& PlayerLeftNotification::toon_id() const {
  return toon_id_ != NULL ? *toon_id_ : *default_instance_->toon_id_;
}
inline ::bnet::protocol::EntityId* PlayerLeftNotification::mutable_toon_id() {
  set_has_toon_id();
  if (toon_id_ == NULL) toon_id_ = new ::bnet::protocol::EntityId;
  return toon_id_;
}
inline ::bnet::protocol::EntityId* PlayerLeftNotification::release_toon_id() {
  clear_has_toon_id();
  ::bnet::protocol::EntityId* temp = toon_id_;
  toon_id_ = NULL;
  return temp;
}

// optional uint32 reason = 3;
inline bool PlayerLeftNotification::has_reason() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerLeftNotification::set_has_reason() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerLeftNotification::clear_has_reason() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerLeftNotification::clear_reason() {
  reason_ = 0u;
  clear_has_reason();
}
inline ::google::protobuf::uint32 PlayerLeftNotification::reason() const {
  return reason_;
}
inline void PlayerLeftNotification::set_reason(::google::protobuf::uint32 value) {
  set_has_reason();
  reason_ = value;
}

// -------------------------------------------------------------------

// RegisterServerRequest

// repeated .bnet.protocol.attribute.Attribute attribute = 1;
inline int RegisterServerRequest::attribute_size() const {
  return attribute_.size();
}
inline void RegisterServerRequest::clear_attribute() {
  attribute_.Clear();
}
inline const ::bnet::protocol::attribute::Attribute& RegisterServerRequest::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::bnet::protocol::attribute::Attribute* RegisterServerRequest::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::bnet::protocol::attribute::Attribute* RegisterServerRequest::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >&
RegisterServerRequest::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >*
RegisterServerRequest::mutable_attribute() {
  return &attribute_;
}

// optional .bnet.protocol.server_pool.ServerState state = 2;
inline bool RegisterServerRequest::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RegisterServerRequest::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RegisterServerRequest::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RegisterServerRequest::clear_state() {
  if (state_ != NULL) state_->::bnet::protocol::server_pool::ServerState::Clear();
  clear_has_state();
}
inline const ::bnet::protocol::server_pool::ServerState& RegisterServerRequest::state() const {
  return state_ != NULL ? *state_ : *default_instance_->state_;
}
inline ::bnet::protocol::server_pool::ServerState* RegisterServerRequest::mutable_state() {
  set_has_state();
  if (state_ == NULL) state_ = new ::bnet::protocol::server_pool::ServerState;
  return state_;
}
inline ::bnet::protocol::server_pool::ServerState* RegisterServerRequest::release_state() {
  clear_has_state();
  ::bnet::protocol::server_pool::ServerState* temp = state_;
  state_ = NULL;
  return temp;
}

// required fixed32 program_id = 3;
inline bool RegisterServerRequest::has_program_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RegisterServerRequest::set_has_program_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RegisterServerRequest::clear_has_program_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RegisterServerRequest::clear_program_id() {
  program_id_ = 0u;
  clear_has_program_id();
}
inline ::google::protobuf::uint32 RegisterServerRequest::program_id() const {
  return program_id_;
}
inline void RegisterServerRequest::set_program_id(::google::protobuf::uint32 value) {
  set_has_program_id();
  program_id_ = value;
}

// -------------------------------------------------------------------

// UnregisterServerRequest

// -------------------------------------------------------------------

// RegisterUtilitiesRequest

// repeated .bnet.protocol.attribute.Attribute attribute = 1;
inline int RegisterUtilitiesRequest::attribute_size() const {
  return attribute_.size();
}
inline void RegisterUtilitiesRequest::clear_attribute() {
  attribute_.Clear();
}
inline const ::bnet::protocol::attribute::Attribute& RegisterUtilitiesRequest::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::bnet::protocol::attribute::Attribute* RegisterUtilitiesRequest::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::bnet::protocol::attribute::Attribute* RegisterUtilitiesRequest::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >&
RegisterUtilitiesRequest::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >*
RegisterUtilitiesRequest::mutable_attribute() {
  return &attribute_;
}

// optional .bnet.protocol.server_pool.ServerState state = 2;
inline bool RegisterUtilitiesRequest::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RegisterUtilitiesRequest::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RegisterUtilitiesRequest::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RegisterUtilitiesRequest::clear_state() {
  if (state_ != NULL) state_->::bnet::protocol::server_pool::ServerState::Clear();
  clear_has_state();
}
inline const ::bnet::protocol::server_pool::ServerState& RegisterUtilitiesRequest::state() const {
  return state_ != NULL ? *state_ : *default_instance_->state_;
}
inline ::bnet::protocol::server_pool::ServerState* RegisterUtilitiesRequest::mutable_state() {
  set_has_state();
  if (state_ == NULL) state_ = new ::bnet::protocol::server_pool::ServerState;
  return state_;
}
inline ::bnet::protocol::server_pool::ServerState* RegisterUtilitiesRequest::release_state() {
  clear_has_state();
  ::bnet::protocol::server_pool::ServerState* temp = state_;
  state_ = NULL;
  return temp;
}

// required fixed32 program_id = 3;
inline bool RegisterUtilitiesRequest::has_program_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RegisterUtilitiesRequest::set_has_program_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RegisterUtilitiesRequest::clear_has_program_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RegisterUtilitiesRequest::clear_program_id() {
  program_id_ = 0u;
  clear_has_program_id();
}
inline ::google::protobuf::uint32 RegisterUtilitiesRequest::program_id() const {
  return program_id_;
}
inline void RegisterUtilitiesRequest::set_program_id(::google::protobuf::uint32 value) {
  set_has_program_id();
  program_id_ = value;
}

// -------------------------------------------------------------------

// UnregisterUtilitiesRequest

// -------------------------------------------------------------------

// SubscribeRequest

// required uint64 object_id = 1;
inline bool SubscribeRequest::has_object_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SubscribeRequest::set_has_object_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SubscribeRequest::clear_has_object_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SubscribeRequest::clear_object_id() {
  object_id_ = GOOGLE_ULONGLONG(0);
  clear_has_object_id();
}
inline ::google::protobuf::uint64 SubscribeRequest::object_id() const {
  return object_id_;
}
inline void SubscribeRequest::set_object_id(::google::protobuf::uint64 value) {
  set_has_object_id();
  object_id_ = value;
}

// -------------------------------------------------------------------

// SubscribeResponse

// optional uint64 subscription_id = 1;
inline bool SubscribeResponse::has_subscription_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SubscribeResponse::set_has_subscription_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SubscribeResponse::clear_has_subscription_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SubscribeResponse::clear_subscription_id() {
  subscription_id_ = GOOGLE_ULONGLONG(0);
  clear_has_subscription_id();
}
inline ::google::protobuf::uint64 SubscribeResponse::subscription_id() const {
  return subscription_id_;
}
inline void SubscribeResponse::set_subscription_id(::google::protobuf::uint64 value) {
  set_has_subscription_id();
  subscription_id_ = value;
}

// -------------------------------------------------------------------

// UnsubscribeRequest

// required uint64 subscription_id = 1;
inline bool UnsubscribeRequest::has_subscription_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnsubscribeRequest::set_has_subscription_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnsubscribeRequest::clear_has_subscription_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnsubscribeRequest::clear_subscription_id() {
  subscription_id_ = GOOGLE_ULONGLONG(0);
  clear_has_subscription_id();
}
inline ::google::protobuf::uint64 UnsubscribeRequest::subscription_id() const {
  return subscription_id_;
}
inline void UnsubscribeRequest::set_subscription_id(::google::protobuf::uint64 value) {
  set_has_subscription_id();
  subscription_id_ = value;
}

// -------------------------------------------------------------------

// ChangeGameRequest

// required .bnet.protocol.game_master.GameHandle game_handle = 1;
inline bool ChangeGameRequest::has_game_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeGameRequest::set_has_game_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeGameRequest::clear_has_game_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeGameRequest::clear_game_handle() {
  if (game_handle_ != NULL) game_handle_->::bnet::protocol::game_master::GameHandle::Clear();
  clear_has_game_handle();
}
inline const ::bnet::protocol::game_master::GameHandle& ChangeGameRequest::game_handle() const {
  return game_handle_ != NULL ? *game_handle_ : *default_instance_->game_handle_;
}
inline ::bnet::protocol::game_master::GameHandle* ChangeGameRequest::mutable_game_handle() {
  set_has_game_handle();
  if (game_handle_ == NULL) game_handle_ = new ::bnet::protocol::game_master::GameHandle;
  return game_handle_;
}
inline ::bnet::protocol::game_master::GameHandle* ChangeGameRequest::release_game_handle() {
  clear_has_game_handle();
  ::bnet::protocol::game_master::GameHandle* temp = game_handle_;
  game_handle_ = NULL;
  return temp;
}

// optional bool open = 2;
inline bool ChangeGameRequest::has_open() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeGameRequest::set_has_open() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeGameRequest::clear_has_open() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeGameRequest::clear_open() {
  open_ = false;
  clear_has_open();
}
inline bool ChangeGameRequest::open() const {
  return open_;
}
inline void ChangeGameRequest::set_open(bool value) {
  set_has_open();
  open_ = value;
}

// repeated .bnet.protocol.attribute.Attribute attribute = 3;
inline int ChangeGameRequest::attribute_size() const {
  return attribute_.size();
}
inline void ChangeGameRequest::clear_attribute() {
  attribute_.Clear();
}
inline const ::bnet::protocol::attribute::Attribute& ChangeGameRequest::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::bnet::protocol::attribute::Attribute* ChangeGameRequest::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::bnet::protocol::attribute::Attribute* ChangeGameRequest::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >&
ChangeGameRequest::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >*
ChangeGameRequest::mutable_attribute() {
  return &attribute_;
}

// optional bool replace = 4;
inline bool ChangeGameRequest::has_replace() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChangeGameRequest::set_has_replace() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChangeGameRequest::clear_has_replace() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChangeGameRequest::clear_replace() {
  replace_ = false;
  clear_has_replace();
}
inline bool ChangeGameRequest::replace() const {
  return replace_;
}
inline void ChangeGameRequest::set_replace(bool value) {
  set_has_replace();
  replace_ = value;
}

// -------------------------------------------------------------------

// GetFactoryInfoRequest

// required fixed64 factory_id = 1;
inline bool GetFactoryInfoRequest::has_factory_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetFactoryInfoRequest::set_has_factory_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetFactoryInfoRequest::clear_has_factory_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetFactoryInfoRequest::clear_factory_id() {
  factory_id_ = GOOGLE_ULONGLONG(0);
  clear_has_factory_id();
}
inline ::google::protobuf::uint64 GetFactoryInfoRequest::factory_id() const {
  return factory_id_;
}
inline void GetFactoryInfoRequest::set_factory_id(::google::protobuf::uint64 value) {
  set_has_factory_id();
  factory_id_ = value;
}

// -------------------------------------------------------------------

// GetFactoryInfoResponse

// repeated .bnet.protocol.attribute.Attribute attribute = 1;
inline int GetFactoryInfoResponse::attribute_size() const {
  return attribute_.size();
}
inline void GetFactoryInfoResponse::clear_attribute() {
  attribute_.Clear();
}
inline const ::bnet::protocol::attribute::Attribute& GetFactoryInfoResponse::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::bnet::protocol::attribute::Attribute* GetFactoryInfoResponse::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::bnet::protocol::attribute::Attribute* GetFactoryInfoResponse::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >&
GetFactoryInfoResponse::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >*
GetFactoryInfoResponse::mutable_attribute() {
  return &attribute_;
}

// repeated .bnet.protocol.game_master.GameStatsBucket stats_bucket = 2;
inline int GetFactoryInfoResponse::stats_bucket_size() const {
  return stats_bucket_.size();
}
inline void GetFactoryInfoResponse::clear_stats_bucket() {
  stats_bucket_.Clear();
}
inline const ::bnet::protocol::game_master::GameStatsBucket& GetFactoryInfoResponse::stats_bucket(int index) const {
  return stats_bucket_.Get(index);
}
inline ::bnet::protocol::game_master::GameStatsBucket* GetFactoryInfoResponse::mutable_stats_bucket(int index) {
  return stats_bucket_.Mutable(index);
}
inline ::bnet::protocol::game_master::GameStatsBucket* GetFactoryInfoResponse::add_stats_bucket() {
  return stats_bucket_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::GameStatsBucket >&
GetFactoryInfoResponse::stats_bucket() const {
  return stats_bucket_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::GameStatsBucket >*
GetFactoryInfoResponse::mutable_stats_bucket() {
  return &stats_bucket_;
}

// -------------------------------------------------------------------

// GetGameStatsRequest

// required fixed64 factory_id = 1;
inline bool GetGameStatsRequest::has_factory_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGameStatsRequest::set_has_factory_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGameStatsRequest::clear_has_factory_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGameStatsRequest::clear_factory_id() {
  factory_id_ = GOOGLE_ULONGLONG(0);
  clear_has_factory_id();
}
inline ::google::protobuf::uint64 GetGameStatsRequest::factory_id() const {
  return factory_id_;
}
inline void GetGameStatsRequest::set_factory_id(::google::protobuf::uint64 value) {
  set_has_factory_id();
  factory_id_ = value;
}

// required .bnet.protocol.attribute.AttributeFilter filter = 2;
inline bool GetGameStatsRequest::has_filter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGameStatsRequest::set_has_filter() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGameStatsRequest::clear_has_filter() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGameStatsRequest::clear_filter() {
  if (filter_ != NULL) filter_->::bnet::protocol::attribute::AttributeFilter::Clear();
  clear_has_filter();
}
inline const ::bnet::protocol::attribute::AttributeFilter& GetGameStatsRequest::filter() const {
  return filter_ != NULL ? *filter_ : *default_instance_->filter_;
}
inline ::bnet::protocol::attribute::AttributeFilter* GetGameStatsRequest::mutable_filter() {
  set_has_filter();
  if (filter_ == NULL) filter_ = new ::bnet::protocol::attribute::AttributeFilter;
  return filter_;
}
inline ::bnet::protocol::attribute::AttributeFilter* GetGameStatsRequest::release_filter() {
  clear_has_filter();
  ::bnet::protocol::attribute::AttributeFilter* temp = filter_;
  filter_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// GetGameStatsResponse

// repeated .bnet.protocol.game_master.GameStatsBucket stats_bucket = 1;
inline int GetGameStatsResponse::stats_bucket_size() const {
  return stats_bucket_.size();
}
inline void GetGameStatsResponse::clear_stats_bucket() {
  stats_bucket_.Clear();
}
inline const ::bnet::protocol::game_master::GameStatsBucket& GetGameStatsResponse::stats_bucket(int index) const {
  return stats_bucket_.Get(index);
}
inline ::bnet::protocol::game_master::GameStatsBucket* GetGameStatsResponse::mutable_stats_bucket(int index) {
  return stats_bucket_.Mutable(index);
}
inline ::bnet::protocol::game_master::GameStatsBucket* GetGameStatsResponse::add_stats_bucket() {
  return stats_bucket_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::GameStatsBucket >&
GetGameStatsResponse::stats_bucket() const {
  return stats_bucket_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::GameStatsBucket >*
GetGameStatsResponse::mutable_stats_bucket() {
  return &stats_bucket_;
}

// -------------------------------------------------------------------

// FactoryUpdateNotification

// required .bnet.protocol.game_master.FactoryUpdateNotification.Operation op = 1;
inline bool FactoryUpdateNotification::has_op() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FactoryUpdateNotification::set_has_op() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FactoryUpdateNotification::clear_has_op() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FactoryUpdateNotification::clear_op() {
  op_ = 1;
  clear_has_op();
}
inline ::bnet::protocol::game_master::FactoryUpdateNotification_Operation FactoryUpdateNotification::op() const {
  return static_cast< ::bnet::protocol::game_master::FactoryUpdateNotification_Operation >(op_);
}
inline void FactoryUpdateNotification::set_op(::bnet::protocol::game_master::FactoryUpdateNotification_Operation value) {
  GOOGLE_DCHECK(::bnet::protocol::game_master::FactoryUpdateNotification_Operation_IsValid(value));
  set_has_op();
  op_ = value;
}

// required .bnet.protocol.game_master.GameFactoryDescription description = 2;
inline bool FactoryUpdateNotification::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FactoryUpdateNotification::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FactoryUpdateNotification::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FactoryUpdateNotification::clear_description() {
  if (description_ != NULL) description_->::bnet::protocol::game_master::GameFactoryDescription::Clear();
  clear_has_description();
}
inline const ::bnet::protocol::game_master::GameFactoryDescription& FactoryUpdateNotification::description() const {
  return description_ != NULL ? *description_ : *default_instance_->description_;
}
inline ::bnet::protocol::game_master::GameFactoryDescription* FactoryUpdateNotification::mutable_description() {
  set_has_description();
  if (description_ == NULL) description_ = new ::bnet::protocol::game_master::GameFactoryDescription;
  return description_;
}
inline ::bnet::protocol::game_master::GameFactoryDescription* FactoryUpdateNotification::release_description() {
  clear_has_description();
  ::bnet::protocol::game_master::GameFactoryDescription* temp = description_;
  description_ = NULL;
  return temp;
}

// optional fixed32 program_id = 3;
inline bool FactoryUpdateNotification::has_program_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FactoryUpdateNotification::set_has_program_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FactoryUpdateNotification::clear_has_program_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FactoryUpdateNotification::clear_program_id() {
  program_id_ = 0u;
  clear_has_program_id();
}
inline ::google::protobuf::uint32 FactoryUpdateNotification::program_id() const {
  return program_id_;
}
inline void FactoryUpdateNotification::set_program_id(::google::protobuf::uint32 value) {
  set_has_program_id();
  program_id_ = value;
}

// -------------------------------------------------------------------

// GameFoundNotification

// required uint64 request_id = 1;
inline bool GameFoundNotification::has_request_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameFoundNotification::set_has_request_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameFoundNotification::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameFoundNotification::clear_request_id() {
  request_id_ = GOOGLE_ULONGLONG(0);
  clear_has_request_id();
}
inline ::google::protobuf::uint64 GameFoundNotification::request_id() const {
  return request_id_;
}
inline void GameFoundNotification::set_request_id(::google::protobuf::uint64 value) {
  set_has_request_id();
  request_id_ = value;
}

// optional uint32 error_code = 2;
inline bool GameFoundNotification::has_error_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameFoundNotification::set_has_error_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameFoundNotification::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameFoundNotification::clear_error_code() {
  error_code_ = 0u;
  clear_has_error_code();
}
inline ::google::protobuf::uint32 GameFoundNotification::error_code() const {
  return error_code_;
}
inline void GameFoundNotification::set_error_code(::google::protobuf::uint32 value) {
  set_has_error_code();
  error_code_ = value;
}

// optional .bnet.protocol.game_master.GameHandle game_handle = 3;
inline bool GameFoundNotification::has_game_handle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameFoundNotification::set_has_game_handle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameFoundNotification::clear_has_game_handle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameFoundNotification::clear_game_handle() {
  if (game_handle_ != NULL) game_handle_->::bnet::protocol::game_master::GameHandle::Clear();
  clear_has_game_handle();
}
inline const ::bnet::protocol::game_master::GameHandle& GameFoundNotification::game_handle() const {
  return game_handle_ != NULL ? *game_handle_ : *default_instance_->game_handle_;
}
inline ::bnet::protocol::game_master::GameHandle* GameFoundNotification::mutable_game_handle() {
  set_has_game_handle();
  if (game_handle_ == NULL) game_handle_ = new ::bnet::protocol::game_master::GameHandle;
  return game_handle_;
}
inline ::bnet::protocol::game_master::GameHandle* GameFoundNotification::release_game_handle() {
  clear_has_game_handle();
  ::bnet::protocol::game_master::GameHandle* temp = game_handle_;
  game_handle_ = NULL;
  return temp;
}

// repeated .bnet.protocol.game_master.ConnectInfo connect_info = 4;
inline int GameFoundNotification::connect_info_size() const {
  return connect_info_.size();
}
inline void GameFoundNotification::clear_connect_info() {
  connect_info_.Clear();
}
inline const ::bnet::protocol::game_master::ConnectInfo& GameFoundNotification::connect_info(int index) const {
  return connect_info_.Get(index);
}
inline ::bnet::protocol::game_master::ConnectInfo* GameFoundNotification::mutable_connect_info(int index) {
  return connect_info_.Mutable(index);
}
inline ::bnet::protocol::game_master::ConnectInfo* GameFoundNotification::add_connect_info() {
  return connect_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::ConnectInfo >&
GameFoundNotification::connect_info() const {
  return connect_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::game_master::ConnectInfo >*
GameFoundNotification::mutable_connect_info() {
  return &connect_info_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_master
}  // namespace protocol
}  // namespace bnet

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bnet::protocol::game_master::FactoryUpdateNotification_Operation>() {
  return ::bnet::protocol::game_master::FactoryUpdateNotification_Operation_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_service_2fgame_5fmaster_2fgame_5fmaster_2eproto__INCLUDED
