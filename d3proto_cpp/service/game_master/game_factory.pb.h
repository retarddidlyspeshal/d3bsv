// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/game_master/game_factory.proto

#ifndef PROTOBUF_service_2fgame_5fmaster_2fgame_5ffactory_2eproto__INCLUDED
#define PROTOBUF_service_2fgame_5fmaster_2fgame_5ffactory_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "lib/protocol/attribute.pb.h"
#include "lib/protocol/entity.pb.h"
// @@protoc_insertion_point(includes)

namespace bnet {
namespace protocol {
namespace game_master {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_service_2fgame_5fmaster_2fgame_5ffactory_2eproto();
void protobuf_AssignDesc_service_2fgame_5fmaster_2fgame_5ffactory_2eproto();
void protobuf_ShutdownFile_service_2fgame_5fmaster_2fgame_5ffactory_2eproto();

class GameProperties;

// ===================================================================

class GameProperties : public ::google::protobuf::Message {
 public:
  GameProperties();
  virtual ~GameProperties();
  
  GameProperties(const GameProperties& from);
  
  inline GameProperties& operator=(const GameProperties& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameProperties& default_instance();
  
  void Swap(GameProperties* other);
  
  // implements Message ----------------------------------------------
  
  GameProperties* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameProperties& from);
  void MergeFrom(const GameProperties& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .bnet.protocol.attribute.AttributeFilter filter = 1;
  inline bool has_filter() const;
  inline void clear_filter();
  static const int kFilterFieldNumber = 1;
  inline const ::bnet::protocol::attribute::AttributeFilter& filter() const;
  inline ::bnet::protocol::attribute::AttributeFilter* mutable_filter();
  inline ::bnet::protocol::attribute::AttributeFilter* release_filter();
  
  // optional bool create = 2;
  inline bool has_create() const;
  inline void clear_create();
  static const int kCreateFieldNumber = 2;
  inline bool create() const;
  inline void set_create(bool value);
  
  // optional bool open = 3;
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 3;
  inline bool open() const;
  inline void set_open(bool value);
  
  // optional fixed32 program_id = 4;
  inline bool has_program_id() const;
  inline void clear_program_id();
  static const int kProgramIdFieldNumber = 4;
  inline ::google::protobuf::uint32 program_id() const;
  inline void set_program_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.game_master.GameProperties)
 private:
  inline void set_has_filter();
  inline void clear_has_filter();
  inline void set_has_create();
  inline void clear_has_create();
  inline void set_has_open();
  inline void clear_has_open();
  inline void set_has_program_id();
  inline void clear_has_program_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::attribute::AttributeFilter* filter_;
  bool create_;
  bool open_;
  ::google::protobuf::uint32 program_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fgame_5fmaster_2fgame_5ffactory_2eproto();
  friend void protobuf_AssignDesc_service_2fgame_5fmaster_2fgame_5ffactory_2eproto();
  friend void protobuf_ShutdownFile_service_2fgame_5fmaster_2fgame_5ffactory_2eproto();
  
  void InitAsDefaultInstance();
  static GameProperties* default_instance_;
};
// ===================================================================


// ===================================================================

// GameProperties

// optional .bnet.protocol.attribute.AttributeFilter filter = 1;
inline bool GameProperties::has_filter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameProperties::set_has_filter() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameProperties::clear_has_filter() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameProperties::clear_filter() {
  if (filter_ != NULL) filter_->::bnet::protocol::attribute::AttributeFilter::Clear();
  clear_has_filter();
}
inline const ::bnet::protocol::attribute::AttributeFilter& GameProperties::filter() const {
  return filter_ != NULL ? *filter_ : *default_instance_->filter_;
}
inline ::bnet::protocol::attribute::AttributeFilter* GameProperties::mutable_filter() {
  set_has_filter();
  if (filter_ == NULL) filter_ = new ::bnet::protocol::attribute::AttributeFilter;
  return filter_;
}
inline ::bnet::protocol::attribute::AttributeFilter* GameProperties::release_filter() {
  clear_has_filter();
  ::bnet::protocol::attribute::AttributeFilter* temp = filter_;
  filter_ = NULL;
  return temp;
}

// optional bool create = 2;
inline bool GameProperties::has_create() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameProperties::set_has_create() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameProperties::clear_has_create() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameProperties::clear_create() {
  create_ = false;
  clear_has_create();
}
inline bool GameProperties::create() const {
  return create_;
}
inline void GameProperties::set_create(bool value) {
  set_has_create();
  create_ = value;
}

// optional bool open = 3;
inline bool GameProperties::has_open() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameProperties::set_has_open() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameProperties::clear_has_open() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameProperties::clear_open() {
  open_ = false;
  clear_has_open();
}
inline bool GameProperties::open() const {
  return open_;
}
inline void GameProperties::set_open(bool value) {
  set_has_open();
  open_ = value;
}

// optional fixed32 program_id = 4;
inline bool GameProperties::has_program_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameProperties::set_has_program_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameProperties::clear_has_program_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameProperties::clear_program_id() {
  program_id_ = 0u;
  clear_has_program_id();
}
inline ::google::protobuf::uint32 GameProperties::program_id() const {
  return program_id_;
}
inline void GameProperties::set_program_id(::google::protobuf::uint32 value) {
  set_has_program_id();
  program_id_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_master
}  // namespace protocol
}  // namespace bnet

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_service_2fgame_5fmaster_2fgame_5ffactory_2eproto__INCLUDED
