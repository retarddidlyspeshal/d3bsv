// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/exchange/exchange.proto

#ifndef PROTOBUF_service_2fexchange_2fexchange_2eproto__INCLUDED
#define PROTOBUF_service_2fexchange_2fexchange_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "lib/rpc/rpc.pb.h"
#include "lib/protocol/exchange.pb.h"
#include "lib/protocol/exchange_object_provider.pb.h"
#include "lib/protocol/entity.pb.h"
#include "service/exchange/exchange_types.pb.h"
// @@protoc_insertion_point(includes)

namespace bnet {
namespace protocol {
namespace exchange {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();

class CreateOrderBookRequest;
class CreateOrderBookResponse;
class PlaceOfferOnOrderBookRequest;
class PlaceOfferOnOrderBookResponse;
class PlaceOfferCreateOrderBookIfNeededRequest;
class PlaceOfferCreateOrderBookIfNeededResponse;
class PlaceBidOnOrderBookRequest;
class PlaceBidOnOrderBookResponse;
class PlaceBidCreateOrderBookIfNeededRequest;
class PlaceBidCreateOrderBookIfNeededResponse;
class QueryOffersByOrderBookRequest;
class QueryOffersByOrderBookResponse;
class QueryBidsByOrderBookRequest;
class QueryBidsByOrderBookResponse;
class QueryOffersByAccountForItemRequest;
class QueryOffersByAccountForItemResponse;
class QueryBidsByAccountForItemRequest;
class QueryBidsByAccountForItemResponse;
class QueryOrderBooksSummaryRequest;
class QueryOrderBooksSummaryResponse;
class QuerySettlementsByOrderBookRequest;
class QuerySettlementsByOrderBookResponse;
class SubscribeOrderBookStatusChangeRequest;
class UnsubscribeOrderBookStatusChangeRequest;
class SubscribeOrderStatusChangeRequest;
class UnsubscribeOrderStatusChangeRequest;
class ClaimRequest;
class CancelRequest;
class GetConfigurationRequest;
class GetConfigurationResponse;
class GetOfferFeeEstimationRequest;
class GetBidFeeEstimationRequest;
class GetFeeEstimationResponse;
class OrderBookNotificationRequest;
class OfferNotificationRequest;
class BidNotificationRequest;

// ===================================================================

class CreateOrderBookRequest : public ::google::protobuf::Message {
 public:
  CreateOrderBookRequest();
  virtual ~CreateOrderBookRequest();
  
  CreateOrderBookRequest(const CreateOrderBookRequest& from);
  
  inline CreateOrderBookRequest& operator=(const CreateOrderBookRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateOrderBookRequest& default_instance();
  
  void Swap(CreateOrderBookRequest* other);
  
  // implements Message ----------------------------------------------
  
  CreateOrderBookRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateOrderBookRequest& from);
  void MergeFrom(const CreateOrderBookRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.exchange.PartitionId partition_id = 1;
  inline bool has_partition_id() const;
  inline void clear_partition_id();
  static const int kPartitionIdFieldNumber = 1;
  inline const ::bnet::protocol::exchange::PartitionId& partition_id() const;
  inline ::bnet::protocol::exchange::PartitionId* mutable_partition_id();
  inline ::bnet::protocol::exchange::PartitionId* release_partition_id();
  
  // required .bnet.protocol.exchange.OrderBook order_book = 2;
  inline bool has_order_book() const;
  inline void clear_order_book();
  static const int kOrderBookFieldNumber = 2;
  inline const ::bnet::protocol::exchange::OrderBook& order_book() const;
  inline ::bnet::protocol::exchange::OrderBook* mutable_order_book();
  inline ::bnet::protocol::exchange::OrderBook* release_order_book();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.CreateOrderBookRequest)
 private:
  inline void set_has_partition_id();
  inline void clear_has_partition_id();
  inline void set_has_order_book();
  inline void clear_has_order_book();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::exchange::PartitionId* partition_id_;
  ::bnet::protocol::exchange::OrderBook* order_book_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static CreateOrderBookRequest* default_instance_;
};
// -------------------------------------------------------------------

class CreateOrderBookResponse : public ::google::protobuf::Message {
 public:
  CreateOrderBookResponse();
  virtual ~CreateOrderBookResponse();
  
  CreateOrderBookResponse(const CreateOrderBookResponse& from);
  
  inline CreateOrderBookResponse& operator=(const CreateOrderBookResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateOrderBookResponse& default_instance();
  
  void Swap(CreateOrderBookResponse* other);
  
  // implements Message ----------------------------------------------
  
  CreateOrderBookResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateOrderBookResponse& from);
  void MergeFrom(const CreateOrderBookResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 order_book_id = 1;
  inline bool has_order_book_id() const;
  inline void clear_order_book_id();
  static const int kOrderBookIdFieldNumber = 1;
  inline ::google::protobuf::uint64 order_book_id() const;
  inline void set_order_book_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.CreateOrderBookResponse)
 private:
  inline void set_has_order_book_id();
  inline void clear_has_order_book_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 order_book_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static CreateOrderBookResponse* default_instance_;
};
// -------------------------------------------------------------------

class PlaceOfferOnOrderBookRequest : public ::google::protobuf::Message {
 public:
  PlaceOfferOnOrderBookRequest();
  virtual ~PlaceOfferOnOrderBookRequest();
  
  PlaceOfferOnOrderBookRequest(const PlaceOfferOnOrderBookRequest& from);
  
  inline PlaceOfferOnOrderBookRequest& operator=(const PlaceOfferOnOrderBookRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlaceOfferOnOrderBookRequest& default_instance();
  
  void Swap(PlaceOfferOnOrderBookRequest* other);
  
  // implements Message ----------------------------------------------
  
  PlaceOfferOnOrderBookRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlaceOfferOnOrderBookRequest& from);
  void MergeFrom(const PlaceOfferOnOrderBookRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.exchange.PartitionId partition_id = 1;
  inline bool has_partition_id() const;
  inline void clear_partition_id();
  static const int kPartitionIdFieldNumber = 1;
  inline const ::bnet::protocol::exchange::PartitionId& partition_id() const;
  inline ::bnet::protocol::exchange::PartitionId* mutable_partition_id();
  inline ::bnet::protocol::exchange::PartitionId* release_partition_id();
  
  // required .bnet.protocol.exchange.OfferCreation offer_creation = 2;
  inline bool has_offer_creation() const;
  inline void clear_offer_creation();
  static const int kOfferCreationFieldNumber = 2;
  inline const ::bnet::protocol::exchange::OfferCreation& offer_creation() const;
  inline ::bnet::protocol::exchange::OfferCreation* mutable_offer_creation();
  inline ::bnet::protocol::exchange::OfferCreation* release_offer_creation();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.PlaceOfferOnOrderBookRequest)
 private:
  inline void set_has_partition_id();
  inline void clear_has_partition_id();
  inline void set_has_offer_creation();
  inline void clear_has_offer_creation();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::exchange::PartitionId* partition_id_;
  ::bnet::protocol::exchange::OfferCreation* offer_creation_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static PlaceOfferOnOrderBookRequest* default_instance_;
};
// -------------------------------------------------------------------

class PlaceOfferOnOrderBookResponse : public ::google::protobuf::Message {
 public:
  PlaceOfferOnOrderBookResponse();
  virtual ~PlaceOfferOnOrderBookResponse();
  
  PlaceOfferOnOrderBookResponse(const PlaceOfferOnOrderBookResponse& from);
  
  inline PlaceOfferOnOrderBookResponse& operator=(const PlaceOfferOnOrderBookResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlaceOfferOnOrderBookResponse& default_instance();
  
  void Swap(PlaceOfferOnOrderBookResponse* other);
  
  // implements Message ----------------------------------------------
  
  PlaceOfferOnOrderBookResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlaceOfferOnOrderBookResponse& from);
  void MergeFrom(const PlaceOfferOnOrderBookResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 order_book_id = 1;
  inline bool has_order_book_id() const;
  inline void clear_order_book_id();
  static const int kOrderBookIdFieldNumber = 1;
  inline ::google::protobuf::uint64 order_book_id() const;
  inline void set_order_book_id(::google::protobuf::uint64 value);
  
  // optional uint64 offer_id = 2;
  inline bool has_offer_id() const;
  inline void clear_offer_id();
  static const int kOfferIdFieldNumber = 2;
  inline ::google::protobuf::uint64 offer_id() const;
  inline void set_offer_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.PlaceOfferOnOrderBookResponse)
 private:
  inline void set_has_order_book_id();
  inline void clear_has_order_book_id();
  inline void set_has_offer_id();
  inline void clear_has_offer_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 order_book_id_;
  ::google::protobuf::uint64 offer_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static PlaceOfferOnOrderBookResponse* default_instance_;
};
// -------------------------------------------------------------------

class PlaceOfferCreateOrderBookIfNeededRequest : public ::google::protobuf::Message {
 public:
  PlaceOfferCreateOrderBookIfNeededRequest();
  virtual ~PlaceOfferCreateOrderBookIfNeededRequest();
  
  PlaceOfferCreateOrderBookIfNeededRequest(const PlaceOfferCreateOrderBookIfNeededRequest& from);
  
  inline PlaceOfferCreateOrderBookIfNeededRequest& operator=(const PlaceOfferCreateOrderBookIfNeededRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlaceOfferCreateOrderBookIfNeededRequest& default_instance();
  
  void Swap(PlaceOfferCreateOrderBookIfNeededRequest* other);
  
  // implements Message ----------------------------------------------
  
  PlaceOfferCreateOrderBookIfNeededRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlaceOfferCreateOrderBookIfNeededRequest& from);
  void MergeFrom(const PlaceOfferCreateOrderBookIfNeededRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.exchange.PartitionId partition_id = 1;
  inline bool has_partition_id() const;
  inline void clear_partition_id();
  static const int kPartitionIdFieldNumber = 1;
  inline const ::bnet::protocol::exchange::PartitionId& partition_id() const;
  inline ::bnet::protocol::exchange::PartitionId* mutable_partition_id();
  inline ::bnet::protocol::exchange::PartitionId* release_partition_id();
  
  // required .bnet.protocol.exchange.OrderBook order_book = 2;
  inline bool has_order_book() const;
  inline void clear_order_book();
  static const int kOrderBookFieldNumber = 2;
  inline const ::bnet::protocol::exchange::OrderBook& order_book() const;
  inline ::bnet::protocol::exchange::OrderBook* mutable_order_book();
  inline ::bnet::protocol::exchange::OrderBook* release_order_book();
  
  // required .bnet.protocol.exchange.OfferCreation offer_creation = 3;
  inline bool has_offer_creation() const;
  inline void clear_offer_creation();
  static const int kOfferCreationFieldNumber = 3;
  inline const ::bnet::protocol::exchange::OfferCreation& offer_creation() const;
  inline ::bnet::protocol::exchange::OfferCreation* mutable_offer_creation();
  inline ::bnet::protocol::exchange::OfferCreation* release_offer_creation();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededRequest)
 private:
  inline void set_has_partition_id();
  inline void clear_has_partition_id();
  inline void set_has_order_book();
  inline void clear_has_order_book();
  inline void set_has_offer_creation();
  inline void clear_has_offer_creation();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::exchange::PartitionId* partition_id_;
  ::bnet::protocol::exchange::OrderBook* order_book_;
  ::bnet::protocol::exchange::OfferCreation* offer_creation_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static PlaceOfferCreateOrderBookIfNeededRequest* default_instance_;
};
// -------------------------------------------------------------------

class PlaceOfferCreateOrderBookIfNeededResponse : public ::google::protobuf::Message {
 public:
  PlaceOfferCreateOrderBookIfNeededResponse();
  virtual ~PlaceOfferCreateOrderBookIfNeededResponse();
  
  PlaceOfferCreateOrderBookIfNeededResponse(const PlaceOfferCreateOrderBookIfNeededResponse& from);
  
  inline PlaceOfferCreateOrderBookIfNeededResponse& operator=(const PlaceOfferCreateOrderBookIfNeededResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlaceOfferCreateOrderBookIfNeededResponse& default_instance();
  
  void Swap(PlaceOfferCreateOrderBookIfNeededResponse* other);
  
  // implements Message ----------------------------------------------
  
  PlaceOfferCreateOrderBookIfNeededResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlaceOfferCreateOrderBookIfNeededResponse& from);
  void MergeFrom(const PlaceOfferCreateOrderBookIfNeededResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 order_book_id = 1;
  inline bool has_order_book_id() const;
  inline void clear_order_book_id();
  static const int kOrderBookIdFieldNumber = 1;
  inline ::google::protobuf::uint64 order_book_id() const;
  inline void set_order_book_id(::google::protobuf::uint64 value);
  
  // optional uint64 offer_id = 2;
  inline bool has_offer_id() const;
  inline void clear_offer_id();
  static const int kOfferIdFieldNumber = 2;
  inline ::google::protobuf::uint64 offer_id() const;
  inline void set_offer_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse)
 private:
  inline void set_has_order_book_id();
  inline void clear_has_order_book_id();
  inline void set_has_offer_id();
  inline void clear_has_offer_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 order_book_id_;
  ::google::protobuf::uint64 offer_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static PlaceOfferCreateOrderBookIfNeededResponse* default_instance_;
};
// -------------------------------------------------------------------

class PlaceBidOnOrderBookRequest : public ::google::protobuf::Message {
 public:
  PlaceBidOnOrderBookRequest();
  virtual ~PlaceBidOnOrderBookRequest();
  
  PlaceBidOnOrderBookRequest(const PlaceBidOnOrderBookRequest& from);
  
  inline PlaceBidOnOrderBookRequest& operator=(const PlaceBidOnOrderBookRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlaceBidOnOrderBookRequest& default_instance();
  
  void Swap(PlaceBidOnOrderBookRequest* other);
  
  // implements Message ----------------------------------------------
  
  PlaceBidOnOrderBookRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlaceBidOnOrderBookRequest& from);
  void MergeFrom(const PlaceBidOnOrderBookRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.exchange.PartitionId partition_id = 1;
  inline bool has_partition_id() const;
  inline void clear_partition_id();
  static const int kPartitionIdFieldNumber = 1;
  inline const ::bnet::protocol::exchange::PartitionId& partition_id() const;
  inline ::bnet::protocol::exchange::PartitionId* mutable_partition_id();
  inline ::bnet::protocol::exchange::PartitionId* release_partition_id();
  
  // required .bnet.protocol.exchange.BidCreation bid_creation = 2;
  inline bool has_bid_creation() const;
  inline void clear_bid_creation();
  static const int kBidCreationFieldNumber = 2;
  inline const ::bnet::protocol::exchange::BidCreation& bid_creation() const;
  inline ::bnet::protocol::exchange::BidCreation* mutable_bid_creation();
  inline ::bnet::protocol::exchange::BidCreation* release_bid_creation();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.PlaceBidOnOrderBookRequest)
 private:
  inline void set_has_partition_id();
  inline void clear_has_partition_id();
  inline void set_has_bid_creation();
  inline void clear_has_bid_creation();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::exchange::PartitionId* partition_id_;
  ::bnet::protocol::exchange::BidCreation* bid_creation_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static PlaceBidOnOrderBookRequest* default_instance_;
};
// -------------------------------------------------------------------

class PlaceBidOnOrderBookResponse : public ::google::protobuf::Message {
 public:
  PlaceBidOnOrderBookResponse();
  virtual ~PlaceBidOnOrderBookResponse();
  
  PlaceBidOnOrderBookResponse(const PlaceBidOnOrderBookResponse& from);
  
  inline PlaceBidOnOrderBookResponse& operator=(const PlaceBidOnOrderBookResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlaceBidOnOrderBookResponse& default_instance();
  
  void Swap(PlaceBidOnOrderBookResponse* other);
  
  // implements Message ----------------------------------------------
  
  PlaceBidOnOrderBookResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlaceBidOnOrderBookResponse& from);
  void MergeFrom(const PlaceBidOnOrderBookResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 order_book_id = 1;
  inline bool has_order_book_id() const;
  inline void clear_order_book_id();
  static const int kOrderBookIdFieldNumber = 1;
  inline ::google::protobuf::uint64 order_book_id() const;
  inline void set_order_book_id(::google::protobuf::uint64 value);
  
  // optional uint64 bid_id = 2;
  inline bool has_bid_id() const;
  inline void clear_bid_id();
  static const int kBidIdFieldNumber = 2;
  inline ::google::protobuf::uint64 bid_id() const;
  inline void set_bid_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.PlaceBidOnOrderBookResponse)
 private:
  inline void set_has_order_book_id();
  inline void clear_has_order_book_id();
  inline void set_has_bid_id();
  inline void clear_has_bid_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 order_book_id_;
  ::google::protobuf::uint64 bid_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static PlaceBidOnOrderBookResponse* default_instance_;
};
// -------------------------------------------------------------------

class PlaceBidCreateOrderBookIfNeededRequest : public ::google::protobuf::Message {
 public:
  PlaceBidCreateOrderBookIfNeededRequest();
  virtual ~PlaceBidCreateOrderBookIfNeededRequest();
  
  PlaceBidCreateOrderBookIfNeededRequest(const PlaceBidCreateOrderBookIfNeededRequest& from);
  
  inline PlaceBidCreateOrderBookIfNeededRequest& operator=(const PlaceBidCreateOrderBookIfNeededRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlaceBidCreateOrderBookIfNeededRequest& default_instance();
  
  void Swap(PlaceBidCreateOrderBookIfNeededRequest* other);
  
  // implements Message ----------------------------------------------
  
  PlaceBidCreateOrderBookIfNeededRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlaceBidCreateOrderBookIfNeededRequest& from);
  void MergeFrom(const PlaceBidCreateOrderBookIfNeededRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.exchange.PartitionId partition_id = 1;
  inline bool has_partition_id() const;
  inline void clear_partition_id();
  static const int kPartitionIdFieldNumber = 1;
  inline const ::bnet::protocol::exchange::PartitionId& partition_id() const;
  inline ::bnet::protocol::exchange::PartitionId* mutable_partition_id();
  inline ::bnet::protocol::exchange::PartitionId* release_partition_id();
  
  // required .bnet.protocol.exchange.OrderBook order_book = 2;
  inline bool has_order_book() const;
  inline void clear_order_book();
  static const int kOrderBookFieldNumber = 2;
  inline const ::bnet::protocol::exchange::OrderBook& order_book() const;
  inline ::bnet::protocol::exchange::OrderBook* mutable_order_book();
  inline ::bnet::protocol::exchange::OrderBook* release_order_book();
  
  // required .bnet.protocol.exchange.BidCreation bid_creation = 3;
  inline bool has_bid_creation() const;
  inline void clear_bid_creation();
  static const int kBidCreationFieldNumber = 3;
  inline const ::bnet::protocol::exchange::BidCreation& bid_creation() const;
  inline ::bnet::protocol::exchange::BidCreation* mutable_bid_creation();
  inline ::bnet::protocol::exchange::BidCreation* release_bid_creation();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededRequest)
 private:
  inline void set_has_partition_id();
  inline void clear_has_partition_id();
  inline void set_has_order_book();
  inline void clear_has_order_book();
  inline void set_has_bid_creation();
  inline void clear_has_bid_creation();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::exchange::PartitionId* partition_id_;
  ::bnet::protocol::exchange::OrderBook* order_book_;
  ::bnet::protocol::exchange::BidCreation* bid_creation_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static PlaceBidCreateOrderBookIfNeededRequest* default_instance_;
};
// -------------------------------------------------------------------

class PlaceBidCreateOrderBookIfNeededResponse : public ::google::protobuf::Message {
 public:
  PlaceBidCreateOrderBookIfNeededResponse();
  virtual ~PlaceBidCreateOrderBookIfNeededResponse();
  
  PlaceBidCreateOrderBookIfNeededResponse(const PlaceBidCreateOrderBookIfNeededResponse& from);
  
  inline PlaceBidCreateOrderBookIfNeededResponse& operator=(const PlaceBidCreateOrderBookIfNeededResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlaceBidCreateOrderBookIfNeededResponse& default_instance();
  
  void Swap(PlaceBidCreateOrderBookIfNeededResponse* other);
  
  // implements Message ----------------------------------------------
  
  PlaceBidCreateOrderBookIfNeededResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlaceBidCreateOrderBookIfNeededResponse& from);
  void MergeFrom(const PlaceBidCreateOrderBookIfNeededResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 order_book_id = 1;
  inline bool has_order_book_id() const;
  inline void clear_order_book_id();
  static const int kOrderBookIdFieldNumber = 1;
  inline ::google::protobuf::uint64 order_book_id() const;
  inline void set_order_book_id(::google::protobuf::uint64 value);
  
  // optional uint64 bid_id = 2;
  inline bool has_bid_id() const;
  inline void clear_bid_id();
  static const int kBidIdFieldNumber = 2;
  inline ::google::protobuf::uint64 bid_id() const;
  inline void set_bid_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse)
 private:
  inline void set_has_order_book_id();
  inline void clear_has_order_book_id();
  inline void set_has_bid_id();
  inline void clear_has_bid_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 order_book_id_;
  ::google::protobuf::uint64 bid_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static PlaceBidCreateOrderBookIfNeededResponse* default_instance_;
};
// -------------------------------------------------------------------

class QueryOffersByOrderBookRequest : public ::google::protobuf::Message {
 public:
  QueryOffersByOrderBookRequest();
  virtual ~QueryOffersByOrderBookRequest();
  
  QueryOffersByOrderBookRequest(const QueryOffersByOrderBookRequest& from);
  
  inline QueryOffersByOrderBookRequest& operator=(const QueryOffersByOrderBookRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryOffersByOrderBookRequest& default_instance();
  
  void Swap(QueryOffersByOrderBookRequest* other);
  
  // implements Message ----------------------------------------------
  
  QueryOffersByOrderBookRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryOffersByOrderBookRequest& from);
  void MergeFrom(const QueryOffersByOrderBookRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.exchange.PartitionId partition_id = 1;
  inline bool has_partition_id() const;
  inline void clear_partition_id();
  static const int kPartitionIdFieldNumber = 1;
  inline const ::bnet::protocol::exchange::PartitionId& partition_id() const;
  inline ::bnet::protocol::exchange::PartitionId* mutable_partition_id();
  inline ::bnet::protocol::exchange::PartitionId* release_partition_id();
  
  // required .bnet.protocol.exchange.QueryFilterByOrderId filter = 2;
  inline bool has_filter() const;
  inline void clear_filter();
  static const int kFilterFieldNumber = 2;
  inline const ::bnet::protocol::exchange::QueryFilterByOrderId& filter() const;
  inline ::bnet::protocol::exchange::QueryFilterByOrderId* mutable_filter();
  inline ::bnet::protocol::exchange::QueryFilterByOrderId* release_filter();
  
  // required int32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.QueryOffersByOrderBookRequest)
 private:
  inline void set_has_partition_id();
  inline void clear_has_partition_id();
  inline void set_has_filter();
  inline void clear_has_filter();
  inline void set_has_status();
  inline void clear_has_status();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::exchange::PartitionId* partition_id_;
  ::bnet::protocol::exchange::QueryFilterByOrderId* filter_;
  ::google::protobuf::int32 status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static QueryOffersByOrderBookRequest* default_instance_;
};
// -------------------------------------------------------------------

class QueryOffersByOrderBookResponse : public ::google::protobuf::Message {
 public:
  QueryOffersByOrderBookResponse();
  virtual ~QueryOffersByOrderBookResponse();
  
  QueryOffersByOrderBookResponse(const QueryOffersByOrderBookResponse& from);
  
  inline QueryOffersByOrderBookResponse& operator=(const QueryOffersByOrderBookResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryOffersByOrderBookResponse& default_instance();
  
  void Swap(QueryOffersByOrderBookResponse* other);
  
  // implements Message ----------------------------------------------
  
  QueryOffersByOrderBookResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryOffersByOrderBookResponse& from);
  void MergeFrom(const QueryOffersByOrderBookResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .bnet.protocol.exchange.OfferExtended offers = 1;
  inline int offers_size() const;
  inline void clear_offers();
  static const int kOffersFieldNumber = 1;
  inline const ::bnet::protocol::exchange::OfferExtended& offers(int index) const;
  inline ::bnet::protocol::exchange::OfferExtended* mutable_offers(int index);
  inline ::bnet::protocol::exchange::OfferExtended* add_offers();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::OfferExtended >&
      offers() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::OfferExtended >*
      mutable_offers();
  
  // required uint32 total_count = 2;
  inline bool has_total_count() const;
  inline void clear_total_count();
  static const int kTotalCountFieldNumber = 2;
  inline ::google::protobuf::uint32 total_count() const;
  inline void set_total_count(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.QueryOffersByOrderBookResponse)
 private:
  inline void set_has_total_count();
  inline void clear_has_total_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::OfferExtended > offers_;
  ::google::protobuf::uint32 total_count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static QueryOffersByOrderBookResponse* default_instance_;
};
// -------------------------------------------------------------------

class QueryBidsByOrderBookRequest : public ::google::protobuf::Message {
 public:
  QueryBidsByOrderBookRequest();
  virtual ~QueryBidsByOrderBookRequest();
  
  QueryBidsByOrderBookRequest(const QueryBidsByOrderBookRequest& from);
  
  inline QueryBidsByOrderBookRequest& operator=(const QueryBidsByOrderBookRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryBidsByOrderBookRequest& default_instance();
  
  void Swap(QueryBidsByOrderBookRequest* other);
  
  // implements Message ----------------------------------------------
  
  QueryBidsByOrderBookRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryBidsByOrderBookRequest& from);
  void MergeFrom(const QueryBidsByOrderBookRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.exchange.PartitionId partition_id = 1;
  inline bool has_partition_id() const;
  inline void clear_partition_id();
  static const int kPartitionIdFieldNumber = 1;
  inline const ::bnet::protocol::exchange::PartitionId& partition_id() const;
  inline ::bnet::protocol::exchange::PartitionId* mutable_partition_id();
  inline ::bnet::protocol::exchange::PartitionId* release_partition_id();
  
  // required .bnet.protocol.exchange.QueryFilterByOrderId filter = 2;
  inline bool has_filter() const;
  inline void clear_filter();
  static const int kFilterFieldNumber = 2;
  inline const ::bnet::protocol::exchange::QueryFilterByOrderId& filter() const;
  inline ::bnet::protocol::exchange::QueryFilterByOrderId* mutable_filter();
  inline ::bnet::protocol::exchange::QueryFilterByOrderId* release_filter();
  
  // required int32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.QueryBidsByOrderBookRequest)
 private:
  inline void set_has_partition_id();
  inline void clear_has_partition_id();
  inline void set_has_filter();
  inline void clear_has_filter();
  inline void set_has_status();
  inline void clear_has_status();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::exchange::PartitionId* partition_id_;
  ::bnet::protocol::exchange::QueryFilterByOrderId* filter_;
  ::google::protobuf::int32 status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static QueryBidsByOrderBookRequest* default_instance_;
};
// -------------------------------------------------------------------

class QueryBidsByOrderBookResponse : public ::google::protobuf::Message {
 public:
  QueryBidsByOrderBookResponse();
  virtual ~QueryBidsByOrderBookResponse();
  
  QueryBidsByOrderBookResponse(const QueryBidsByOrderBookResponse& from);
  
  inline QueryBidsByOrderBookResponse& operator=(const QueryBidsByOrderBookResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryBidsByOrderBookResponse& default_instance();
  
  void Swap(QueryBidsByOrderBookResponse* other);
  
  // implements Message ----------------------------------------------
  
  QueryBidsByOrderBookResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryBidsByOrderBookResponse& from);
  void MergeFrom(const QueryBidsByOrderBookResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .bnet.protocol.exchange.BidExtended bids = 1;
  inline int bids_size() const;
  inline void clear_bids();
  static const int kBidsFieldNumber = 1;
  inline const ::bnet::protocol::exchange::BidExtended& bids(int index) const;
  inline ::bnet::protocol::exchange::BidExtended* mutable_bids(int index);
  inline ::bnet::protocol::exchange::BidExtended* add_bids();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::BidExtended >&
      bids() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::BidExtended >*
      mutable_bids();
  
  // required uint32 total_count = 2;
  inline bool has_total_count() const;
  inline void clear_total_count();
  static const int kTotalCountFieldNumber = 2;
  inline ::google::protobuf::uint32 total_count() const;
  inline void set_total_count(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.QueryBidsByOrderBookResponse)
 private:
  inline void set_has_total_count();
  inline void clear_has_total_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::BidExtended > bids_;
  ::google::protobuf::uint32 total_count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static QueryBidsByOrderBookResponse* default_instance_;
};
// -------------------------------------------------------------------

class QueryOffersByAccountForItemRequest : public ::google::protobuf::Message {
 public:
  QueryOffersByAccountForItemRequest();
  virtual ~QueryOffersByAccountForItemRequest();
  
  QueryOffersByAccountForItemRequest(const QueryOffersByAccountForItemRequest& from);
  
  inline QueryOffersByAccountForItemRequest& operator=(const QueryOffersByAccountForItemRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryOffersByAccountForItemRequest& default_instance();
  
  void Swap(QueryOffersByAccountForItemRequest* other);
  
  // implements Message ----------------------------------------------
  
  QueryOffersByAccountForItemRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryOffersByAccountForItemRequest& from);
  void MergeFrom(const QueryOffersByAccountForItemRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.exchange.BlobFrom account_for_item = 1;
  inline bool has_account_for_item() const;
  inline void clear_account_for_item();
  static const int kAccountForItemFieldNumber = 1;
  inline const ::bnet::protocol::exchange::BlobFrom& account_for_item() const;
  inline ::bnet::protocol::exchange::BlobFrom* mutable_account_for_item();
  inline ::bnet::protocol::exchange::BlobFrom* release_account_for_item();
  
  // required .bnet.protocol.exchange.QueryFilterByCreatedTime filter = 2;
  inline bool has_filter() const;
  inline void clear_filter();
  static const int kFilterFieldNumber = 2;
  inline const ::bnet::protocol::exchange::QueryFilterByCreatedTime& filter() const;
  inline ::bnet::protocol::exchange::QueryFilterByCreatedTime* mutable_filter();
  inline ::bnet::protocol::exchange::QueryFilterByCreatedTime* release_filter();
  
  // optional .bnet.protocol.EntityId bnet_account = 3;
  inline bool has_bnet_account() const;
  inline void clear_bnet_account();
  static const int kBnetAccountFieldNumber = 3;
  inline const ::bnet::protocol::EntityId& bnet_account() const;
  inline ::bnet::protocol::EntityId* mutable_bnet_account();
  inline ::bnet::protocol::EntityId* release_bnet_account();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.QueryOffersByAccountForItemRequest)
 private:
  inline void set_has_account_for_item();
  inline void clear_has_account_for_item();
  inline void set_has_filter();
  inline void clear_has_filter();
  inline void set_has_bnet_account();
  inline void clear_has_bnet_account();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::exchange::BlobFrom* account_for_item_;
  ::bnet::protocol::exchange::QueryFilterByCreatedTime* filter_;
  ::bnet::protocol::EntityId* bnet_account_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static QueryOffersByAccountForItemRequest* default_instance_;
};
// -------------------------------------------------------------------

class QueryOffersByAccountForItemResponse : public ::google::protobuf::Message {
 public:
  QueryOffersByAccountForItemResponse();
  virtual ~QueryOffersByAccountForItemResponse();
  
  QueryOffersByAccountForItemResponse(const QueryOffersByAccountForItemResponse& from);
  
  inline QueryOffersByAccountForItemResponse& operator=(const QueryOffersByAccountForItemResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryOffersByAccountForItemResponse& default_instance();
  
  void Swap(QueryOffersByAccountForItemResponse* other);
  
  // implements Message ----------------------------------------------
  
  QueryOffersByAccountForItemResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryOffersByAccountForItemResponse& from);
  void MergeFrom(const QueryOffersByAccountForItemResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .bnet.protocol.exchange.OfferExtended offers = 1;
  inline int offers_size() const;
  inline void clear_offers();
  static const int kOffersFieldNumber = 1;
  inline const ::bnet::protocol::exchange::OfferExtended& offers(int index) const;
  inline ::bnet::protocol::exchange::OfferExtended* mutable_offers(int index);
  inline ::bnet::protocol::exchange::OfferExtended* add_offers();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::OfferExtended >&
      offers() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::OfferExtended >*
      mutable_offers();
  
  // required uint32 total_count = 2;
  inline bool has_total_count() const;
  inline void clear_total_count();
  static const int kTotalCountFieldNumber = 2;
  inline ::google::protobuf::uint32 total_count() const;
  inline void set_total_count(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.QueryOffersByAccountForItemResponse)
 private:
  inline void set_has_total_count();
  inline void clear_has_total_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::OfferExtended > offers_;
  ::google::protobuf::uint32 total_count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static QueryOffersByAccountForItemResponse* default_instance_;
};
// -------------------------------------------------------------------

class QueryBidsByAccountForItemRequest : public ::google::protobuf::Message {
 public:
  QueryBidsByAccountForItemRequest();
  virtual ~QueryBidsByAccountForItemRequest();
  
  QueryBidsByAccountForItemRequest(const QueryBidsByAccountForItemRequest& from);
  
  inline QueryBidsByAccountForItemRequest& operator=(const QueryBidsByAccountForItemRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryBidsByAccountForItemRequest& default_instance();
  
  void Swap(QueryBidsByAccountForItemRequest* other);
  
  // implements Message ----------------------------------------------
  
  QueryBidsByAccountForItemRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryBidsByAccountForItemRequest& from);
  void MergeFrom(const QueryBidsByAccountForItemRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.exchange.BlobFrom account_for_item = 1;
  inline bool has_account_for_item() const;
  inline void clear_account_for_item();
  static const int kAccountForItemFieldNumber = 1;
  inline const ::bnet::protocol::exchange::BlobFrom& account_for_item() const;
  inline ::bnet::protocol::exchange::BlobFrom* mutable_account_for_item();
  inline ::bnet::protocol::exchange::BlobFrom* release_account_for_item();
  
  // required .bnet.protocol.exchange.QueryFilterByCreatedTime filter = 2;
  inline bool has_filter() const;
  inline void clear_filter();
  static const int kFilterFieldNumber = 2;
  inline const ::bnet::protocol::exchange::QueryFilterByCreatedTime& filter() const;
  inline ::bnet::protocol::exchange::QueryFilterByCreatedTime* mutable_filter();
  inline ::bnet::protocol::exchange::QueryFilterByCreatedTime* release_filter();
  
  // optional .bnet.protocol.EntityId bnet_account = 3;
  inline bool has_bnet_account() const;
  inline void clear_bnet_account();
  static const int kBnetAccountFieldNumber = 3;
  inline const ::bnet::protocol::EntityId& bnet_account() const;
  inline ::bnet::protocol::EntityId* mutable_bnet_account();
  inline ::bnet::protocol::EntityId* release_bnet_account();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.QueryBidsByAccountForItemRequest)
 private:
  inline void set_has_account_for_item();
  inline void clear_has_account_for_item();
  inline void set_has_filter();
  inline void clear_has_filter();
  inline void set_has_bnet_account();
  inline void clear_has_bnet_account();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::exchange::BlobFrom* account_for_item_;
  ::bnet::protocol::exchange::QueryFilterByCreatedTime* filter_;
  ::bnet::protocol::EntityId* bnet_account_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static QueryBidsByAccountForItemRequest* default_instance_;
};
// -------------------------------------------------------------------

class QueryBidsByAccountForItemResponse : public ::google::protobuf::Message {
 public:
  QueryBidsByAccountForItemResponse();
  virtual ~QueryBidsByAccountForItemResponse();
  
  QueryBidsByAccountForItemResponse(const QueryBidsByAccountForItemResponse& from);
  
  inline QueryBidsByAccountForItemResponse& operator=(const QueryBidsByAccountForItemResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryBidsByAccountForItemResponse& default_instance();
  
  void Swap(QueryBidsByAccountForItemResponse* other);
  
  // implements Message ----------------------------------------------
  
  QueryBidsByAccountForItemResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryBidsByAccountForItemResponse& from);
  void MergeFrom(const QueryBidsByAccountForItemResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .bnet.protocol.exchange.BidExtended bids = 1;
  inline int bids_size() const;
  inline void clear_bids();
  static const int kBidsFieldNumber = 1;
  inline const ::bnet::protocol::exchange::BidExtended& bids(int index) const;
  inline ::bnet::protocol::exchange::BidExtended* mutable_bids(int index);
  inline ::bnet::protocol::exchange::BidExtended* add_bids();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::BidExtended >&
      bids() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::BidExtended >*
      mutable_bids();
  
  // required uint32 total_count = 2;
  inline bool has_total_count() const;
  inline void clear_total_count();
  static const int kTotalCountFieldNumber = 2;
  inline ::google::protobuf::uint32 total_count() const;
  inline void set_total_count(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.QueryBidsByAccountForItemResponse)
 private:
  inline void set_has_total_count();
  inline void clear_has_total_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::BidExtended > bids_;
  ::google::protobuf::uint32 total_count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static QueryBidsByAccountForItemResponse* default_instance_;
};
// -------------------------------------------------------------------

class QueryOrderBooksSummaryRequest : public ::google::protobuf::Message {
 public:
  QueryOrderBooksSummaryRequest();
  virtual ~QueryOrderBooksSummaryRequest();
  
  QueryOrderBooksSummaryRequest(const QueryOrderBooksSummaryRequest& from);
  
  inline QueryOrderBooksSummaryRequest& operator=(const QueryOrderBooksSummaryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryOrderBooksSummaryRequest& default_instance();
  
  void Swap(QueryOrderBooksSummaryRequest* other);
  
  // implements Message ----------------------------------------------
  
  QueryOrderBooksSummaryRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryOrderBooksSummaryRequest& from);
  void MergeFrom(const QueryOrderBooksSummaryRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .bnet.protocol.exchange.OrderBookHandle handles = 1;
  inline int handles_size() const;
  inline void clear_handles();
  static const int kHandlesFieldNumber = 1;
  inline const ::bnet::protocol::exchange::OrderBookHandle& handles(int index) const;
  inline ::bnet::protocol::exchange::OrderBookHandle* mutable_handles(int index);
  inline ::bnet::protocol::exchange::OrderBookHandle* add_handles();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::OrderBookHandle >&
      handles() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::OrderBookHandle >*
      mutable_handles();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.QueryOrderBooksSummaryRequest)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::OrderBookHandle > handles_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static QueryOrderBooksSummaryRequest* default_instance_;
};
// -------------------------------------------------------------------

class QueryOrderBooksSummaryResponse : public ::google::protobuf::Message {
 public:
  QueryOrderBooksSummaryResponse();
  virtual ~QueryOrderBooksSummaryResponse();
  
  QueryOrderBooksSummaryResponse(const QueryOrderBooksSummaryResponse& from);
  
  inline QueryOrderBooksSummaryResponse& operator=(const QueryOrderBooksSummaryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryOrderBooksSummaryResponse& default_instance();
  
  void Swap(QueryOrderBooksSummaryResponse* other);
  
  // implements Message ----------------------------------------------
  
  QueryOrderBooksSummaryResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryOrderBooksSummaryResponse& from);
  void MergeFrom(const QueryOrderBooksSummaryResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .bnet.protocol.exchange.OrderBookSummary order_books = 1;
  inline int order_books_size() const;
  inline void clear_order_books();
  static const int kOrderBooksFieldNumber = 1;
  inline const ::bnet::protocol::exchange::OrderBookSummary& order_books(int index) const;
  inline ::bnet::protocol::exchange::OrderBookSummary* mutable_order_books(int index);
  inline ::bnet::protocol::exchange::OrderBookSummary* add_order_books();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::OrderBookSummary >&
      order_books() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::OrderBookSummary >*
      mutable_order_books();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.QueryOrderBooksSummaryResponse)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::OrderBookSummary > order_books_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static QueryOrderBooksSummaryResponse* default_instance_;
};
// -------------------------------------------------------------------

class QuerySettlementsByOrderBookRequest : public ::google::protobuf::Message {
 public:
  QuerySettlementsByOrderBookRequest();
  virtual ~QuerySettlementsByOrderBookRequest();
  
  QuerySettlementsByOrderBookRequest(const QuerySettlementsByOrderBookRequest& from);
  
  inline QuerySettlementsByOrderBookRequest& operator=(const QuerySettlementsByOrderBookRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const QuerySettlementsByOrderBookRequest& default_instance();
  
  void Swap(QuerySettlementsByOrderBookRequest* other);
  
  // implements Message ----------------------------------------------
  
  QuerySettlementsByOrderBookRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuerySettlementsByOrderBookRequest& from);
  void MergeFrom(const QuerySettlementsByOrderBookRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.exchange.PartitionId partition_id = 1;
  inline bool has_partition_id() const;
  inline void clear_partition_id();
  static const int kPartitionIdFieldNumber = 1;
  inline const ::bnet::protocol::exchange::PartitionId& partition_id() const;
  inline ::bnet::protocol::exchange::PartitionId* mutable_partition_id();
  inline ::bnet::protocol::exchange::PartitionId* release_partition_id();
  
  // required .bnet.protocol.exchange.QueryFilterByOrderId filter = 2;
  inline bool has_filter() const;
  inline void clear_filter();
  static const int kFilterFieldNumber = 2;
  inline const ::bnet::protocol::exchange::QueryFilterByOrderId& filter() const;
  inline ::bnet::protocol::exchange::QueryFilterByOrderId* mutable_filter();
  inline ::bnet::protocol::exchange::QueryFilterByOrderId* release_filter();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.QuerySettlementsByOrderBookRequest)
 private:
  inline void set_has_partition_id();
  inline void clear_has_partition_id();
  inline void set_has_filter();
  inline void clear_has_filter();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::exchange::PartitionId* partition_id_;
  ::bnet::protocol::exchange::QueryFilterByOrderId* filter_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static QuerySettlementsByOrderBookRequest* default_instance_;
};
// -------------------------------------------------------------------

class QuerySettlementsByOrderBookResponse : public ::google::protobuf::Message {
 public:
  QuerySettlementsByOrderBookResponse();
  virtual ~QuerySettlementsByOrderBookResponse();
  
  QuerySettlementsByOrderBookResponse(const QuerySettlementsByOrderBookResponse& from);
  
  inline QuerySettlementsByOrderBookResponse& operator=(const QuerySettlementsByOrderBookResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const QuerySettlementsByOrderBookResponse& default_instance();
  
  void Swap(QuerySettlementsByOrderBookResponse* other);
  
  // implements Message ----------------------------------------------
  
  QuerySettlementsByOrderBookResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuerySettlementsByOrderBookResponse& from);
  void MergeFrom(const QuerySettlementsByOrderBookResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .bnet.protocol.exchange.Settlement settlements = 1;
  inline int settlements_size() const;
  inline void clear_settlements();
  static const int kSettlementsFieldNumber = 1;
  inline const ::bnet::protocol::exchange::Settlement& settlements(int index) const;
  inline ::bnet::protocol::exchange::Settlement* mutable_settlements(int index);
  inline ::bnet::protocol::exchange::Settlement* add_settlements();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::Settlement >&
      settlements() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::Settlement >*
      mutable_settlements();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.QuerySettlementsByOrderBookResponse)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::Settlement > settlements_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static QuerySettlementsByOrderBookResponse* default_instance_;
};
// -------------------------------------------------------------------

class SubscribeOrderBookStatusChangeRequest : public ::google::protobuf::Message {
 public:
  SubscribeOrderBookStatusChangeRequest();
  virtual ~SubscribeOrderBookStatusChangeRequest();
  
  SubscribeOrderBookStatusChangeRequest(const SubscribeOrderBookStatusChangeRequest& from);
  
  inline SubscribeOrderBookStatusChangeRequest& operator=(const SubscribeOrderBookStatusChangeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubscribeOrderBookStatusChangeRequest& default_instance();
  
  void Swap(SubscribeOrderBookStatusChangeRequest* other);
  
  // implements Message ----------------------------------------------
  
  SubscribeOrderBookStatusChangeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubscribeOrderBookStatusChangeRequest& from);
  void MergeFrom(const SubscribeOrderBookStatusChangeRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 object_id = 1;
  inline bool has_object_id() const;
  inline void clear_object_id();
  static const int kObjectIdFieldNumber = 1;
  inline ::google::protobuf::uint64 object_id() const;
  inline void set_object_id(::google::protobuf::uint64 value);
  
  // required .bnet.protocol.exchange.PartitionId min_partition_id = 2;
  inline bool has_min_partition_id() const;
  inline void clear_min_partition_id();
  static const int kMinPartitionIdFieldNumber = 2;
  inline const ::bnet::protocol::exchange::PartitionId& min_partition_id() const;
  inline ::bnet::protocol::exchange::PartitionId* mutable_min_partition_id();
  inline ::bnet::protocol::exchange::PartitionId* release_min_partition_id();
  
  // required .bnet.protocol.exchange.PartitionId max_partition_id = 3;
  inline bool has_max_partition_id() const;
  inline void clear_max_partition_id();
  static const int kMaxPartitionIdFieldNumber = 3;
  inline const ::bnet::protocol::exchange::PartitionId& max_partition_id() const;
  inline ::bnet::protocol::exchange::PartitionId* mutable_max_partition_id();
  inline ::bnet::protocol::exchange::PartitionId* release_max_partition_id();
  
  // required fixed32 program = 4;
  inline bool has_program() const;
  inline void clear_program();
  static const int kProgramFieldNumber = 4;
  inline ::google::protobuf::uint32 program() const;
  inline void set_program(::google::protobuf::uint32 value);
  
  // required int32 status = 5;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 5;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);
  
  // optional string currency = 6;
  inline bool has_currency() const;
  inline void clear_currency();
  static const int kCurrencyFieldNumber = 6;
  inline const ::std::string& currency() const;
  inline void set_currency(const ::std::string& value);
  inline void set_currency(const char* value);
  inline void set_currency(const char* value, size_t size);
  inline ::std::string* mutable_currency();
  inline ::std::string* release_currency();
  
  // optional int32 specialist = 7;
  inline bool has_specialist() const;
  inline void clear_specialist();
  static const int kSpecialistFieldNumber = 7;
  inline ::google::protobuf::int32 specialist() const;
  inline void set_specialist(::google::protobuf::int32 value);
  
  // optional bool bootstrap = 8;
  inline bool has_bootstrap() const;
  inline void clear_bootstrap();
  static const int kBootstrapFieldNumber = 8;
  inline bool bootstrap() const;
  inline void set_bootstrap(bool value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.SubscribeOrderBookStatusChangeRequest)
 private:
  inline void set_has_object_id();
  inline void clear_has_object_id();
  inline void set_has_min_partition_id();
  inline void clear_has_min_partition_id();
  inline void set_has_max_partition_id();
  inline void clear_has_max_partition_id();
  inline void set_has_program();
  inline void clear_has_program();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_currency();
  inline void clear_has_currency();
  inline void set_has_specialist();
  inline void clear_has_specialist();
  inline void set_has_bootstrap();
  inline void clear_has_bootstrap();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 object_id_;
  ::bnet::protocol::exchange::PartitionId* min_partition_id_;
  ::bnet::protocol::exchange::PartitionId* max_partition_id_;
  ::google::protobuf::uint32 program_;
  ::google::protobuf::int32 status_;
  ::std::string* currency_;
  ::google::protobuf::int32 specialist_;
  bool bootstrap_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static SubscribeOrderBookStatusChangeRequest* default_instance_;
};
// -------------------------------------------------------------------

class UnsubscribeOrderBookStatusChangeRequest : public ::google::protobuf::Message {
 public:
  UnsubscribeOrderBookStatusChangeRequest();
  virtual ~UnsubscribeOrderBookStatusChangeRequest();
  
  UnsubscribeOrderBookStatusChangeRequest(const UnsubscribeOrderBookStatusChangeRequest& from);
  
  inline UnsubscribeOrderBookStatusChangeRequest& operator=(const UnsubscribeOrderBookStatusChangeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnsubscribeOrderBookStatusChangeRequest& default_instance();
  
  void Swap(UnsubscribeOrderBookStatusChangeRequest* other);
  
  // implements Message ----------------------------------------------
  
  UnsubscribeOrderBookStatusChangeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnsubscribeOrderBookStatusChangeRequest& from);
  void MergeFrom(const UnsubscribeOrderBookStatusChangeRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.UnsubscribeOrderBookStatusChangeRequest)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static UnsubscribeOrderBookStatusChangeRequest* default_instance_;
};
// -------------------------------------------------------------------

class SubscribeOrderStatusChangeRequest : public ::google::protobuf::Message {
 public:
  SubscribeOrderStatusChangeRequest();
  virtual ~SubscribeOrderStatusChangeRequest();
  
  SubscribeOrderStatusChangeRequest(const SubscribeOrderStatusChangeRequest& from);
  
  inline SubscribeOrderStatusChangeRequest& operator=(const SubscribeOrderStatusChangeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubscribeOrderStatusChangeRequest& default_instance();
  
  void Swap(SubscribeOrderStatusChangeRequest* other);
  
  // implements Message ----------------------------------------------
  
  SubscribeOrderStatusChangeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubscribeOrderStatusChangeRequest& from);
  void MergeFrom(const SubscribeOrderStatusChangeRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.EntityId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bnet::protocol::EntityId& agent_id() const;
  inline ::bnet::protocol::EntityId* mutable_agent_id();
  inline ::bnet::protocol::EntityId* release_agent_id();
  
  // required uint64 object_id = 2;
  inline bool has_object_id() const;
  inline void clear_object_id();
  static const int kObjectIdFieldNumber = 2;
  inline ::google::protobuf::uint64 object_id() const;
  inline void set_object_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.SubscribeOrderStatusChangeRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_object_id();
  inline void clear_has_object_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::EntityId* agent_id_;
  ::google::protobuf::uint64 object_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static SubscribeOrderStatusChangeRequest* default_instance_;
};
// -------------------------------------------------------------------

class UnsubscribeOrderStatusChangeRequest : public ::google::protobuf::Message {
 public:
  UnsubscribeOrderStatusChangeRequest();
  virtual ~UnsubscribeOrderStatusChangeRequest();
  
  UnsubscribeOrderStatusChangeRequest(const UnsubscribeOrderStatusChangeRequest& from);
  
  inline UnsubscribeOrderStatusChangeRequest& operator=(const UnsubscribeOrderStatusChangeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnsubscribeOrderStatusChangeRequest& default_instance();
  
  void Swap(UnsubscribeOrderStatusChangeRequest* other);
  
  // implements Message ----------------------------------------------
  
  UnsubscribeOrderStatusChangeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnsubscribeOrderStatusChangeRequest& from);
  void MergeFrom(const UnsubscribeOrderStatusChangeRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.EntityId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bnet::protocol::EntityId& agent_id() const;
  inline ::bnet::protocol::EntityId* mutable_agent_id();
  inline ::bnet::protocol::EntityId* release_agent_id();
  
  // required uint64 object_id = 2;
  inline bool has_object_id() const;
  inline void clear_object_id();
  static const int kObjectIdFieldNumber = 2;
  inline ::google::protobuf::uint64 object_id() const;
  inline void set_object_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.UnsubscribeOrderStatusChangeRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_object_id();
  inline void clear_has_object_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::EntityId* agent_id_;
  ::google::protobuf::uint64 object_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static UnsubscribeOrderStatusChangeRequest* default_instance_;
};
// -------------------------------------------------------------------

class ClaimRequest : public ::google::protobuf::Message {
 public:
  ClaimRequest();
  virtual ~ClaimRequest();
  
  ClaimRequest(const ClaimRequest& from);
  
  inline ClaimRequest& operator=(const ClaimRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClaimRequest& default_instance();
  
  void Swap(ClaimRequest* other);
  
  // implements Message ----------------------------------------------
  
  ClaimRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClaimRequest& from);
  void MergeFrom(const ClaimRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.exchange.PartitionId partition_id = 1;
  inline bool has_partition_id() const;
  inline void clear_partition_id();
  static const int kPartitionIdFieldNumber = 1;
  inline const ::bnet::protocol::exchange::PartitionId& partition_id() const;
  inline ::bnet::protocol::exchange::PartitionId* mutable_partition_id();
  inline ::bnet::protocol::exchange::PartitionId* release_partition_id();
  
  // required uint32 order_id = 2;
  inline bool has_order_id() const;
  inline void clear_order_id();
  static const int kOrderIdFieldNumber = 2;
  inline ::google::protobuf::uint32 order_id() const;
  inline void set_order_id(::google::protobuf::uint32 value);
  
  // optional .bnet.protocol.EntityId bnet_account = 3;
  inline bool has_bnet_account() const;
  inline void clear_bnet_account();
  static const int kBnetAccountFieldNumber = 3;
  inline const ::bnet::protocol::EntityId& bnet_account() const;
  inline ::bnet::protocol::EntityId* mutable_bnet_account();
  inline ::bnet::protocol::EntityId* release_bnet_account();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.ClaimRequest)
 private:
  inline void set_has_partition_id();
  inline void clear_has_partition_id();
  inline void set_has_order_id();
  inline void clear_has_order_id();
  inline void set_has_bnet_account();
  inline void clear_has_bnet_account();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::exchange::PartitionId* partition_id_;
  ::bnet::protocol::EntityId* bnet_account_;
  ::google::protobuf::uint32 order_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static ClaimRequest* default_instance_;
};
// -------------------------------------------------------------------

class CancelRequest : public ::google::protobuf::Message {
 public:
  CancelRequest();
  virtual ~CancelRequest();
  
  CancelRequest(const CancelRequest& from);
  
  inline CancelRequest& operator=(const CancelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CancelRequest& default_instance();
  
  void Swap(CancelRequest* other);
  
  // implements Message ----------------------------------------------
  
  CancelRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CancelRequest& from);
  void MergeFrom(const CancelRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.exchange.PartitionId partition_id = 1;
  inline bool has_partition_id() const;
  inline void clear_partition_id();
  static const int kPartitionIdFieldNumber = 1;
  inline const ::bnet::protocol::exchange::PartitionId& partition_id() const;
  inline ::bnet::protocol::exchange::PartitionId* mutable_partition_id();
  inline ::bnet::protocol::exchange::PartitionId* release_partition_id();
  
  // required uint32 order_id = 2;
  inline bool has_order_id() const;
  inline void clear_order_id();
  static const int kOrderIdFieldNumber = 2;
  inline ::google::protobuf::uint32 order_id() const;
  inline void set_order_id(::google::protobuf::uint32 value);
  
  // optional uint32 reason = 3;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 3;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);
  
  // optional .bnet.protocol.EntityId bnet_account = 4;
  inline bool has_bnet_account() const;
  inline void clear_bnet_account();
  static const int kBnetAccountFieldNumber = 4;
  inline const ::bnet::protocol::EntityId& bnet_account() const;
  inline ::bnet::protocol::EntityId* mutable_bnet_account();
  inline ::bnet::protocol::EntityId* release_bnet_account();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.CancelRequest)
 private:
  inline void set_has_partition_id();
  inline void clear_has_partition_id();
  inline void set_has_order_id();
  inline void clear_has_order_id();
  inline void set_has_reason();
  inline void clear_has_reason();
  inline void set_has_bnet_account();
  inline void clear_has_bnet_account();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::exchange::PartitionId* partition_id_;
  ::google::protobuf::uint32 order_id_;
  ::google::protobuf::uint32 reason_;
  ::bnet::protocol::EntityId* bnet_account_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static CancelRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetConfigurationRequest : public ::google::protobuf::Message {
 public:
  GetConfigurationRequest();
  virtual ~GetConfigurationRequest();
  
  GetConfigurationRequest(const GetConfigurationRequest& from);
  
  inline GetConfigurationRequest& operator=(const GetConfigurationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetConfigurationRequest& default_instance();
  
  void Swap(GetConfigurationRequest* other);
  
  // implements Message ----------------------------------------------
  
  GetConfigurationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetConfigurationRequest& from);
  void MergeFrom(const GetConfigurationRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required fixed32 program = 1;
  inline bool has_program() const;
  inline void clear_program();
  static const int kProgramFieldNumber = 1;
  inline ::google::protobuf::uint32 program() const;
  inline void set_program(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.GetConfigurationRequest)
 private:
  inline void set_has_program();
  inline void clear_has_program();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 program_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static GetConfigurationRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetConfigurationResponse : public ::google::protobuf::Message {
 public:
  GetConfigurationResponse();
  virtual ~GetConfigurationResponse();
  
  GetConfigurationResponse(const GetConfigurationResponse& from);
  
  inline GetConfigurationResponse& operator=(const GetConfigurationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetConfigurationResponse& default_instance();
  
  void Swap(GetConfigurationResponse* other);
  
  // implements Message ----------------------------------------------
  
  GetConfigurationResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetConfigurationResponse& from);
  void MergeFrom(const GetConfigurationResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .bnet.protocol.exchange.SpecialistConfig configs = 1;
  inline int configs_size() const;
  inline void clear_configs();
  static const int kConfigsFieldNumber = 1;
  inline const ::bnet::protocol::exchange::SpecialistConfig& configs(int index) const;
  inline ::bnet::protocol::exchange::SpecialistConfig* mutable_configs(int index);
  inline ::bnet::protocol::exchange::SpecialistConfig* add_configs();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::SpecialistConfig >&
      configs() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::SpecialistConfig >*
      mutable_configs();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.GetConfigurationResponse)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::SpecialistConfig > configs_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static GetConfigurationResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetOfferFeeEstimationRequest : public ::google::protobuf::Message {
 public:
  GetOfferFeeEstimationRequest();
  virtual ~GetOfferFeeEstimationRequest();
  
  GetOfferFeeEstimationRequest(const GetOfferFeeEstimationRequest& from);
  
  inline GetOfferFeeEstimationRequest& operator=(const GetOfferFeeEstimationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetOfferFeeEstimationRequest& default_instance();
  
  void Swap(GetOfferFeeEstimationRequest* other);
  
  // implements Message ----------------------------------------------
  
  GetOfferFeeEstimationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetOfferFeeEstimationRequest& from);
  void MergeFrom(const GetOfferFeeEstimationRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.exchange.PartitionId partition_id = 1;
  inline bool has_partition_id() const;
  inline void clear_partition_id();
  static const int kPartitionIdFieldNumber = 1;
  inline const ::bnet::protocol::exchange::PartitionId& partition_id() const;
  inline ::bnet::protocol::exchange::PartitionId* mutable_partition_id();
  inline ::bnet::protocol::exchange::PartitionId* release_partition_id();
  
  // required .bnet.protocol.exchange.FeeEstimationData data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::bnet::protocol::exchange::FeeEstimationData& data() const;
  inline ::bnet::protocol::exchange::FeeEstimationData* mutable_data();
  inline ::bnet::protocol::exchange::FeeEstimationData* release_data();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.GetOfferFeeEstimationRequest)
 private:
  inline void set_has_partition_id();
  inline void clear_has_partition_id();
  inline void set_has_data();
  inline void clear_has_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::exchange::PartitionId* partition_id_;
  ::bnet::protocol::exchange::FeeEstimationData* data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static GetOfferFeeEstimationRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetBidFeeEstimationRequest : public ::google::protobuf::Message {
 public:
  GetBidFeeEstimationRequest();
  virtual ~GetBidFeeEstimationRequest();
  
  GetBidFeeEstimationRequest(const GetBidFeeEstimationRequest& from);
  
  inline GetBidFeeEstimationRequest& operator=(const GetBidFeeEstimationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBidFeeEstimationRequest& default_instance();
  
  void Swap(GetBidFeeEstimationRequest* other);
  
  // implements Message ----------------------------------------------
  
  GetBidFeeEstimationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetBidFeeEstimationRequest& from);
  void MergeFrom(const GetBidFeeEstimationRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.exchange.PartitionId partition_id = 1;
  inline bool has_partition_id() const;
  inline void clear_partition_id();
  static const int kPartitionIdFieldNumber = 1;
  inline const ::bnet::protocol::exchange::PartitionId& partition_id() const;
  inline ::bnet::protocol::exchange::PartitionId* mutable_partition_id();
  inline ::bnet::protocol::exchange::PartitionId* release_partition_id();
  
  // required .bnet.protocol.exchange.FeeEstimationData data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::bnet::protocol::exchange::FeeEstimationData& data() const;
  inline ::bnet::protocol::exchange::FeeEstimationData* mutable_data();
  inline ::bnet::protocol::exchange::FeeEstimationData* release_data();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.GetBidFeeEstimationRequest)
 private:
  inline void set_has_partition_id();
  inline void clear_has_partition_id();
  inline void set_has_data();
  inline void clear_has_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::exchange::PartitionId* partition_id_;
  ::bnet::protocol::exchange::FeeEstimationData* data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static GetBidFeeEstimationRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetFeeEstimationResponse : public ::google::protobuf::Message {
 public:
  GetFeeEstimationResponse();
  virtual ~GetFeeEstimationResponse();
  
  GetFeeEstimationResponse(const GetFeeEstimationResponse& from);
  
  inline GetFeeEstimationResponse& operator=(const GetFeeEstimationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFeeEstimationResponse& default_instance();
  
  void Swap(GetFeeEstimationResponse* other);
  
  // implements Message ----------------------------------------------
  
  GetFeeEstimationResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFeeEstimationResponse& from);
  void MergeFrom(const GetFeeEstimationResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 fee_amount = 1;
  inline bool has_fee_amount() const;
  inline void clear_fee_amount();
  static const int kFeeAmountFieldNumber = 1;
  inline ::google::protobuf::uint64 fee_amount() const;
  inline void set_fee_amount(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.GetFeeEstimationResponse)
 private:
  inline void set_has_fee_amount();
  inline void clear_has_fee_amount();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 fee_amount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static GetFeeEstimationResponse* default_instance_;
};
// -------------------------------------------------------------------

class OrderBookNotificationRequest : public ::google::protobuf::Message {
 public:
  OrderBookNotificationRequest();
  virtual ~OrderBookNotificationRequest();
  
  OrderBookNotificationRequest(const OrderBookNotificationRequest& from);
  
  inline OrderBookNotificationRequest& operator=(const OrderBookNotificationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderBookNotificationRequest& default_instance();
  
  void Swap(OrderBookNotificationRequest* other);
  
  // implements Message ----------------------------------------------
  
  OrderBookNotificationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderBookNotificationRequest& from);
  void MergeFrom(const OrderBookNotificationRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .bnet.protocol.exchange.OrderBookNotification notifications = 1;
  inline int notifications_size() const;
  inline void clear_notifications();
  static const int kNotificationsFieldNumber = 1;
  inline const ::bnet::protocol::exchange::OrderBookNotification& notifications(int index) const;
  inline ::bnet::protocol::exchange::OrderBookNotification* mutable_notifications(int index);
  inline ::bnet::protocol::exchange::OrderBookNotification* add_notifications();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::OrderBookNotification >&
      notifications() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::OrderBookNotification >*
      mutable_notifications();
  
  // optional bool boot_strap_last = 2;
  inline bool has_boot_strap_last() const;
  inline void clear_boot_strap_last();
  static const int kBootStrapLastFieldNumber = 2;
  inline bool boot_strap_last() const;
  inline void set_boot_strap_last(bool value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.OrderBookNotificationRequest)
 private:
  inline void set_has_boot_strap_last();
  inline void clear_has_boot_strap_last();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::OrderBookNotification > notifications_;
  bool boot_strap_last_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static OrderBookNotificationRequest* default_instance_;
};
// -------------------------------------------------------------------

class OfferNotificationRequest : public ::google::protobuf::Message {
 public:
  OfferNotificationRequest();
  virtual ~OfferNotificationRequest();
  
  OfferNotificationRequest(const OfferNotificationRequest& from);
  
  inline OfferNotificationRequest& operator=(const OfferNotificationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const OfferNotificationRequest& default_instance();
  
  void Swap(OfferNotificationRequest* other);
  
  // implements Message ----------------------------------------------
  
  OfferNotificationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OfferNotificationRequest& from);
  void MergeFrom(const OfferNotificationRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.exchange.OfferExtended offer = 1;
  inline bool has_offer() const;
  inline void clear_offer();
  static const int kOfferFieldNumber = 1;
  inline const ::bnet::protocol::exchange::OfferExtended& offer() const;
  inline ::bnet::protocol::exchange::OfferExtended* mutable_offer();
  inline ::bnet::protocol::exchange::OfferExtended* release_offer();
  
  // required uint32 event = 2;
  inline bool has_event() const;
  inline void clear_event();
  static const int kEventFieldNumber = 2;
  inline ::google::protobuf::uint32 event() const;
  inline void set_event(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.OfferNotificationRequest)
 private:
  inline void set_has_offer();
  inline void clear_has_offer();
  inline void set_has_event();
  inline void clear_has_event();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::exchange::OfferExtended* offer_;
  ::google::protobuf::uint32 event_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static OfferNotificationRequest* default_instance_;
};
// -------------------------------------------------------------------

class BidNotificationRequest : public ::google::protobuf::Message {
 public:
  BidNotificationRequest();
  virtual ~BidNotificationRequest();
  
  BidNotificationRequest(const BidNotificationRequest& from);
  
  inline BidNotificationRequest& operator=(const BidNotificationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BidNotificationRequest& default_instance();
  
  void Swap(BidNotificationRequest* other);
  
  // implements Message ----------------------------------------------
  
  BidNotificationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidNotificationRequest& from);
  void MergeFrom(const BidNotificationRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.exchange.BidExtended bid = 1;
  inline bool has_bid() const;
  inline void clear_bid();
  static const int kBidFieldNumber = 1;
  inline const ::bnet::protocol::exchange::BidExtended& bid() const;
  inline ::bnet::protocol::exchange::BidExtended* mutable_bid();
  inline ::bnet::protocol::exchange::BidExtended* release_bid();
  
  // required uint32 event = 2;
  inline bool has_event() const;
  inline void clear_event();
  static const int kEventFieldNumber = 2;
  inline ::google::protobuf::uint32 event() const;
  inline void set_event(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange.BidNotificationRequest)
 private:
  inline void set_has_bid();
  inline void clear_has_bid();
  inline void set_has_event();
  inline void clear_has_event();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::exchange::BidExtended* bid_;
  ::google::protobuf::uint32 event_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_AssignDesc_service_2fexchange_2fexchange_2eproto();
  friend void protobuf_ShutdownFile_service_2fexchange_2fexchange_2eproto();
  
  void InitAsDefaultInstance();
  static BidNotificationRequest* default_instance_;
};
// ===================================================================


// ===================================================================

// CreateOrderBookRequest

// required .bnet.protocol.exchange.PartitionId partition_id = 1;
inline bool CreateOrderBookRequest::has_partition_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateOrderBookRequest::set_has_partition_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateOrderBookRequest::clear_has_partition_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateOrderBookRequest::clear_partition_id() {
  if (partition_id_ != NULL) partition_id_->::bnet::protocol::exchange::PartitionId::Clear();
  clear_has_partition_id();
}
inline const ::bnet::protocol::exchange::PartitionId& CreateOrderBookRequest::partition_id() const {
  return partition_id_ != NULL ? *partition_id_ : *default_instance_->partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* CreateOrderBookRequest::mutable_partition_id() {
  set_has_partition_id();
  if (partition_id_ == NULL) partition_id_ = new ::bnet::protocol::exchange::PartitionId;
  return partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* CreateOrderBookRequest::release_partition_id() {
  clear_has_partition_id();
  ::bnet::protocol::exchange::PartitionId* temp = partition_id_;
  partition_id_ = NULL;
  return temp;
}

// required .bnet.protocol.exchange.OrderBook order_book = 2;
inline bool CreateOrderBookRequest::has_order_book() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateOrderBookRequest::set_has_order_book() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateOrderBookRequest::clear_has_order_book() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateOrderBookRequest::clear_order_book() {
  if (order_book_ != NULL) order_book_->::bnet::protocol::exchange::OrderBook::Clear();
  clear_has_order_book();
}
inline const ::bnet::protocol::exchange::OrderBook& CreateOrderBookRequest::order_book() const {
  return order_book_ != NULL ? *order_book_ : *default_instance_->order_book_;
}
inline ::bnet::protocol::exchange::OrderBook* CreateOrderBookRequest::mutable_order_book() {
  set_has_order_book();
  if (order_book_ == NULL) order_book_ = new ::bnet::protocol::exchange::OrderBook;
  return order_book_;
}
inline ::bnet::protocol::exchange::OrderBook* CreateOrderBookRequest::release_order_book() {
  clear_has_order_book();
  ::bnet::protocol::exchange::OrderBook* temp = order_book_;
  order_book_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CreateOrderBookResponse

// optional uint64 order_book_id = 1;
inline bool CreateOrderBookResponse::has_order_book_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateOrderBookResponse::set_has_order_book_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateOrderBookResponse::clear_has_order_book_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateOrderBookResponse::clear_order_book_id() {
  order_book_id_ = GOOGLE_ULONGLONG(0);
  clear_has_order_book_id();
}
inline ::google::protobuf::uint64 CreateOrderBookResponse::order_book_id() const {
  return order_book_id_;
}
inline void CreateOrderBookResponse::set_order_book_id(::google::protobuf::uint64 value) {
  set_has_order_book_id();
  order_book_id_ = value;
}

// -------------------------------------------------------------------

// PlaceOfferOnOrderBookRequest

// required .bnet.protocol.exchange.PartitionId partition_id = 1;
inline bool PlaceOfferOnOrderBookRequest::has_partition_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlaceOfferOnOrderBookRequest::set_has_partition_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlaceOfferOnOrderBookRequest::clear_has_partition_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlaceOfferOnOrderBookRequest::clear_partition_id() {
  if (partition_id_ != NULL) partition_id_->::bnet::protocol::exchange::PartitionId::Clear();
  clear_has_partition_id();
}
inline const ::bnet::protocol::exchange::PartitionId& PlaceOfferOnOrderBookRequest::partition_id() const {
  return partition_id_ != NULL ? *partition_id_ : *default_instance_->partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* PlaceOfferOnOrderBookRequest::mutable_partition_id() {
  set_has_partition_id();
  if (partition_id_ == NULL) partition_id_ = new ::bnet::protocol::exchange::PartitionId;
  return partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* PlaceOfferOnOrderBookRequest::release_partition_id() {
  clear_has_partition_id();
  ::bnet::protocol::exchange::PartitionId* temp = partition_id_;
  partition_id_ = NULL;
  return temp;
}

// required .bnet.protocol.exchange.OfferCreation offer_creation = 2;
inline bool PlaceOfferOnOrderBookRequest::has_offer_creation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlaceOfferOnOrderBookRequest::set_has_offer_creation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlaceOfferOnOrderBookRequest::clear_has_offer_creation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlaceOfferOnOrderBookRequest::clear_offer_creation() {
  if (offer_creation_ != NULL) offer_creation_->::bnet::protocol::exchange::OfferCreation::Clear();
  clear_has_offer_creation();
}
inline const ::bnet::protocol::exchange::OfferCreation& PlaceOfferOnOrderBookRequest::offer_creation() const {
  return offer_creation_ != NULL ? *offer_creation_ : *default_instance_->offer_creation_;
}
inline ::bnet::protocol::exchange::OfferCreation* PlaceOfferOnOrderBookRequest::mutable_offer_creation() {
  set_has_offer_creation();
  if (offer_creation_ == NULL) offer_creation_ = new ::bnet::protocol::exchange::OfferCreation;
  return offer_creation_;
}
inline ::bnet::protocol::exchange::OfferCreation* PlaceOfferOnOrderBookRequest::release_offer_creation() {
  clear_has_offer_creation();
  ::bnet::protocol::exchange::OfferCreation* temp = offer_creation_;
  offer_creation_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PlaceOfferOnOrderBookResponse

// optional uint64 order_book_id = 1;
inline bool PlaceOfferOnOrderBookResponse::has_order_book_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlaceOfferOnOrderBookResponse::set_has_order_book_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlaceOfferOnOrderBookResponse::clear_has_order_book_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlaceOfferOnOrderBookResponse::clear_order_book_id() {
  order_book_id_ = GOOGLE_ULONGLONG(0);
  clear_has_order_book_id();
}
inline ::google::protobuf::uint64 PlaceOfferOnOrderBookResponse::order_book_id() const {
  return order_book_id_;
}
inline void PlaceOfferOnOrderBookResponse::set_order_book_id(::google::protobuf::uint64 value) {
  set_has_order_book_id();
  order_book_id_ = value;
}

// optional uint64 offer_id = 2;
inline bool PlaceOfferOnOrderBookResponse::has_offer_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlaceOfferOnOrderBookResponse::set_has_offer_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlaceOfferOnOrderBookResponse::clear_has_offer_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlaceOfferOnOrderBookResponse::clear_offer_id() {
  offer_id_ = GOOGLE_ULONGLONG(0);
  clear_has_offer_id();
}
inline ::google::protobuf::uint64 PlaceOfferOnOrderBookResponse::offer_id() const {
  return offer_id_;
}
inline void PlaceOfferOnOrderBookResponse::set_offer_id(::google::protobuf::uint64 value) {
  set_has_offer_id();
  offer_id_ = value;
}

// -------------------------------------------------------------------

// PlaceOfferCreateOrderBookIfNeededRequest

// required .bnet.protocol.exchange.PartitionId partition_id = 1;
inline bool PlaceOfferCreateOrderBookIfNeededRequest::has_partition_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlaceOfferCreateOrderBookIfNeededRequest::set_has_partition_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlaceOfferCreateOrderBookIfNeededRequest::clear_has_partition_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlaceOfferCreateOrderBookIfNeededRequest::clear_partition_id() {
  if (partition_id_ != NULL) partition_id_->::bnet::protocol::exchange::PartitionId::Clear();
  clear_has_partition_id();
}
inline const ::bnet::protocol::exchange::PartitionId& PlaceOfferCreateOrderBookIfNeededRequest::partition_id() const {
  return partition_id_ != NULL ? *partition_id_ : *default_instance_->partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* PlaceOfferCreateOrderBookIfNeededRequest::mutable_partition_id() {
  set_has_partition_id();
  if (partition_id_ == NULL) partition_id_ = new ::bnet::protocol::exchange::PartitionId;
  return partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* PlaceOfferCreateOrderBookIfNeededRequest::release_partition_id() {
  clear_has_partition_id();
  ::bnet::protocol::exchange::PartitionId* temp = partition_id_;
  partition_id_ = NULL;
  return temp;
}

// required .bnet.protocol.exchange.OrderBook order_book = 2;
inline bool PlaceOfferCreateOrderBookIfNeededRequest::has_order_book() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlaceOfferCreateOrderBookIfNeededRequest::set_has_order_book() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlaceOfferCreateOrderBookIfNeededRequest::clear_has_order_book() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlaceOfferCreateOrderBookIfNeededRequest::clear_order_book() {
  if (order_book_ != NULL) order_book_->::bnet::protocol::exchange::OrderBook::Clear();
  clear_has_order_book();
}
inline const ::bnet::protocol::exchange::OrderBook& PlaceOfferCreateOrderBookIfNeededRequest::order_book() const {
  return order_book_ != NULL ? *order_book_ : *default_instance_->order_book_;
}
inline ::bnet::protocol::exchange::OrderBook* PlaceOfferCreateOrderBookIfNeededRequest::mutable_order_book() {
  set_has_order_book();
  if (order_book_ == NULL) order_book_ = new ::bnet::protocol::exchange::OrderBook;
  return order_book_;
}
inline ::bnet::protocol::exchange::OrderBook* PlaceOfferCreateOrderBookIfNeededRequest::release_order_book() {
  clear_has_order_book();
  ::bnet::protocol::exchange::OrderBook* temp = order_book_;
  order_book_ = NULL;
  return temp;
}

// required .bnet.protocol.exchange.OfferCreation offer_creation = 3;
inline bool PlaceOfferCreateOrderBookIfNeededRequest::has_offer_creation() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlaceOfferCreateOrderBookIfNeededRequest::set_has_offer_creation() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlaceOfferCreateOrderBookIfNeededRequest::clear_has_offer_creation() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlaceOfferCreateOrderBookIfNeededRequest::clear_offer_creation() {
  if (offer_creation_ != NULL) offer_creation_->::bnet::protocol::exchange::OfferCreation::Clear();
  clear_has_offer_creation();
}
inline const ::bnet::protocol::exchange::OfferCreation& PlaceOfferCreateOrderBookIfNeededRequest::offer_creation() const {
  return offer_creation_ != NULL ? *offer_creation_ : *default_instance_->offer_creation_;
}
inline ::bnet::protocol::exchange::OfferCreation* PlaceOfferCreateOrderBookIfNeededRequest::mutable_offer_creation() {
  set_has_offer_creation();
  if (offer_creation_ == NULL) offer_creation_ = new ::bnet::protocol::exchange::OfferCreation;
  return offer_creation_;
}
inline ::bnet::protocol::exchange::OfferCreation* PlaceOfferCreateOrderBookIfNeededRequest::release_offer_creation() {
  clear_has_offer_creation();
  ::bnet::protocol::exchange::OfferCreation* temp = offer_creation_;
  offer_creation_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PlaceOfferCreateOrderBookIfNeededResponse

// optional uint64 order_book_id = 1;
inline bool PlaceOfferCreateOrderBookIfNeededResponse::has_order_book_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlaceOfferCreateOrderBookIfNeededResponse::set_has_order_book_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlaceOfferCreateOrderBookIfNeededResponse::clear_has_order_book_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlaceOfferCreateOrderBookIfNeededResponse::clear_order_book_id() {
  order_book_id_ = GOOGLE_ULONGLONG(0);
  clear_has_order_book_id();
}
inline ::google::protobuf::uint64 PlaceOfferCreateOrderBookIfNeededResponse::order_book_id() const {
  return order_book_id_;
}
inline void PlaceOfferCreateOrderBookIfNeededResponse::set_order_book_id(::google::protobuf::uint64 value) {
  set_has_order_book_id();
  order_book_id_ = value;
}

// optional uint64 offer_id = 2;
inline bool PlaceOfferCreateOrderBookIfNeededResponse::has_offer_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlaceOfferCreateOrderBookIfNeededResponse::set_has_offer_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlaceOfferCreateOrderBookIfNeededResponse::clear_has_offer_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlaceOfferCreateOrderBookIfNeededResponse::clear_offer_id() {
  offer_id_ = GOOGLE_ULONGLONG(0);
  clear_has_offer_id();
}
inline ::google::protobuf::uint64 PlaceOfferCreateOrderBookIfNeededResponse::offer_id() const {
  return offer_id_;
}
inline void PlaceOfferCreateOrderBookIfNeededResponse::set_offer_id(::google::protobuf::uint64 value) {
  set_has_offer_id();
  offer_id_ = value;
}

// -------------------------------------------------------------------

// PlaceBidOnOrderBookRequest

// required .bnet.protocol.exchange.PartitionId partition_id = 1;
inline bool PlaceBidOnOrderBookRequest::has_partition_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlaceBidOnOrderBookRequest::set_has_partition_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlaceBidOnOrderBookRequest::clear_has_partition_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlaceBidOnOrderBookRequest::clear_partition_id() {
  if (partition_id_ != NULL) partition_id_->::bnet::protocol::exchange::PartitionId::Clear();
  clear_has_partition_id();
}
inline const ::bnet::protocol::exchange::PartitionId& PlaceBidOnOrderBookRequest::partition_id() const {
  return partition_id_ != NULL ? *partition_id_ : *default_instance_->partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* PlaceBidOnOrderBookRequest::mutable_partition_id() {
  set_has_partition_id();
  if (partition_id_ == NULL) partition_id_ = new ::bnet::protocol::exchange::PartitionId;
  return partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* PlaceBidOnOrderBookRequest::release_partition_id() {
  clear_has_partition_id();
  ::bnet::protocol::exchange::PartitionId* temp = partition_id_;
  partition_id_ = NULL;
  return temp;
}

// required .bnet.protocol.exchange.BidCreation bid_creation = 2;
inline bool PlaceBidOnOrderBookRequest::has_bid_creation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlaceBidOnOrderBookRequest::set_has_bid_creation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlaceBidOnOrderBookRequest::clear_has_bid_creation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlaceBidOnOrderBookRequest::clear_bid_creation() {
  if (bid_creation_ != NULL) bid_creation_->::bnet::protocol::exchange::BidCreation::Clear();
  clear_has_bid_creation();
}
inline const ::bnet::protocol::exchange::BidCreation& PlaceBidOnOrderBookRequest::bid_creation() const {
  return bid_creation_ != NULL ? *bid_creation_ : *default_instance_->bid_creation_;
}
inline ::bnet::protocol::exchange::BidCreation* PlaceBidOnOrderBookRequest::mutable_bid_creation() {
  set_has_bid_creation();
  if (bid_creation_ == NULL) bid_creation_ = new ::bnet::protocol::exchange::BidCreation;
  return bid_creation_;
}
inline ::bnet::protocol::exchange::BidCreation* PlaceBidOnOrderBookRequest::release_bid_creation() {
  clear_has_bid_creation();
  ::bnet::protocol::exchange::BidCreation* temp = bid_creation_;
  bid_creation_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PlaceBidOnOrderBookResponse

// optional uint64 order_book_id = 1;
inline bool PlaceBidOnOrderBookResponse::has_order_book_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlaceBidOnOrderBookResponse::set_has_order_book_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlaceBidOnOrderBookResponse::clear_has_order_book_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlaceBidOnOrderBookResponse::clear_order_book_id() {
  order_book_id_ = GOOGLE_ULONGLONG(0);
  clear_has_order_book_id();
}
inline ::google::protobuf::uint64 PlaceBidOnOrderBookResponse::order_book_id() const {
  return order_book_id_;
}
inline void PlaceBidOnOrderBookResponse::set_order_book_id(::google::protobuf::uint64 value) {
  set_has_order_book_id();
  order_book_id_ = value;
}

// optional uint64 bid_id = 2;
inline bool PlaceBidOnOrderBookResponse::has_bid_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlaceBidOnOrderBookResponse::set_has_bid_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlaceBidOnOrderBookResponse::clear_has_bid_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlaceBidOnOrderBookResponse::clear_bid_id() {
  bid_id_ = GOOGLE_ULONGLONG(0);
  clear_has_bid_id();
}
inline ::google::protobuf::uint64 PlaceBidOnOrderBookResponse::bid_id() const {
  return bid_id_;
}
inline void PlaceBidOnOrderBookResponse::set_bid_id(::google::protobuf::uint64 value) {
  set_has_bid_id();
  bid_id_ = value;
}

// -------------------------------------------------------------------

// PlaceBidCreateOrderBookIfNeededRequest

// required .bnet.protocol.exchange.PartitionId partition_id = 1;
inline bool PlaceBidCreateOrderBookIfNeededRequest::has_partition_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlaceBidCreateOrderBookIfNeededRequest::set_has_partition_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlaceBidCreateOrderBookIfNeededRequest::clear_has_partition_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlaceBidCreateOrderBookIfNeededRequest::clear_partition_id() {
  if (partition_id_ != NULL) partition_id_->::bnet::protocol::exchange::PartitionId::Clear();
  clear_has_partition_id();
}
inline const ::bnet::protocol::exchange::PartitionId& PlaceBidCreateOrderBookIfNeededRequest::partition_id() const {
  return partition_id_ != NULL ? *partition_id_ : *default_instance_->partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* PlaceBidCreateOrderBookIfNeededRequest::mutable_partition_id() {
  set_has_partition_id();
  if (partition_id_ == NULL) partition_id_ = new ::bnet::protocol::exchange::PartitionId;
  return partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* PlaceBidCreateOrderBookIfNeededRequest::release_partition_id() {
  clear_has_partition_id();
  ::bnet::protocol::exchange::PartitionId* temp = partition_id_;
  partition_id_ = NULL;
  return temp;
}

// required .bnet.protocol.exchange.OrderBook order_book = 2;
inline bool PlaceBidCreateOrderBookIfNeededRequest::has_order_book() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlaceBidCreateOrderBookIfNeededRequest::set_has_order_book() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlaceBidCreateOrderBookIfNeededRequest::clear_has_order_book() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlaceBidCreateOrderBookIfNeededRequest::clear_order_book() {
  if (order_book_ != NULL) order_book_->::bnet::protocol::exchange::OrderBook::Clear();
  clear_has_order_book();
}
inline const ::bnet::protocol::exchange::OrderBook& PlaceBidCreateOrderBookIfNeededRequest::order_book() const {
  return order_book_ != NULL ? *order_book_ : *default_instance_->order_book_;
}
inline ::bnet::protocol::exchange::OrderBook* PlaceBidCreateOrderBookIfNeededRequest::mutable_order_book() {
  set_has_order_book();
  if (order_book_ == NULL) order_book_ = new ::bnet::protocol::exchange::OrderBook;
  return order_book_;
}
inline ::bnet::protocol::exchange::OrderBook* PlaceBidCreateOrderBookIfNeededRequest::release_order_book() {
  clear_has_order_book();
  ::bnet::protocol::exchange::OrderBook* temp = order_book_;
  order_book_ = NULL;
  return temp;
}

// required .bnet.protocol.exchange.BidCreation bid_creation = 3;
inline bool PlaceBidCreateOrderBookIfNeededRequest::has_bid_creation() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlaceBidCreateOrderBookIfNeededRequest::set_has_bid_creation() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlaceBidCreateOrderBookIfNeededRequest::clear_has_bid_creation() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlaceBidCreateOrderBookIfNeededRequest::clear_bid_creation() {
  if (bid_creation_ != NULL) bid_creation_->::bnet::protocol::exchange::BidCreation::Clear();
  clear_has_bid_creation();
}
inline const ::bnet::protocol::exchange::BidCreation& PlaceBidCreateOrderBookIfNeededRequest::bid_creation() const {
  return bid_creation_ != NULL ? *bid_creation_ : *default_instance_->bid_creation_;
}
inline ::bnet::protocol::exchange::BidCreation* PlaceBidCreateOrderBookIfNeededRequest::mutable_bid_creation() {
  set_has_bid_creation();
  if (bid_creation_ == NULL) bid_creation_ = new ::bnet::protocol::exchange::BidCreation;
  return bid_creation_;
}
inline ::bnet::protocol::exchange::BidCreation* PlaceBidCreateOrderBookIfNeededRequest::release_bid_creation() {
  clear_has_bid_creation();
  ::bnet::protocol::exchange::BidCreation* temp = bid_creation_;
  bid_creation_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PlaceBidCreateOrderBookIfNeededResponse

// optional uint64 order_book_id = 1;
inline bool PlaceBidCreateOrderBookIfNeededResponse::has_order_book_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlaceBidCreateOrderBookIfNeededResponse::set_has_order_book_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlaceBidCreateOrderBookIfNeededResponse::clear_has_order_book_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlaceBidCreateOrderBookIfNeededResponse::clear_order_book_id() {
  order_book_id_ = GOOGLE_ULONGLONG(0);
  clear_has_order_book_id();
}
inline ::google::protobuf::uint64 PlaceBidCreateOrderBookIfNeededResponse::order_book_id() const {
  return order_book_id_;
}
inline void PlaceBidCreateOrderBookIfNeededResponse::set_order_book_id(::google::protobuf::uint64 value) {
  set_has_order_book_id();
  order_book_id_ = value;
}

// optional uint64 bid_id = 2;
inline bool PlaceBidCreateOrderBookIfNeededResponse::has_bid_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlaceBidCreateOrderBookIfNeededResponse::set_has_bid_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlaceBidCreateOrderBookIfNeededResponse::clear_has_bid_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlaceBidCreateOrderBookIfNeededResponse::clear_bid_id() {
  bid_id_ = GOOGLE_ULONGLONG(0);
  clear_has_bid_id();
}
inline ::google::protobuf::uint64 PlaceBidCreateOrderBookIfNeededResponse::bid_id() const {
  return bid_id_;
}
inline void PlaceBidCreateOrderBookIfNeededResponse::set_bid_id(::google::protobuf::uint64 value) {
  set_has_bid_id();
  bid_id_ = value;
}

// -------------------------------------------------------------------

// QueryOffersByOrderBookRequest

// required .bnet.protocol.exchange.PartitionId partition_id = 1;
inline bool QueryOffersByOrderBookRequest::has_partition_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryOffersByOrderBookRequest::set_has_partition_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryOffersByOrderBookRequest::clear_has_partition_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryOffersByOrderBookRequest::clear_partition_id() {
  if (partition_id_ != NULL) partition_id_->::bnet::protocol::exchange::PartitionId::Clear();
  clear_has_partition_id();
}
inline const ::bnet::protocol::exchange::PartitionId& QueryOffersByOrderBookRequest::partition_id() const {
  return partition_id_ != NULL ? *partition_id_ : *default_instance_->partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* QueryOffersByOrderBookRequest::mutable_partition_id() {
  set_has_partition_id();
  if (partition_id_ == NULL) partition_id_ = new ::bnet::protocol::exchange::PartitionId;
  return partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* QueryOffersByOrderBookRequest::release_partition_id() {
  clear_has_partition_id();
  ::bnet::protocol::exchange::PartitionId* temp = partition_id_;
  partition_id_ = NULL;
  return temp;
}

// required .bnet.protocol.exchange.QueryFilterByOrderId filter = 2;
inline bool QueryOffersByOrderBookRequest::has_filter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryOffersByOrderBookRequest::set_has_filter() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryOffersByOrderBookRequest::clear_has_filter() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryOffersByOrderBookRequest::clear_filter() {
  if (filter_ != NULL) filter_->::bnet::protocol::exchange::QueryFilterByOrderId::Clear();
  clear_has_filter();
}
inline const ::bnet::protocol::exchange::QueryFilterByOrderId& QueryOffersByOrderBookRequest::filter() const {
  return filter_ != NULL ? *filter_ : *default_instance_->filter_;
}
inline ::bnet::protocol::exchange::QueryFilterByOrderId* QueryOffersByOrderBookRequest::mutable_filter() {
  set_has_filter();
  if (filter_ == NULL) filter_ = new ::bnet::protocol::exchange::QueryFilterByOrderId;
  return filter_;
}
inline ::bnet::protocol::exchange::QueryFilterByOrderId* QueryOffersByOrderBookRequest::release_filter() {
  clear_has_filter();
  ::bnet::protocol::exchange::QueryFilterByOrderId* temp = filter_;
  filter_ = NULL;
  return temp;
}

// required int32 status = 3;
inline bool QueryOffersByOrderBookRequest::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryOffersByOrderBookRequest::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryOffersByOrderBookRequest::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryOffersByOrderBookRequest::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 QueryOffersByOrderBookRequest::status() const {
  return status_;
}
inline void QueryOffersByOrderBookRequest::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// QueryOffersByOrderBookResponse

// repeated .bnet.protocol.exchange.OfferExtended offers = 1;
inline int QueryOffersByOrderBookResponse::offers_size() const {
  return offers_.size();
}
inline void QueryOffersByOrderBookResponse::clear_offers() {
  offers_.Clear();
}
inline const ::bnet::protocol::exchange::OfferExtended& QueryOffersByOrderBookResponse::offers(int index) const {
  return offers_.Get(index);
}
inline ::bnet::protocol::exchange::OfferExtended* QueryOffersByOrderBookResponse::mutable_offers(int index) {
  return offers_.Mutable(index);
}
inline ::bnet::protocol::exchange::OfferExtended* QueryOffersByOrderBookResponse::add_offers() {
  return offers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::OfferExtended >&
QueryOffersByOrderBookResponse::offers() const {
  return offers_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::OfferExtended >*
QueryOffersByOrderBookResponse::mutable_offers() {
  return &offers_;
}

// required uint32 total_count = 2;
inline bool QueryOffersByOrderBookResponse::has_total_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryOffersByOrderBookResponse::set_has_total_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryOffersByOrderBookResponse::clear_has_total_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryOffersByOrderBookResponse::clear_total_count() {
  total_count_ = 0u;
  clear_has_total_count();
}
inline ::google::protobuf::uint32 QueryOffersByOrderBookResponse::total_count() const {
  return total_count_;
}
inline void QueryOffersByOrderBookResponse::set_total_count(::google::protobuf::uint32 value) {
  set_has_total_count();
  total_count_ = value;
}

// -------------------------------------------------------------------

// QueryBidsByOrderBookRequest

// required .bnet.protocol.exchange.PartitionId partition_id = 1;
inline bool QueryBidsByOrderBookRequest::has_partition_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryBidsByOrderBookRequest::set_has_partition_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryBidsByOrderBookRequest::clear_has_partition_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryBidsByOrderBookRequest::clear_partition_id() {
  if (partition_id_ != NULL) partition_id_->::bnet::protocol::exchange::PartitionId::Clear();
  clear_has_partition_id();
}
inline const ::bnet::protocol::exchange::PartitionId& QueryBidsByOrderBookRequest::partition_id() const {
  return partition_id_ != NULL ? *partition_id_ : *default_instance_->partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* QueryBidsByOrderBookRequest::mutable_partition_id() {
  set_has_partition_id();
  if (partition_id_ == NULL) partition_id_ = new ::bnet::protocol::exchange::PartitionId;
  return partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* QueryBidsByOrderBookRequest::release_partition_id() {
  clear_has_partition_id();
  ::bnet::protocol::exchange::PartitionId* temp = partition_id_;
  partition_id_ = NULL;
  return temp;
}

// required .bnet.protocol.exchange.QueryFilterByOrderId filter = 2;
inline bool QueryBidsByOrderBookRequest::has_filter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryBidsByOrderBookRequest::set_has_filter() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryBidsByOrderBookRequest::clear_has_filter() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryBidsByOrderBookRequest::clear_filter() {
  if (filter_ != NULL) filter_->::bnet::protocol::exchange::QueryFilterByOrderId::Clear();
  clear_has_filter();
}
inline const ::bnet::protocol::exchange::QueryFilterByOrderId& QueryBidsByOrderBookRequest::filter() const {
  return filter_ != NULL ? *filter_ : *default_instance_->filter_;
}
inline ::bnet::protocol::exchange::QueryFilterByOrderId* QueryBidsByOrderBookRequest::mutable_filter() {
  set_has_filter();
  if (filter_ == NULL) filter_ = new ::bnet::protocol::exchange::QueryFilterByOrderId;
  return filter_;
}
inline ::bnet::protocol::exchange::QueryFilterByOrderId* QueryBidsByOrderBookRequest::release_filter() {
  clear_has_filter();
  ::bnet::protocol::exchange::QueryFilterByOrderId* temp = filter_;
  filter_ = NULL;
  return temp;
}

// required int32 status = 3;
inline bool QueryBidsByOrderBookRequest::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryBidsByOrderBookRequest::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryBidsByOrderBookRequest::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryBidsByOrderBookRequest::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 QueryBidsByOrderBookRequest::status() const {
  return status_;
}
inline void QueryBidsByOrderBookRequest::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// QueryBidsByOrderBookResponse

// repeated .bnet.protocol.exchange.BidExtended bids = 1;
inline int QueryBidsByOrderBookResponse::bids_size() const {
  return bids_.size();
}
inline void QueryBidsByOrderBookResponse::clear_bids() {
  bids_.Clear();
}
inline const ::bnet::protocol::exchange::BidExtended& QueryBidsByOrderBookResponse::bids(int index) const {
  return bids_.Get(index);
}
inline ::bnet::protocol::exchange::BidExtended* QueryBidsByOrderBookResponse::mutable_bids(int index) {
  return bids_.Mutable(index);
}
inline ::bnet::protocol::exchange::BidExtended* QueryBidsByOrderBookResponse::add_bids() {
  return bids_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::BidExtended >&
QueryBidsByOrderBookResponse::bids() const {
  return bids_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::BidExtended >*
QueryBidsByOrderBookResponse::mutable_bids() {
  return &bids_;
}

// required uint32 total_count = 2;
inline bool QueryBidsByOrderBookResponse::has_total_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryBidsByOrderBookResponse::set_has_total_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryBidsByOrderBookResponse::clear_has_total_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryBidsByOrderBookResponse::clear_total_count() {
  total_count_ = 0u;
  clear_has_total_count();
}
inline ::google::protobuf::uint32 QueryBidsByOrderBookResponse::total_count() const {
  return total_count_;
}
inline void QueryBidsByOrderBookResponse::set_total_count(::google::protobuf::uint32 value) {
  set_has_total_count();
  total_count_ = value;
}

// -------------------------------------------------------------------

// QueryOffersByAccountForItemRequest

// required .bnet.protocol.exchange.BlobFrom account_for_item = 1;
inline bool QueryOffersByAccountForItemRequest::has_account_for_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryOffersByAccountForItemRequest::set_has_account_for_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryOffersByAccountForItemRequest::clear_has_account_for_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryOffersByAccountForItemRequest::clear_account_for_item() {
  if (account_for_item_ != NULL) account_for_item_->::bnet::protocol::exchange::BlobFrom::Clear();
  clear_has_account_for_item();
}
inline const ::bnet::protocol::exchange::BlobFrom& QueryOffersByAccountForItemRequest::account_for_item() const {
  return account_for_item_ != NULL ? *account_for_item_ : *default_instance_->account_for_item_;
}
inline ::bnet::protocol::exchange::BlobFrom* QueryOffersByAccountForItemRequest::mutable_account_for_item() {
  set_has_account_for_item();
  if (account_for_item_ == NULL) account_for_item_ = new ::bnet::protocol::exchange::BlobFrom;
  return account_for_item_;
}
inline ::bnet::protocol::exchange::BlobFrom* QueryOffersByAccountForItemRequest::release_account_for_item() {
  clear_has_account_for_item();
  ::bnet::protocol::exchange::BlobFrom* temp = account_for_item_;
  account_for_item_ = NULL;
  return temp;
}

// required .bnet.protocol.exchange.QueryFilterByCreatedTime filter = 2;
inline bool QueryOffersByAccountForItemRequest::has_filter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryOffersByAccountForItemRequest::set_has_filter() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryOffersByAccountForItemRequest::clear_has_filter() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryOffersByAccountForItemRequest::clear_filter() {
  if (filter_ != NULL) filter_->::bnet::protocol::exchange::QueryFilterByCreatedTime::Clear();
  clear_has_filter();
}
inline const ::bnet::protocol::exchange::QueryFilterByCreatedTime& QueryOffersByAccountForItemRequest::filter() const {
  return filter_ != NULL ? *filter_ : *default_instance_->filter_;
}
inline ::bnet::protocol::exchange::QueryFilterByCreatedTime* QueryOffersByAccountForItemRequest::mutable_filter() {
  set_has_filter();
  if (filter_ == NULL) filter_ = new ::bnet::protocol::exchange::QueryFilterByCreatedTime;
  return filter_;
}
inline ::bnet::protocol::exchange::QueryFilterByCreatedTime* QueryOffersByAccountForItemRequest::release_filter() {
  clear_has_filter();
  ::bnet::protocol::exchange::QueryFilterByCreatedTime* temp = filter_;
  filter_ = NULL;
  return temp;
}

// optional .bnet.protocol.EntityId bnet_account = 3;
inline bool QueryOffersByAccountForItemRequest::has_bnet_account() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryOffersByAccountForItemRequest::set_has_bnet_account() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryOffersByAccountForItemRequest::clear_has_bnet_account() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryOffersByAccountForItemRequest::clear_bnet_account() {
  if (bnet_account_ != NULL) bnet_account_->::bnet::protocol::EntityId::Clear();
  clear_has_bnet_account();
}
inline const ::bnet::protocol::EntityId& QueryOffersByAccountForItemRequest::bnet_account() const {
  return bnet_account_ != NULL ? *bnet_account_ : *default_instance_->bnet_account_;
}
inline ::bnet::protocol::EntityId* QueryOffersByAccountForItemRequest::mutable_bnet_account() {
  set_has_bnet_account();
  if (bnet_account_ == NULL) bnet_account_ = new ::bnet::protocol::EntityId;
  return bnet_account_;
}
inline ::bnet::protocol::EntityId* QueryOffersByAccountForItemRequest::release_bnet_account() {
  clear_has_bnet_account();
  ::bnet::protocol::EntityId* temp = bnet_account_;
  bnet_account_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// QueryOffersByAccountForItemResponse

// repeated .bnet.protocol.exchange.OfferExtended offers = 1;
inline int QueryOffersByAccountForItemResponse::offers_size() const {
  return offers_.size();
}
inline void QueryOffersByAccountForItemResponse::clear_offers() {
  offers_.Clear();
}
inline const ::bnet::protocol::exchange::OfferExtended& QueryOffersByAccountForItemResponse::offers(int index) const {
  return offers_.Get(index);
}
inline ::bnet::protocol::exchange::OfferExtended* QueryOffersByAccountForItemResponse::mutable_offers(int index) {
  return offers_.Mutable(index);
}
inline ::bnet::protocol::exchange::OfferExtended* QueryOffersByAccountForItemResponse::add_offers() {
  return offers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::OfferExtended >&
QueryOffersByAccountForItemResponse::offers() const {
  return offers_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::OfferExtended >*
QueryOffersByAccountForItemResponse::mutable_offers() {
  return &offers_;
}

// required uint32 total_count = 2;
inline bool QueryOffersByAccountForItemResponse::has_total_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryOffersByAccountForItemResponse::set_has_total_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryOffersByAccountForItemResponse::clear_has_total_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryOffersByAccountForItemResponse::clear_total_count() {
  total_count_ = 0u;
  clear_has_total_count();
}
inline ::google::protobuf::uint32 QueryOffersByAccountForItemResponse::total_count() const {
  return total_count_;
}
inline void QueryOffersByAccountForItemResponse::set_total_count(::google::protobuf::uint32 value) {
  set_has_total_count();
  total_count_ = value;
}

// -------------------------------------------------------------------

// QueryBidsByAccountForItemRequest

// required .bnet.protocol.exchange.BlobFrom account_for_item = 1;
inline bool QueryBidsByAccountForItemRequest::has_account_for_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryBidsByAccountForItemRequest::set_has_account_for_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryBidsByAccountForItemRequest::clear_has_account_for_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryBidsByAccountForItemRequest::clear_account_for_item() {
  if (account_for_item_ != NULL) account_for_item_->::bnet::protocol::exchange::BlobFrom::Clear();
  clear_has_account_for_item();
}
inline const ::bnet::protocol::exchange::BlobFrom& QueryBidsByAccountForItemRequest::account_for_item() const {
  return account_for_item_ != NULL ? *account_for_item_ : *default_instance_->account_for_item_;
}
inline ::bnet::protocol::exchange::BlobFrom* QueryBidsByAccountForItemRequest::mutable_account_for_item() {
  set_has_account_for_item();
  if (account_for_item_ == NULL) account_for_item_ = new ::bnet::protocol::exchange::BlobFrom;
  return account_for_item_;
}
inline ::bnet::protocol::exchange::BlobFrom* QueryBidsByAccountForItemRequest::release_account_for_item() {
  clear_has_account_for_item();
  ::bnet::protocol::exchange::BlobFrom* temp = account_for_item_;
  account_for_item_ = NULL;
  return temp;
}

// required .bnet.protocol.exchange.QueryFilterByCreatedTime filter = 2;
inline bool QueryBidsByAccountForItemRequest::has_filter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryBidsByAccountForItemRequest::set_has_filter() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryBidsByAccountForItemRequest::clear_has_filter() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryBidsByAccountForItemRequest::clear_filter() {
  if (filter_ != NULL) filter_->::bnet::protocol::exchange::QueryFilterByCreatedTime::Clear();
  clear_has_filter();
}
inline const ::bnet::protocol::exchange::QueryFilterByCreatedTime& QueryBidsByAccountForItemRequest::filter() const {
  return filter_ != NULL ? *filter_ : *default_instance_->filter_;
}
inline ::bnet::protocol::exchange::QueryFilterByCreatedTime* QueryBidsByAccountForItemRequest::mutable_filter() {
  set_has_filter();
  if (filter_ == NULL) filter_ = new ::bnet::protocol::exchange::QueryFilterByCreatedTime;
  return filter_;
}
inline ::bnet::protocol::exchange::QueryFilterByCreatedTime* QueryBidsByAccountForItemRequest::release_filter() {
  clear_has_filter();
  ::bnet::protocol::exchange::QueryFilterByCreatedTime* temp = filter_;
  filter_ = NULL;
  return temp;
}

// optional .bnet.protocol.EntityId bnet_account = 3;
inline bool QueryBidsByAccountForItemRequest::has_bnet_account() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryBidsByAccountForItemRequest::set_has_bnet_account() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryBidsByAccountForItemRequest::clear_has_bnet_account() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryBidsByAccountForItemRequest::clear_bnet_account() {
  if (bnet_account_ != NULL) bnet_account_->::bnet::protocol::EntityId::Clear();
  clear_has_bnet_account();
}
inline const ::bnet::protocol::EntityId& QueryBidsByAccountForItemRequest::bnet_account() const {
  return bnet_account_ != NULL ? *bnet_account_ : *default_instance_->bnet_account_;
}
inline ::bnet::protocol::EntityId* QueryBidsByAccountForItemRequest::mutable_bnet_account() {
  set_has_bnet_account();
  if (bnet_account_ == NULL) bnet_account_ = new ::bnet::protocol::EntityId;
  return bnet_account_;
}
inline ::bnet::protocol::EntityId* QueryBidsByAccountForItemRequest::release_bnet_account() {
  clear_has_bnet_account();
  ::bnet::protocol::EntityId* temp = bnet_account_;
  bnet_account_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// QueryBidsByAccountForItemResponse

// repeated .bnet.protocol.exchange.BidExtended bids = 1;
inline int QueryBidsByAccountForItemResponse::bids_size() const {
  return bids_.size();
}
inline void QueryBidsByAccountForItemResponse::clear_bids() {
  bids_.Clear();
}
inline const ::bnet::protocol::exchange::BidExtended& QueryBidsByAccountForItemResponse::bids(int index) const {
  return bids_.Get(index);
}
inline ::bnet::protocol::exchange::BidExtended* QueryBidsByAccountForItemResponse::mutable_bids(int index) {
  return bids_.Mutable(index);
}
inline ::bnet::protocol::exchange::BidExtended* QueryBidsByAccountForItemResponse::add_bids() {
  return bids_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::BidExtended >&
QueryBidsByAccountForItemResponse::bids() const {
  return bids_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::BidExtended >*
QueryBidsByAccountForItemResponse::mutable_bids() {
  return &bids_;
}

// required uint32 total_count = 2;
inline bool QueryBidsByAccountForItemResponse::has_total_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryBidsByAccountForItemResponse::set_has_total_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryBidsByAccountForItemResponse::clear_has_total_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryBidsByAccountForItemResponse::clear_total_count() {
  total_count_ = 0u;
  clear_has_total_count();
}
inline ::google::protobuf::uint32 QueryBidsByAccountForItemResponse::total_count() const {
  return total_count_;
}
inline void QueryBidsByAccountForItemResponse::set_total_count(::google::protobuf::uint32 value) {
  set_has_total_count();
  total_count_ = value;
}

// -------------------------------------------------------------------

// QueryOrderBooksSummaryRequest

// repeated .bnet.protocol.exchange.OrderBookHandle handles = 1;
inline int QueryOrderBooksSummaryRequest::handles_size() const {
  return handles_.size();
}
inline void QueryOrderBooksSummaryRequest::clear_handles() {
  handles_.Clear();
}
inline const ::bnet::protocol::exchange::OrderBookHandle& QueryOrderBooksSummaryRequest::handles(int index) const {
  return handles_.Get(index);
}
inline ::bnet::protocol::exchange::OrderBookHandle* QueryOrderBooksSummaryRequest::mutable_handles(int index) {
  return handles_.Mutable(index);
}
inline ::bnet::protocol::exchange::OrderBookHandle* QueryOrderBooksSummaryRequest::add_handles() {
  return handles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::OrderBookHandle >&
QueryOrderBooksSummaryRequest::handles() const {
  return handles_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::OrderBookHandle >*
QueryOrderBooksSummaryRequest::mutable_handles() {
  return &handles_;
}

// -------------------------------------------------------------------

// QueryOrderBooksSummaryResponse

// repeated .bnet.protocol.exchange.OrderBookSummary order_books = 1;
inline int QueryOrderBooksSummaryResponse::order_books_size() const {
  return order_books_.size();
}
inline void QueryOrderBooksSummaryResponse::clear_order_books() {
  order_books_.Clear();
}
inline const ::bnet::protocol::exchange::OrderBookSummary& QueryOrderBooksSummaryResponse::order_books(int index) const {
  return order_books_.Get(index);
}
inline ::bnet::protocol::exchange::OrderBookSummary* QueryOrderBooksSummaryResponse::mutable_order_books(int index) {
  return order_books_.Mutable(index);
}
inline ::bnet::protocol::exchange::OrderBookSummary* QueryOrderBooksSummaryResponse::add_order_books() {
  return order_books_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::OrderBookSummary >&
QueryOrderBooksSummaryResponse::order_books() const {
  return order_books_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::OrderBookSummary >*
QueryOrderBooksSummaryResponse::mutable_order_books() {
  return &order_books_;
}

// -------------------------------------------------------------------

// QuerySettlementsByOrderBookRequest

// required .bnet.protocol.exchange.PartitionId partition_id = 1;
inline bool QuerySettlementsByOrderBookRequest::has_partition_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuerySettlementsByOrderBookRequest::set_has_partition_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuerySettlementsByOrderBookRequest::clear_has_partition_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuerySettlementsByOrderBookRequest::clear_partition_id() {
  if (partition_id_ != NULL) partition_id_->::bnet::protocol::exchange::PartitionId::Clear();
  clear_has_partition_id();
}
inline const ::bnet::protocol::exchange::PartitionId& QuerySettlementsByOrderBookRequest::partition_id() const {
  return partition_id_ != NULL ? *partition_id_ : *default_instance_->partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* QuerySettlementsByOrderBookRequest::mutable_partition_id() {
  set_has_partition_id();
  if (partition_id_ == NULL) partition_id_ = new ::bnet::protocol::exchange::PartitionId;
  return partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* QuerySettlementsByOrderBookRequest::release_partition_id() {
  clear_has_partition_id();
  ::bnet::protocol::exchange::PartitionId* temp = partition_id_;
  partition_id_ = NULL;
  return temp;
}

// required .bnet.protocol.exchange.QueryFilterByOrderId filter = 2;
inline bool QuerySettlementsByOrderBookRequest::has_filter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuerySettlementsByOrderBookRequest::set_has_filter() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuerySettlementsByOrderBookRequest::clear_has_filter() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuerySettlementsByOrderBookRequest::clear_filter() {
  if (filter_ != NULL) filter_->::bnet::protocol::exchange::QueryFilterByOrderId::Clear();
  clear_has_filter();
}
inline const ::bnet::protocol::exchange::QueryFilterByOrderId& QuerySettlementsByOrderBookRequest::filter() const {
  return filter_ != NULL ? *filter_ : *default_instance_->filter_;
}
inline ::bnet::protocol::exchange::QueryFilterByOrderId* QuerySettlementsByOrderBookRequest::mutable_filter() {
  set_has_filter();
  if (filter_ == NULL) filter_ = new ::bnet::protocol::exchange::QueryFilterByOrderId;
  return filter_;
}
inline ::bnet::protocol::exchange::QueryFilterByOrderId* QuerySettlementsByOrderBookRequest::release_filter() {
  clear_has_filter();
  ::bnet::protocol::exchange::QueryFilterByOrderId* temp = filter_;
  filter_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// QuerySettlementsByOrderBookResponse

// repeated .bnet.protocol.exchange.Settlement settlements = 1;
inline int QuerySettlementsByOrderBookResponse::settlements_size() const {
  return settlements_.size();
}
inline void QuerySettlementsByOrderBookResponse::clear_settlements() {
  settlements_.Clear();
}
inline const ::bnet::protocol::exchange::Settlement& QuerySettlementsByOrderBookResponse::settlements(int index) const {
  return settlements_.Get(index);
}
inline ::bnet::protocol::exchange::Settlement* QuerySettlementsByOrderBookResponse::mutable_settlements(int index) {
  return settlements_.Mutable(index);
}
inline ::bnet::protocol::exchange::Settlement* QuerySettlementsByOrderBookResponse::add_settlements() {
  return settlements_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::Settlement >&
QuerySettlementsByOrderBookResponse::settlements() const {
  return settlements_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::Settlement >*
QuerySettlementsByOrderBookResponse::mutable_settlements() {
  return &settlements_;
}

// -------------------------------------------------------------------

// SubscribeOrderBookStatusChangeRequest

// required uint64 object_id = 1;
inline bool SubscribeOrderBookStatusChangeRequest::has_object_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SubscribeOrderBookStatusChangeRequest::set_has_object_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SubscribeOrderBookStatusChangeRequest::clear_has_object_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SubscribeOrderBookStatusChangeRequest::clear_object_id() {
  object_id_ = GOOGLE_ULONGLONG(0);
  clear_has_object_id();
}
inline ::google::protobuf::uint64 SubscribeOrderBookStatusChangeRequest::object_id() const {
  return object_id_;
}
inline void SubscribeOrderBookStatusChangeRequest::set_object_id(::google::protobuf::uint64 value) {
  set_has_object_id();
  object_id_ = value;
}

// required .bnet.protocol.exchange.PartitionId min_partition_id = 2;
inline bool SubscribeOrderBookStatusChangeRequest::has_min_partition_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SubscribeOrderBookStatusChangeRequest::set_has_min_partition_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SubscribeOrderBookStatusChangeRequest::clear_has_min_partition_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SubscribeOrderBookStatusChangeRequest::clear_min_partition_id() {
  if (min_partition_id_ != NULL) min_partition_id_->::bnet::protocol::exchange::PartitionId::Clear();
  clear_has_min_partition_id();
}
inline const ::bnet::protocol::exchange::PartitionId& SubscribeOrderBookStatusChangeRequest::min_partition_id() const {
  return min_partition_id_ != NULL ? *min_partition_id_ : *default_instance_->min_partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* SubscribeOrderBookStatusChangeRequest::mutable_min_partition_id() {
  set_has_min_partition_id();
  if (min_partition_id_ == NULL) min_partition_id_ = new ::bnet::protocol::exchange::PartitionId;
  return min_partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* SubscribeOrderBookStatusChangeRequest::release_min_partition_id() {
  clear_has_min_partition_id();
  ::bnet::protocol::exchange::PartitionId* temp = min_partition_id_;
  min_partition_id_ = NULL;
  return temp;
}

// required .bnet.protocol.exchange.PartitionId max_partition_id = 3;
inline bool SubscribeOrderBookStatusChangeRequest::has_max_partition_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SubscribeOrderBookStatusChangeRequest::set_has_max_partition_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SubscribeOrderBookStatusChangeRequest::clear_has_max_partition_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SubscribeOrderBookStatusChangeRequest::clear_max_partition_id() {
  if (max_partition_id_ != NULL) max_partition_id_->::bnet::protocol::exchange::PartitionId::Clear();
  clear_has_max_partition_id();
}
inline const ::bnet::protocol::exchange::PartitionId& SubscribeOrderBookStatusChangeRequest::max_partition_id() const {
  return max_partition_id_ != NULL ? *max_partition_id_ : *default_instance_->max_partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* SubscribeOrderBookStatusChangeRequest::mutable_max_partition_id() {
  set_has_max_partition_id();
  if (max_partition_id_ == NULL) max_partition_id_ = new ::bnet::protocol::exchange::PartitionId;
  return max_partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* SubscribeOrderBookStatusChangeRequest::release_max_partition_id() {
  clear_has_max_partition_id();
  ::bnet::protocol::exchange::PartitionId* temp = max_partition_id_;
  max_partition_id_ = NULL;
  return temp;
}

// required fixed32 program = 4;
inline bool SubscribeOrderBookStatusChangeRequest::has_program() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SubscribeOrderBookStatusChangeRequest::set_has_program() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SubscribeOrderBookStatusChangeRequest::clear_has_program() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SubscribeOrderBookStatusChangeRequest::clear_program() {
  program_ = 0u;
  clear_has_program();
}
inline ::google::protobuf::uint32 SubscribeOrderBookStatusChangeRequest::program() const {
  return program_;
}
inline void SubscribeOrderBookStatusChangeRequest::set_program(::google::protobuf::uint32 value) {
  set_has_program();
  program_ = value;
}

// required int32 status = 5;
inline bool SubscribeOrderBookStatusChangeRequest::has_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SubscribeOrderBookStatusChangeRequest::set_has_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SubscribeOrderBookStatusChangeRequest::clear_has_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SubscribeOrderBookStatusChangeRequest::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 SubscribeOrderBookStatusChangeRequest::status() const {
  return status_;
}
inline void SubscribeOrderBookStatusChangeRequest::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// optional string currency = 6;
inline bool SubscribeOrderBookStatusChangeRequest::has_currency() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SubscribeOrderBookStatusChangeRequest::set_has_currency() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SubscribeOrderBookStatusChangeRequest::clear_has_currency() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SubscribeOrderBookStatusChangeRequest::clear_currency() {
  if (currency_ != &::google::protobuf::internal::kEmptyString) {
    currency_->clear();
  }
  clear_has_currency();
}
inline const ::std::string& SubscribeOrderBookStatusChangeRequest::currency() const {
  return *currency_;
}
inline void SubscribeOrderBookStatusChangeRequest::set_currency(const ::std::string& value) {
  set_has_currency();
  if (currency_ == &::google::protobuf::internal::kEmptyString) {
    currency_ = new ::std::string;
  }
  currency_->assign(value);
}
inline void SubscribeOrderBookStatusChangeRequest::set_currency(const char* value) {
  set_has_currency();
  if (currency_ == &::google::protobuf::internal::kEmptyString) {
    currency_ = new ::std::string;
  }
  currency_->assign(value);
}
inline void SubscribeOrderBookStatusChangeRequest::set_currency(const char* value, size_t size) {
  set_has_currency();
  if (currency_ == &::google::protobuf::internal::kEmptyString) {
    currency_ = new ::std::string;
  }
  currency_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SubscribeOrderBookStatusChangeRequest::mutable_currency() {
  set_has_currency();
  if (currency_ == &::google::protobuf::internal::kEmptyString) {
    currency_ = new ::std::string;
  }
  return currency_;
}
inline ::std::string* SubscribeOrderBookStatusChangeRequest::release_currency() {
  clear_has_currency();
  if (currency_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = currency_;
    currency_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 specialist = 7;
inline bool SubscribeOrderBookStatusChangeRequest::has_specialist() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SubscribeOrderBookStatusChangeRequest::set_has_specialist() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SubscribeOrderBookStatusChangeRequest::clear_has_specialist() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SubscribeOrderBookStatusChangeRequest::clear_specialist() {
  specialist_ = 0;
  clear_has_specialist();
}
inline ::google::protobuf::int32 SubscribeOrderBookStatusChangeRequest::specialist() const {
  return specialist_;
}
inline void SubscribeOrderBookStatusChangeRequest::set_specialist(::google::protobuf::int32 value) {
  set_has_specialist();
  specialist_ = value;
}

// optional bool bootstrap = 8;
inline bool SubscribeOrderBookStatusChangeRequest::has_bootstrap() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SubscribeOrderBookStatusChangeRequest::set_has_bootstrap() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SubscribeOrderBookStatusChangeRequest::clear_has_bootstrap() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SubscribeOrderBookStatusChangeRequest::clear_bootstrap() {
  bootstrap_ = false;
  clear_has_bootstrap();
}
inline bool SubscribeOrderBookStatusChangeRequest::bootstrap() const {
  return bootstrap_;
}
inline void SubscribeOrderBookStatusChangeRequest::set_bootstrap(bool value) {
  set_has_bootstrap();
  bootstrap_ = value;
}

// -------------------------------------------------------------------

// UnsubscribeOrderBookStatusChangeRequest

// -------------------------------------------------------------------

// SubscribeOrderStatusChangeRequest

// required .bnet.protocol.EntityId agent_id = 1;
inline bool SubscribeOrderStatusChangeRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SubscribeOrderStatusChangeRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SubscribeOrderStatusChangeRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SubscribeOrderStatusChangeRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bnet::protocol::EntityId::Clear();
  clear_has_agent_id();
}
inline const ::bnet::protocol::EntityId& SubscribeOrderStatusChangeRequest::agent_id() const {
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bnet::protocol::EntityId* SubscribeOrderStatusChangeRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bnet::protocol::EntityId;
  return agent_id_;
}
inline ::bnet::protocol::EntityId* SubscribeOrderStatusChangeRequest::release_agent_id() {
  clear_has_agent_id();
  ::bnet::protocol::EntityId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}

// required uint64 object_id = 2;
inline bool SubscribeOrderStatusChangeRequest::has_object_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SubscribeOrderStatusChangeRequest::set_has_object_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SubscribeOrderStatusChangeRequest::clear_has_object_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SubscribeOrderStatusChangeRequest::clear_object_id() {
  object_id_ = GOOGLE_ULONGLONG(0);
  clear_has_object_id();
}
inline ::google::protobuf::uint64 SubscribeOrderStatusChangeRequest::object_id() const {
  return object_id_;
}
inline void SubscribeOrderStatusChangeRequest::set_object_id(::google::protobuf::uint64 value) {
  set_has_object_id();
  object_id_ = value;
}

// -------------------------------------------------------------------

// UnsubscribeOrderStatusChangeRequest

// required .bnet.protocol.EntityId agent_id = 1;
inline bool UnsubscribeOrderStatusChangeRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnsubscribeOrderStatusChangeRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnsubscribeOrderStatusChangeRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnsubscribeOrderStatusChangeRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bnet::protocol::EntityId::Clear();
  clear_has_agent_id();
}
inline const ::bnet::protocol::EntityId& UnsubscribeOrderStatusChangeRequest::agent_id() const {
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bnet::protocol::EntityId* UnsubscribeOrderStatusChangeRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bnet::protocol::EntityId;
  return agent_id_;
}
inline ::bnet::protocol::EntityId* UnsubscribeOrderStatusChangeRequest::release_agent_id() {
  clear_has_agent_id();
  ::bnet::protocol::EntityId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}

// required uint64 object_id = 2;
inline bool UnsubscribeOrderStatusChangeRequest::has_object_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnsubscribeOrderStatusChangeRequest::set_has_object_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnsubscribeOrderStatusChangeRequest::clear_has_object_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnsubscribeOrderStatusChangeRequest::clear_object_id() {
  object_id_ = GOOGLE_ULONGLONG(0);
  clear_has_object_id();
}
inline ::google::protobuf::uint64 UnsubscribeOrderStatusChangeRequest::object_id() const {
  return object_id_;
}
inline void UnsubscribeOrderStatusChangeRequest::set_object_id(::google::protobuf::uint64 value) {
  set_has_object_id();
  object_id_ = value;
}

// -------------------------------------------------------------------

// ClaimRequest

// required .bnet.protocol.exchange.PartitionId partition_id = 1;
inline bool ClaimRequest::has_partition_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClaimRequest::set_has_partition_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClaimRequest::clear_has_partition_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClaimRequest::clear_partition_id() {
  if (partition_id_ != NULL) partition_id_->::bnet::protocol::exchange::PartitionId::Clear();
  clear_has_partition_id();
}
inline const ::bnet::protocol::exchange::PartitionId& ClaimRequest::partition_id() const {
  return partition_id_ != NULL ? *partition_id_ : *default_instance_->partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* ClaimRequest::mutable_partition_id() {
  set_has_partition_id();
  if (partition_id_ == NULL) partition_id_ = new ::bnet::protocol::exchange::PartitionId;
  return partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* ClaimRequest::release_partition_id() {
  clear_has_partition_id();
  ::bnet::protocol::exchange::PartitionId* temp = partition_id_;
  partition_id_ = NULL;
  return temp;
}

// required uint32 order_id = 2;
inline bool ClaimRequest::has_order_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClaimRequest::set_has_order_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClaimRequest::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClaimRequest::clear_order_id() {
  order_id_ = 0u;
  clear_has_order_id();
}
inline ::google::protobuf::uint32 ClaimRequest::order_id() const {
  return order_id_;
}
inline void ClaimRequest::set_order_id(::google::protobuf::uint32 value) {
  set_has_order_id();
  order_id_ = value;
}

// optional .bnet.protocol.EntityId bnet_account = 3;
inline bool ClaimRequest::has_bnet_account() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClaimRequest::set_has_bnet_account() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClaimRequest::clear_has_bnet_account() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClaimRequest::clear_bnet_account() {
  if (bnet_account_ != NULL) bnet_account_->::bnet::protocol::EntityId::Clear();
  clear_has_bnet_account();
}
inline const ::bnet::protocol::EntityId& ClaimRequest::bnet_account() const {
  return bnet_account_ != NULL ? *bnet_account_ : *default_instance_->bnet_account_;
}
inline ::bnet::protocol::EntityId* ClaimRequest::mutable_bnet_account() {
  set_has_bnet_account();
  if (bnet_account_ == NULL) bnet_account_ = new ::bnet::protocol::EntityId;
  return bnet_account_;
}
inline ::bnet::protocol::EntityId* ClaimRequest::release_bnet_account() {
  clear_has_bnet_account();
  ::bnet::protocol::EntityId* temp = bnet_account_;
  bnet_account_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CancelRequest

// required .bnet.protocol.exchange.PartitionId partition_id = 1;
inline bool CancelRequest::has_partition_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CancelRequest::set_has_partition_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CancelRequest::clear_has_partition_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CancelRequest::clear_partition_id() {
  if (partition_id_ != NULL) partition_id_->::bnet::protocol::exchange::PartitionId::Clear();
  clear_has_partition_id();
}
inline const ::bnet::protocol::exchange::PartitionId& CancelRequest::partition_id() const {
  return partition_id_ != NULL ? *partition_id_ : *default_instance_->partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* CancelRequest::mutable_partition_id() {
  set_has_partition_id();
  if (partition_id_ == NULL) partition_id_ = new ::bnet::protocol::exchange::PartitionId;
  return partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* CancelRequest::release_partition_id() {
  clear_has_partition_id();
  ::bnet::protocol::exchange::PartitionId* temp = partition_id_;
  partition_id_ = NULL;
  return temp;
}

// required uint32 order_id = 2;
inline bool CancelRequest::has_order_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CancelRequest::set_has_order_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CancelRequest::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CancelRequest::clear_order_id() {
  order_id_ = 0u;
  clear_has_order_id();
}
inline ::google::protobuf::uint32 CancelRequest::order_id() const {
  return order_id_;
}
inline void CancelRequest::set_order_id(::google::protobuf::uint32 value) {
  set_has_order_id();
  order_id_ = value;
}

// optional uint32 reason = 3;
inline bool CancelRequest::has_reason() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CancelRequest::set_has_reason() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CancelRequest::clear_has_reason() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CancelRequest::clear_reason() {
  reason_ = 0u;
  clear_has_reason();
}
inline ::google::protobuf::uint32 CancelRequest::reason() const {
  return reason_;
}
inline void CancelRequest::set_reason(::google::protobuf::uint32 value) {
  set_has_reason();
  reason_ = value;
}

// optional .bnet.protocol.EntityId bnet_account = 4;
inline bool CancelRequest::has_bnet_account() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CancelRequest::set_has_bnet_account() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CancelRequest::clear_has_bnet_account() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CancelRequest::clear_bnet_account() {
  if (bnet_account_ != NULL) bnet_account_->::bnet::protocol::EntityId::Clear();
  clear_has_bnet_account();
}
inline const ::bnet::protocol::EntityId& CancelRequest::bnet_account() const {
  return bnet_account_ != NULL ? *bnet_account_ : *default_instance_->bnet_account_;
}
inline ::bnet::protocol::EntityId* CancelRequest::mutable_bnet_account() {
  set_has_bnet_account();
  if (bnet_account_ == NULL) bnet_account_ = new ::bnet::protocol::EntityId;
  return bnet_account_;
}
inline ::bnet::protocol::EntityId* CancelRequest::release_bnet_account() {
  clear_has_bnet_account();
  ::bnet::protocol::EntityId* temp = bnet_account_;
  bnet_account_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// GetConfigurationRequest

// required fixed32 program = 1;
inline bool GetConfigurationRequest::has_program() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetConfigurationRequest::set_has_program() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetConfigurationRequest::clear_has_program() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetConfigurationRequest::clear_program() {
  program_ = 0u;
  clear_has_program();
}
inline ::google::protobuf::uint32 GetConfigurationRequest::program() const {
  return program_;
}
inline void GetConfigurationRequest::set_program(::google::protobuf::uint32 value) {
  set_has_program();
  program_ = value;
}

// -------------------------------------------------------------------

// GetConfigurationResponse

// repeated .bnet.protocol.exchange.SpecialistConfig configs = 1;
inline int GetConfigurationResponse::configs_size() const {
  return configs_.size();
}
inline void GetConfigurationResponse::clear_configs() {
  configs_.Clear();
}
inline const ::bnet::protocol::exchange::SpecialistConfig& GetConfigurationResponse::configs(int index) const {
  return configs_.Get(index);
}
inline ::bnet::protocol::exchange::SpecialistConfig* GetConfigurationResponse::mutable_configs(int index) {
  return configs_.Mutable(index);
}
inline ::bnet::protocol::exchange::SpecialistConfig* GetConfigurationResponse::add_configs() {
  return configs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::SpecialistConfig >&
GetConfigurationResponse::configs() const {
  return configs_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::SpecialistConfig >*
GetConfigurationResponse::mutable_configs() {
  return &configs_;
}

// -------------------------------------------------------------------

// GetOfferFeeEstimationRequest

// required .bnet.protocol.exchange.PartitionId partition_id = 1;
inline bool GetOfferFeeEstimationRequest::has_partition_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetOfferFeeEstimationRequest::set_has_partition_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetOfferFeeEstimationRequest::clear_has_partition_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetOfferFeeEstimationRequest::clear_partition_id() {
  if (partition_id_ != NULL) partition_id_->::bnet::protocol::exchange::PartitionId::Clear();
  clear_has_partition_id();
}
inline const ::bnet::protocol::exchange::PartitionId& GetOfferFeeEstimationRequest::partition_id() const {
  return partition_id_ != NULL ? *partition_id_ : *default_instance_->partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* GetOfferFeeEstimationRequest::mutable_partition_id() {
  set_has_partition_id();
  if (partition_id_ == NULL) partition_id_ = new ::bnet::protocol::exchange::PartitionId;
  return partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* GetOfferFeeEstimationRequest::release_partition_id() {
  clear_has_partition_id();
  ::bnet::protocol::exchange::PartitionId* temp = partition_id_;
  partition_id_ = NULL;
  return temp;
}

// required .bnet.protocol.exchange.FeeEstimationData data = 2;
inline bool GetOfferFeeEstimationRequest::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetOfferFeeEstimationRequest::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetOfferFeeEstimationRequest::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetOfferFeeEstimationRequest::clear_data() {
  if (data_ != NULL) data_->::bnet::protocol::exchange::FeeEstimationData::Clear();
  clear_has_data();
}
inline const ::bnet::protocol::exchange::FeeEstimationData& GetOfferFeeEstimationRequest::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::bnet::protocol::exchange::FeeEstimationData* GetOfferFeeEstimationRequest::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::bnet::protocol::exchange::FeeEstimationData;
  return data_;
}
inline ::bnet::protocol::exchange::FeeEstimationData* GetOfferFeeEstimationRequest::release_data() {
  clear_has_data();
  ::bnet::protocol::exchange::FeeEstimationData* temp = data_;
  data_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// GetBidFeeEstimationRequest

// required .bnet.protocol.exchange.PartitionId partition_id = 1;
inline bool GetBidFeeEstimationRequest::has_partition_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetBidFeeEstimationRequest::set_has_partition_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetBidFeeEstimationRequest::clear_has_partition_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetBidFeeEstimationRequest::clear_partition_id() {
  if (partition_id_ != NULL) partition_id_->::bnet::protocol::exchange::PartitionId::Clear();
  clear_has_partition_id();
}
inline const ::bnet::protocol::exchange::PartitionId& GetBidFeeEstimationRequest::partition_id() const {
  return partition_id_ != NULL ? *partition_id_ : *default_instance_->partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* GetBidFeeEstimationRequest::mutable_partition_id() {
  set_has_partition_id();
  if (partition_id_ == NULL) partition_id_ = new ::bnet::protocol::exchange::PartitionId;
  return partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* GetBidFeeEstimationRequest::release_partition_id() {
  clear_has_partition_id();
  ::bnet::protocol::exchange::PartitionId* temp = partition_id_;
  partition_id_ = NULL;
  return temp;
}

// required .bnet.protocol.exchange.FeeEstimationData data = 2;
inline bool GetBidFeeEstimationRequest::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetBidFeeEstimationRequest::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetBidFeeEstimationRequest::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetBidFeeEstimationRequest::clear_data() {
  if (data_ != NULL) data_->::bnet::protocol::exchange::FeeEstimationData::Clear();
  clear_has_data();
}
inline const ::bnet::protocol::exchange::FeeEstimationData& GetBidFeeEstimationRequest::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::bnet::protocol::exchange::FeeEstimationData* GetBidFeeEstimationRequest::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::bnet::protocol::exchange::FeeEstimationData;
  return data_;
}
inline ::bnet::protocol::exchange::FeeEstimationData* GetBidFeeEstimationRequest::release_data() {
  clear_has_data();
  ::bnet::protocol::exchange::FeeEstimationData* temp = data_;
  data_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// GetFeeEstimationResponse

// optional uint64 fee_amount = 1;
inline bool GetFeeEstimationResponse::has_fee_amount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetFeeEstimationResponse::set_has_fee_amount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetFeeEstimationResponse::clear_has_fee_amount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetFeeEstimationResponse::clear_fee_amount() {
  fee_amount_ = GOOGLE_ULONGLONG(0);
  clear_has_fee_amount();
}
inline ::google::protobuf::uint64 GetFeeEstimationResponse::fee_amount() const {
  return fee_amount_;
}
inline void GetFeeEstimationResponse::set_fee_amount(::google::protobuf::uint64 value) {
  set_has_fee_amount();
  fee_amount_ = value;
}

// -------------------------------------------------------------------

// OrderBookNotificationRequest

// repeated .bnet.protocol.exchange.OrderBookNotification notifications = 1;
inline int OrderBookNotificationRequest::notifications_size() const {
  return notifications_.size();
}
inline void OrderBookNotificationRequest::clear_notifications() {
  notifications_.Clear();
}
inline const ::bnet::protocol::exchange::OrderBookNotification& OrderBookNotificationRequest::notifications(int index) const {
  return notifications_.Get(index);
}
inline ::bnet::protocol::exchange::OrderBookNotification* OrderBookNotificationRequest::mutable_notifications(int index) {
  return notifications_.Mutable(index);
}
inline ::bnet::protocol::exchange::OrderBookNotification* OrderBookNotificationRequest::add_notifications() {
  return notifications_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::OrderBookNotification >&
OrderBookNotificationRequest::notifications() const {
  return notifications_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange::OrderBookNotification >*
OrderBookNotificationRequest::mutable_notifications() {
  return &notifications_;
}

// optional bool boot_strap_last = 2;
inline bool OrderBookNotificationRequest::has_boot_strap_last() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderBookNotificationRequest::set_has_boot_strap_last() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderBookNotificationRequest::clear_has_boot_strap_last() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderBookNotificationRequest::clear_boot_strap_last() {
  boot_strap_last_ = false;
  clear_has_boot_strap_last();
}
inline bool OrderBookNotificationRequest::boot_strap_last() const {
  return boot_strap_last_;
}
inline void OrderBookNotificationRequest::set_boot_strap_last(bool value) {
  set_has_boot_strap_last();
  boot_strap_last_ = value;
}

// -------------------------------------------------------------------

// OfferNotificationRequest

// required .bnet.protocol.exchange.OfferExtended offer = 1;
inline bool OfferNotificationRequest::has_offer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OfferNotificationRequest::set_has_offer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OfferNotificationRequest::clear_has_offer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OfferNotificationRequest::clear_offer() {
  if (offer_ != NULL) offer_->::bnet::protocol::exchange::OfferExtended::Clear();
  clear_has_offer();
}
inline const ::bnet::protocol::exchange::OfferExtended& OfferNotificationRequest::offer() const {
  return offer_ != NULL ? *offer_ : *default_instance_->offer_;
}
inline ::bnet::protocol::exchange::OfferExtended* OfferNotificationRequest::mutable_offer() {
  set_has_offer();
  if (offer_ == NULL) offer_ = new ::bnet::protocol::exchange::OfferExtended;
  return offer_;
}
inline ::bnet::protocol::exchange::OfferExtended* OfferNotificationRequest::release_offer() {
  clear_has_offer();
  ::bnet::protocol::exchange::OfferExtended* temp = offer_;
  offer_ = NULL;
  return temp;
}

// required uint32 event = 2;
inline bool OfferNotificationRequest::has_event() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OfferNotificationRequest::set_has_event() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OfferNotificationRequest::clear_has_event() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OfferNotificationRequest::clear_event() {
  event_ = 0u;
  clear_has_event();
}
inline ::google::protobuf::uint32 OfferNotificationRequest::event() const {
  return event_;
}
inline void OfferNotificationRequest::set_event(::google::protobuf::uint32 value) {
  set_has_event();
  event_ = value;
}

// -------------------------------------------------------------------

// BidNotificationRequest

// required .bnet.protocol.exchange.BidExtended bid = 1;
inline bool BidNotificationRequest::has_bid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidNotificationRequest::set_has_bid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidNotificationRequest::clear_has_bid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidNotificationRequest::clear_bid() {
  if (bid_ != NULL) bid_->::bnet::protocol::exchange::BidExtended::Clear();
  clear_has_bid();
}
inline const ::bnet::protocol::exchange::BidExtended& BidNotificationRequest::bid() const {
  return bid_ != NULL ? *bid_ : *default_instance_->bid_;
}
inline ::bnet::protocol::exchange::BidExtended* BidNotificationRequest::mutable_bid() {
  set_has_bid();
  if (bid_ == NULL) bid_ = new ::bnet::protocol::exchange::BidExtended;
  return bid_;
}
inline ::bnet::protocol::exchange::BidExtended* BidNotificationRequest::release_bid() {
  clear_has_bid();
  ::bnet::protocol::exchange::BidExtended* temp = bid_;
  bid_ = NULL;
  return temp;
}

// required uint32 event = 2;
inline bool BidNotificationRequest::has_event() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidNotificationRequest::set_has_event() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidNotificationRequest::clear_has_event() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidNotificationRequest::clear_event() {
  event_ = 0u;
  clear_has_event();
}
inline ::google::protobuf::uint32 BidNotificationRequest::event() const {
  return event_;
}
inline void BidNotificationRequest::set_event(::google::protobuf::uint32 value) {
  set_has_event();
  event_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace exchange
}  // namespace protocol
}  // namespace bnet

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_service_2fexchange_2fexchange_2eproto__INCLUDED
