// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/channel_invitation/definition/channel_invitation.proto

#ifndef PROTOBUF_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto__INCLUDED
#define PROTOBUF_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "lib/protocol/entity.pb.h"
#include "lib/protocol/invitation.pb.h"
#include "lib/rpc/rpc.pb.h"
#include "service/channel/definition/channel.pb.h"
#include "service/channel_invitation/channel_invitation_types.pb.h"
// @@protoc_insertion_point(includes)

namespace bnet {
namespace protocol {
namespace channel_invitation {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
void protobuf_AssignDesc_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
void protobuf_ShutdownFile_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();

class AcceptInvitationRequest;
class AcceptInvitationResponse;
class SubscribeRequest;
class SubscribeResponse;
class UnsubscribeRequest;
class SuggestInvitationRequest;
class RevokeInvitationRequest;
class HasRoomForInvitationRequest;
class InvitationAddedNotification;
class InvitationRemovedNotification;
class SuggestionAddedNotification;

// ===================================================================

class AcceptInvitationRequest : public ::google::protobuf::Message {
 public:
  AcceptInvitationRequest();
  virtual ~AcceptInvitationRequest();
  
  AcceptInvitationRequest(const AcceptInvitationRequest& from);
  
  inline AcceptInvitationRequest& operator=(const AcceptInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AcceptInvitationRequest& default_instance();
  
  void Swap(AcceptInvitationRequest* other);
  
  // implements Message ----------------------------------------------
  
  AcceptInvitationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AcceptInvitationRequest& from);
  void MergeFrom(const AcceptInvitationRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .bnet.protocol.EntityId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bnet::protocol::EntityId& agent_id() const;
  inline ::bnet::protocol::EntityId* mutable_agent_id();
  inline ::bnet::protocol::EntityId* release_agent_id();
  
  // required fixed64 invitation_id = 2;
  inline bool has_invitation_id() const;
  inline void clear_invitation_id();
  static const int kInvitationIdFieldNumber = 2;
  inline ::google::protobuf::uint64 invitation_id() const;
  inline void set_invitation_id(::google::protobuf::uint64 value);
  
  // required uint64 object_id = 3;
  inline bool has_object_id() const;
  inline void clear_object_id();
  static const int kObjectIdFieldNumber = 3;
  inline ::google::protobuf::uint64 object_id() const;
  inline void set_object_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.AcceptInvitationRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_invitation_id();
  inline void clear_has_invitation_id();
  inline void set_has_object_id();
  inline void clear_has_object_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::EntityId* agent_id_;
  ::google::protobuf::uint64 invitation_id_;
  ::google::protobuf::uint64 object_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  friend void protobuf_AssignDesc_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  friend void protobuf_ShutdownFile_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  
  void InitAsDefaultInstance();
  static AcceptInvitationRequest* default_instance_;
};
// -------------------------------------------------------------------

class AcceptInvitationResponse : public ::google::protobuf::Message {
 public:
  AcceptInvitationResponse();
  virtual ~AcceptInvitationResponse();
  
  AcceptInvitationResponse(const AcceptInvitationResponse& from);
  
  inline AcceptInvitationResponse& operator=(const AcceptInvitationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AcceptInvitationResponse& default_instance();
  
  void Swap(AcceptInvitationResponse* other);
  
  // implements Message ----------------------------------------------
  
  AcceptInvitationResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AcceptInvitationResponse& from);
  void MergeFrom(const AcceptInvitationResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 object_id = 1;
  inline bool has_object_id() const;
  inline void clear_object_id();
  static const int kObjectIdFieldNumber = 1;
  inline ::google::protobuf::uint64 object_id() const;
  inline void set_object_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.AcceptInvitationResponse)
 private:
  inline void set_has_object_id();
  inline void clear_has_object_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 object_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  friend void protobuf_AssignDesc_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  friend void protobuf_ShutdownFile_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  
  void InitAsDefaultInstance();
  static AcceptInvitationResponse* default_instance_;
};
// -------------------------------------------------------------------

class SubscribeRequest : public ::google::protobuf::Message {
 public:
  SubscribeRequest();
  virtual ~SubscribeRequest();
  
  SubscribeRequest(const SubscribeRequest& from);
  
  inline SubscribeRequest& operator=(const SubscribeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubscribeRequest& default_instance();
  
  void Swap(SubscribeRequest* other);
  
  // implements Message ----------------------------------------------
  
  SubscribeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubscribeRequest& from);
  void MergeFrom(const SubscribeRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .bnet.protocol.EntityId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bnet::protocol::EntityId& agent_id() const;
  inline ::bnet::protocol::EntityId* mutable_agent_id();
  inline ::bnet::protocol::EntityId* release_agent_id();
  
  // required uint64 object_id = 2;
  inline bool has_object_id() const;
  inline void clear_object_id();
  static const int kObjectIdFieldNumber = 2;
  inline ::google::protobuf::uint64 object_id() const;
  inline void set_object_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.SubscribeRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_object_id();
  inline void clear_has_object_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::EntityId* agent_id_;
  ::google::protobuf::uint64 object_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  friend void protobuf_AssignDesc_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  friend void protobuf_ShutdownFile_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  
  void InitAsDefaultInstance();
  static SubscribeRequest* default_instance_;
};
// -------------------------------------------------------------------

class SubscribeResponse : public ::google::protobuf::Message {
 public:
  SubscribeResponse();
  virtual ~SubscribeResponse();
  
  SubscribeResponse(const SubscribeResponse& from);
  
  inline SubscribeResponse& operator=(const SubscribeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubscribeResponse& default_instance();
  
  void Swap(SubscribeResponse* other);
  
  // implements Message ----------------------------------------------
  
  SubscribeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubscribeResponse& from);
  void MergeFrom(const SubscribeResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .bnet.protocol.channel_invitation.InvitationCollection collection = 1;
  inline int collection_size() const;
  inline void clear_collection();
  static const int kCollectionFieldNumber = 1;
  inline const ::bnet::protocol::channel_invitation::InvitationCollection& collection(int index) const;
  inline ::bnet::protocol::channel_invitation::InvitationCollection* mutable_collection(int index);
  inline ::bnet::protocol::channel_invitation::InvitationCollection* add_collection();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::channel_invitation::InvitationCollection >&
      collection() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::channel_invitation::InvitationCollection >*
      mutable_collection();
  
  // repeated .bnet.protocol.invitation.Invitation received_invitation = 2;
  inline int received_invitation_size() const;
  inline void clear_received_invitation();
  static const int kReceivedInvitationFieldNumber = 2;
  inline const ::bnet::protocol::invitation::Invitation& received_invitation(int index) const;
  inline ::bnet::protocol::invitation::Invitation* mutable_received_invitation(int index);
  inline ::bnet::protocol::invitation::Invitation* add_received_invitation();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::invitation::Invitation >&
      received_invitation() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::invitation::Invitation >*
      mutable_received_invitation();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.SubscribeResponse)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::channel_invitation::InvitationCollection > collection_;
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::invitation::Invitation > received_invitation_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  friend void protobuf_AssignDesc_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  friend void protobuf_ShutdownFile_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  
  void InitAsDefaultInstance();
  static SubscribeResponse* default_instance_;
};
// -------------------------------------------------------------------

class UnsubscribeRequest : public ::google::protobuf::Message {
 public:
  UnsubscribeRequest();
  virtual ~UnsubscribeRequest();
  
  UnsubscribeRequest(const UnsubscribeRequest& from);
  
  inline UnsubscribeRequest& operator=(const UnsubscribeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnsubscribeRequest& default_instance();
  
  void Swap(UnsubscribeRequest* other);
  
  // implements Message ----------------------------------------------
  
  UnsubscribeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnsubscribeRequest& from);
  void MergeFrom(const UnsubscribeRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .bnet.protocol.EntityId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bnet::protocol::EntityId& agent_id() const;
  inline ::bnet::protocol::EntityId* mutable_agent_id();
  inline ::bnet::protocol::EntityId* release_agent_id();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.UnsubscribeRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::EntityId* agent_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  friend void protobuf_AssignDesc_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  friend void protobuf_ShutdownFile_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  
  void InitAsDefaultInstance();
  static UnsubscribeRequest* default_instance_;
};
// -------------------------------------------------------------------

class SuggestInvitationRequest : public ::google::protobuf::Message {
 public:
  SuggestInvitationRequest();
  virtual ~SuggestInvitationRequest();
  
  SuggestInvitationRequest(const SuggestInvitationRequest& from);
  
  inline SuggestInvitationRequest& operator=(const SuggestInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SuggestInvitationRequest& default_instance();
  
  void Swap(SuggestInvitationRequest* other);
  
  // implements Message ----------------------------------------------
  
  SuggestInvitationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SuggestInvitationRequest& from);
  void MergeFrom(const SuggestInvitationRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .bnet.protocol.EntityId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bnet::protocol::EntityId& agent_id() const;
  inline ::bnet::protocol::EntityId* mutable_agent_id();
  inline ::bnet::protocol::EntityId* release_agent_id();
  
  // required .bnet.protocol.EntityId channel_id = 2;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 2;
  inline const ::bnet::protocol::EntityId& channel_id() const;
  inline ::bnet::protocol::EntityId* mutable_channel_id();
  inline ::bnet::protocol::EntityId* release_channel_id();
  
  // required .bnet.protocol.EntityId target_id = 3;
  inline bool has_target_id() const;
  inline void clear_target_id();
  static const int kTargetIdFieldNumber = 3;
  inline const ::bnet::protocol::EntityId& target_id() const;
  inline ::bnet::protocol::EntityId* mutable_target_id();
  inline ::bnet::protocol::EntityId* release_target_id();
  
  // optional .bnet.protocol.EntityId approval_id = 4;
  inline bool has_approval_id() const;
  inline void clear_approval_id();
  static const int kApprovalIdFieldNumber = 4;
  inline const ::bnet::protocol::EntityId& approval_id() const;
  inline ::bnet::protocol::EntityId* mutable_approval_id();
  inline ::bnet::protocol::EntityId* release_approval_id();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.SuggestInvitationRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_target_id();
  inline void clear_has_target_id();
  inline void set_has_approval_id();
  inline void clear_has_approval_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::EntityId* agent_id_;
  ::bnet::protocol::EntityId* channel_id_;
  ::bnet::protocol::EntityId* target_id_;
  ::bnet::protocol::EntityId* approval_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  friend void protobuf_AssignDesc_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  friend void protobuf_ShutdownFile_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  
  void InitAsDefaultInstance();
  static SuggestInvitationRequest* default_instance_;
};
// -------------------------------------------------------------------

class RevokeInvitationRequest : public ::google::protobuf::Message {
 public:
  RevokeInvitationRequest();
  virtual ~RevokeInvitationRequest();
  
  RevokeInvitationRequest(const RevokeInvitationRequest& from);
  
  inline RevokeInvitationRequest& operator=(const RevokeInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RevokeInvitationRequest& default_instance();
  
  void Swap(RevokeInvitationRequest* other);
  
  // implements Message ----------------------------------------------
  
  RevokeInvitationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RevokeInvitationRequest& from);
  void MergeFrom(const RevokeInvitationRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .bnet.protocol.EntityId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bnet::protocol::EntityId& agent_id() const;
  inline ::bnet::protocol::EntityId* mutable_agent_id();
  inline ::bnet::protocol::EntityId* release_agent_id();
  
  // optional .bnet.protocol.EntityId target_id = 2;
  inline bool has_target_id() const;
  inline void clear_target_id();
  static const int kTargetIdFieldNumber = 2;
  inline const ::bnet::protocol::EntityId& target_id() const;
  inline ::bnet::protocol::EntityId* mutable_target_id();
  inline ::bnet::protocol::EntityId* release_target_id();
  
  // required fixed64 invitation_id = 3;
  inline bool has_invitation_id() const;
  inline void clear_invitation_id();
  static const int kInvitationIdFieldNumber = 3;
  inline ::google::protobuf::uint64 invitation_id() const;
  inline void set_invitation_id(::google::protobuf::uint64 value);
  
  // required .bnet.protocol.EntityId channel_id = 4;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 4;
  inline const ::bnet::protocol::EntityId& channel_id() const;
  inline ::bnet::protocol::EntityId* mutable_channel_id();
  inline ::bnet::protocol::EntityId* release_channel_id();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.RevokeInvitationRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_target_id();
  inline void clear_has_target_id();
  inline void set_has_invitation_id();
  inline void clear_has_invitation_id();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::EntityId* agent_id_;
  ::bnet::protocol::EntityId* target_id_;
  ::google::protobuf::uint64 invitation_id_;
  ::bnet::protocol::EntityId* channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  friend void protobuf_AssignDesc_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  friend void protobuf_ShutdownFile_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  
  void InitAsDefaultInstance();
  static RevokeInvitationRequest* default_instance_;
};
// -------------------------------------------------------------------

class HasRoomForInvitationRequest : public ::google::protobuf::Message {
 public:
  HasRoomForInvitationRequest();
  virtual ~HasRoomForInvitationRequest();
  
  HasRoomForInvitationRequest(const HasRoomForInvitationRequest& from);
  
  inline HasRoomForInvitationRequest& operator=(const HasRoomForInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const HasRoomForInvitationRequest& default_instance();
  
  void Swap(HasRoomForInvitationRequest* other);
  
  // implements Message ----------------------------------------------
  
  HasRoomForInvitationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HasRoomForInvitationRequest& from);
  void MergeFrom(const HasRoomForInvitationRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 service_type = 1;
  inline bool has_service_type() const;
  inline void clear_service_type();
  static const int kServiceTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 service_type() const;
  inline void set_service_type(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.HasRoomForInvitationRequest)
 private:
  inline void set_has_service_type();
  inline void clear_has_service_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 service_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  friend void protobuf_AssignDesc_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  friend void protobuf_ShutdownFile_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  
  void InitAsDefaultInstance();
  static HasRoomForInvitationRequest* default_instance_;
};
// -------------------------------------------------------------------

class InvitationAddedNotification : public ::google::protobuf::Message {
 public:
  InvitationAddedNotification();
  virtual ~InvitationAddedNotification();
  
  InvitationAddedNotification(const InvitationAddedNotification& from);
  
  inline InvitationAddedNotification& operator=(const InvitationAddedNotification& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const InvitationAddedNotification& default_instance();
  
  void Swap(InvitationAddedNotification* other);
  
  // implements Message ----------------------------------------------
  
  InvitationAddedNotification* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InvitationAddedNotification& from);
  void MergeFrom(const InvitationAddedNotification& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.invitation.Invitation invitation = 1;
  inline bool has_invitation() const;
  inline void clear_invitation();
  static const int kInvitationFieldNumber = 1;
  inline const ::bnet::protocol::invitation::Invitation& invitation() const;
  inline ::bnet::protocol::invitation::Invitation* mutable_invitation();
  inline ::bnet::protocol::invitation::Invitation* release_invitation();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.InvitationAddedNotification)
 private:
  inline void set_has_invitation();
  inline void clear_has_invitation();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::invitation::Invitation* invitation_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  friend void protobuf_AssignDesc_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  friend void protobuf_ShutdownFile_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  
  void InitAsDefaultInstance();
  static InvitationAddedNotification* default_instance_;
};
// -------------------------------------------------------------------

class InvitationRemovedNotification : public ::google::protobuf::Message {
 public:
  InvitationRemovedNotification();
  virtual ~InvitationRemovedNotification();
  
  InvitationRemovedNotification(const InvitationRemovedNotification& from);
  
  inline InvitationRemovedNotification& operator=(const InvitationRemovedNotification& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const InvitationRemovedNotification& default_instance();
  
  void Swap(InvitationRemovedNotification* other);
  
  // implements Message ----------------------------------------------
  
  InvitationRemovedNotification* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InvitationRemovedNotification& from);
  void MergeFrom(const InvitationRemovedNotification& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.invitation.Invitation invitation = 1;
  inline bool has_invitation() const;
  inline void clear_invitation();
  static const int kInvitationFieldNumber = 1;
  inline const ::bnet::protocol::invitation::Invitation& invitation() const;
  inline ::bnet::protocol::invitation::Invitation* mutable_invitation();
  inline ::bnet::protocol::invitation::Invitation* release_invitation();
  
  // optional uint32 reason = 2;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 2;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.InvitationRemovedNotification)
 private:
  inline void set_has_invitation();
  inline void clear_has_invitation();
  inline void set_has_reason();
  inline void clear_has_reason();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::invitation::Invitation* invitation_;
  ::google::protobuf::uint32 reason_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  friend void protobuf_AssignDesc_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  friend void protobuf_ShutdownFile_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  
  void InitAsDefaultInstance();
  static InvitationRemovedNotification* default_instance_;
};
// -------------------------------------------------------------------

class SuggestionAddedNotification : public ::google::protobuf::Message {
 public:
  SuggestionAddedNotification();
  virtual ~SuggestionAddedNotification();
  
  SuggestionAddedNotification(const SuggestionAddedNotification& from);
  
  inline SuggestionAddedNotification& operator=(const SuggestionAddedNotification& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SuggestionAddedNotification& default_instance();
  
  void Swap(SuggestionAddedNotification* other);
  
  // implements Message ----------------------------------------------
  
  SuggestionAddedNotification* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SuggestionAddedNotification& from);
  void MergeFrom(const SuggestionAddedNotification& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.invitation.Suggestion suggestion = 1;
  inline bool has_suggestion() const;
  inline void clear_suggestion();
  static const int kSuggestionFieldNumber = 1;
  inline const ::bnet::protocol::invitation::Suggestion& suggestion() const;
  inline ::bnet::protocol::invitation::Suggestion* mutable_suggestion();
  inline ::bnet::protocol::invitation::Suggestion* release_suggestion();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.SuggestionAddedNotification)
 private:
  inline void set_has_suggestion();
  inline void clear_has_suggestion();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::invitation::Suggestion* suggestion_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  friend void protobuf_AssignDesc_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  friend void protobuf_ShutdownFile_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto();
  
  void InitAsDefaultInstance();
  static SuggestionAddedNotification* default_instance_;
};
// ===================================================================


// ===================================================================

// AcceptInvitationRequest

// optional .bnet.protocol.EntityId agent_id = 1;
inline bool AcceptInvitationRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AcceptInvitationRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AcceptInvitationRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AcceptInvitationRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bnet::protocol::EntityId::Clear();
  clear_has_agent_id();
}
inline const ::bnet::protocol::EntityId& AcceptInvitationRequest::agent_id() const {
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bnet::protocol::EntityId* AcceptInvitationRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bnet::protocol::EntityId;
  return agent_id_;
}
inline ::bnet::protocol::EntityId* AcceptInvitationRequest::release_agent_id() {
  clear_has_agent_id();
  ::bnet::protocol::EntityId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}

// required fixed64 invitation_id = 2;
inline bool AcceptInvitationRequest::has_invitation_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AcceptInvitationRequest::set_has_invitation_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AcceptInvitationRequest::clear_has_invitation_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AcceptInvitationRequest::clear_invitation_id() {
  invitation_id_ = GOOGLE_ULONGLONG(0);
  clear_has_invitation_id();
}
inline ::google::protobuf::uint64 AcceptInvitationRequest::invitation_id() const {
  return invitation_id_;
}
inline void AcceptInvitationRequest::set_invitation_id(::google::protobuf::uint64 value) {
  set_has_invitation_id();
  invitation_id_ = value;
}

// required uint64 object_id = 3;
inline bool AcceptInvitationRequest::has_object_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AcceptInvitationRequest::set_has_object_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AcceptInvitationRequest::clear_has_object_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AcceptInvitationRequest::clear_object_id() {
  object_id_ = GOOGLE_ULONGLONG(0);
  clear_has_object_id();
}
inline ::google::protobuf::uint64 AcceptInvitationRequest::object_id() const {
  return object_id_;
}
inline void AcceptInvitationRequest::set_object_id(::google::protobuf::uint64 value) {
  set_has_object_id();
  object_id_ = value;
}

// -------------------------------------------------------------------

// AcceptInvitationResponse

// required uint64 object_id = 1;
inline bool AcceptInvitationResponse::has_object_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AcceptInvitationResponse::set_has_object_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AcceptInvitationResponse::clear_has_object_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AcceptInvitationResponse::clear_object_id() {
  object_id_ = GOOGLE_ULONGLONG(0);
  clear_has_object_id();
}
inline ::google::protobuf::uint64 AcceptInvitationResponse::object_id() const {
  return object_id_;
}
inline void AcceptInvitationResponse::set_object_id(::google::protobuf::uint64 value) {
  set_has_object_id();
  object_id_ = value;
}

// -------------------------------------------------------------------

// SubscribeRequest

// optional .bnet.protocol.EntityId agent_id = 1;
inline bool SubscribeRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SubscribeRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SubscribeRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SubscribeRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bnet::protocol::EntityId::Clear();
  clear_has_agent_id();
}
inline const ::bnet::protocol::EntityId& SubscribeRequest::agent_id() const {
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bnet::protocol::EntityId* SubscribeRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bnet::protocol::EntityId;
  return agent_id_;
}
inline ::bnet::protocol::EntityId* SubscribeRequest::release_agent_id() {
  clear_has_agent_id();
  ::bnet::protocol::EntityId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}

// required uint64 object_id = 2;
inline bool SubscribeRequest::has_object_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SubscribeRequest::set_has_object_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SubscribeRequest::clear_has_object_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SubscribeRequest::clear_object_id() {
  object_id_ = GOOGLE_ULONGLONG(0);
  clear_has_object_id();
}
inline ::google::protobuf::uint64 SubscribeRequest::object_id() const {
  return object_id_;
}
inline void SubscribeRequest::set_object_id(::google::protobuf::uint64 value) {
  set_has_object_id();
  object_id_ = value;
}

// -------------------------------------------------------------------

// SubscribeResponse

// repeated .bnet.protocol.channel_invitation.InvitationCollection collection = 1;
inline int SubscribeResponse::collection_size() const {
  return collection_.size();
}
inline void SubscribeResponse::clear_collection() {
  collection_.Clear();
}
inline const ::bnet::protocol::channel_invitation::InvitationCollection& SubscribeResponse::collection(int index) const {
  return collection_.Get(index);
}
inline ::bnet::protocol::channel_invitation::InvitationCollection* SubscribeResponse::mutable_collection(int index) {
  return collection_.Mutable(index);
}
inline ::bnet::protocol::channel_invitation::InvitationCollection* SubscribeResponse::add_collection() {
  return collection_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::channel_invitation::InvitationCollection >&
SubscribeResponse::collection() const {
  return collection_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::channel_invitation::InvitationCollection >*
SubscribeResponse::mutable_collection() {
  return &collection_;
}

// repeated .bnet.protocol.invitation.Invitation received_invitation = 2;
inline int SubscribeResponse::received_invitation_size() const {
  return received_invitation_.size();
}
inline void SubscribeResponse::clear_received_invitation() {
  received_invitation_.Clear();
}
inline const ::bnet::protocol::invitation::Invitation& SubscribeResponse::received_invitation(int index) const {
  return received_invitation_.Get(index);
}
inline ::bnet::protocol::invitation::Invitation* SubscribeResponse::mutable_received_invitation(int index) {
  return received_invitation_.Mutable(index);
}
inline ::bnet::protocol::invitation::Invitation* SubscribeResponse::add_received_invitation() {
  return received_invitation_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::invitation::Invitation >&
SubscribeResponse::received_invitation() const {
  return received_invitation_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::invitation::Invitation >*
SubscribeResponse::mutable_received_invitation() {
  return &received_invitation_;
}

// -------------------------------------------------------------------

// UnsubscribeRequest

// optional .bnet.protocol.EntityId agent_id = 1;
inline bool UnsubscribeRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnsubscribeRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnsubscribeRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnsubscribeRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bnet::protocol::EntityId::Clear();
  clear_has_agent_id();
}
inline const ::bnet::protocol::EntityId& UnsubscribeRequest::agent_id() const {
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bnet::protocol::EntityId* UnsubscribeRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bnet::protocol::EntityId;
  return agent_id_;
}
inline ::bnet::protocol::EntityId* UnsubscribeRequest::release_agent_id() {
  clear_has_agent_id();
  ::bnet::protocol::EntityId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// SuggestInvitationRequest

// optional .bnet.protocol.EntityId agent_id = 1;
inline bool SuggestInvitationRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SuggestInvitationRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SuggestInvitationRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SuggestInvitationRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bnet::protocol::EntityId::Clear();
  clear_has_agent_id();
}
inline const ::bnet::protocol::EntityId& SuggestInvitationRequest::agent_id() const {
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bnet::protocol::EntityId* SuggestInvitationRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bnet::protocol::EntityId;
  return agent_id_;
}
inline ::bnet::protocol::EntityId* SuggestInvitationRequest::release_agent_id() {
  clear_has_agent_id();
  ::bnet::protocol::EntityId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}

// required .bnet.protocol.EntityId channel_id = 2;
inline bool SuggestInvitationRequest::has_channel_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SuggestInvitationRequest::set_has_channel_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SuggestInvitationRequest::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SuggestInvitationRequest::clear_channel_id() {
  if (channel_id_ != NULL) channel_id_->::bnet::protocol::EntityId::Clear();
  clear_has_channel_id();
}
inline const ::bnet::protocol::EntityId& SuggestInvitationRequest::channel_id() const {
  return channel_id_ != NULL ? *channel_id_ : *default_instance_->channel_id_;
}
inline ::bnet::protocol::EntityId* SuggestInvitationRequest::mutable_channel_id() {
  set_has_channel_id();
  if (channel_id_ == NULL) channel_id_ = new ::bnet::protocol::EntityId;
  return channel_id_;
}
inline ::bnet::protocol::EntityId* SuggestInvitationRequest::release_channel_id() {
  clear_has_channel_id();
  ::bnet::protocol::EntityId* temp = channel_id_;
  channel_id_ = NULL;
  return temp;
}

// required .bnet.protocol.EntityId target_id = 3;
inline bool SuggestInvitationRequest::has_target_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SuggestInvitationRequest::set_has_target_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SuggestInvitationRequest::clear_has_target_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SuggestInvitationRequest::clear_target_id() {
  if (target_id_ != NULL) target_id_->::bnet::protocol::EntityId::Clear();
  clear_has_target_id();
}
inline const ::bnet::protocol::EntityId& SuggestInvitationRequest::target_id() const {
  return target_id_ != NULL ? *target_id_ : *default_instance_->target_id_;
}
inline ::bnet::protocol::EntityId* SuggestInvitationRequest::mutable_target_id() {
  set_has_target_id();
  if (target_id_ == NULL) target_id_ = new ::bnet::protocol::EntityId;
  return target_id_;
}
inline ::bnet::protocol::EntityId* SuggestInvitationRequest::release_target_id() {
  clear_has_target_id();
  ::bnet::protocol::EntityId* temp = target_id_;
  target_id_ = NULL;
  return temp;
}

// optional .bnet.protocol.EntityId approval_id = 4;
inline bool SuggestInvitationRequest::has_approval_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SuggestInvitationRequest::set_has_approval_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SuggestInvitationRequest::clear_has_approval_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SuggestInvitationRequest::clear_approval_id() {
  if (approval_id_ != NULL) approval_id_->::bnet::protocol::EntityId::Clear();
  clear_has_approval_id();
}
inline const ::bnet::protocol::EntityId& SuggestInvitationRequest::approval_id() const {
  return approval_id_ != NULL ? *approval_id_ : *default_instance_->approval_id_;
}
inline ::bnet::protocol::EntityId* SuggestInvitationRequest::mutable_approval_id() {
  set_has_approval_id();
  if (approval_id_ == NULL) approval_id_ = new ::bnet::protocol::EntityId;
  return approval_id_;
}
inline ::bnet::protocol::EntityId* SuggestInvitationRequest::release_approval_id() {
  clear_has_approval_id();
  ::bnet::protocol::EntityId* temp = approval_id_;
  approval_id_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// RevokeInvitationRequest

// optional .bnet.protocol.EntityId agent_id = 1;
inline bool RevokeInvitationRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RevokeInvitationRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RevokeInvitationRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RevokeInvitationRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bnet::protocol::EntityId::Clear();
  clear_has_agent_id();
}
inline const ::bnet::protocol::EntityId& RevokeInvitationRequest::agent_id() const {
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bnet::protocol::EntityId* RevokeInvitationRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bnet::protocol::EntityId;
  return agent_id_;
}
inline ::bnet::protocol::EntityId* RevokeInvitationRequest::release_agent_id() {
  clear_has_agent_id();
  ::bnet::protocol::EntityId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}

// optional .bnet.protocol.EntityId target_id = 2;
inline bool RevokeInvitationRequest::has_target_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RevokeInvitationRequest::set_has_target_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RevokeInvitationRequest::clear_has_target_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RevokeInvitationRequest::clear_target_id() {
  if (target_id_ != NULL) target_id_->::bnet::protocol::EntityId::Clear();
  clear_has_target_id();
}
inline const ::bnet::protocol::EntityId& RevokeInvitationRequest::target_id() const {
  return target_id_ != NULL ? *target_id_ : *default_instance_->target_id_;
}
inline ::bnet::protocol::EntityId* RevokeInvitationRequest::mutable_target_id() {
  set_has_target_id();
  if (target_id_ == NULL) target_id_ = new ::bnet::protocol::EntityId;
  return target_id_;
}
inline ::bnet::protocol::EntityId* RevokeInvitationRequest::release_target_id() {
  clear_has_target_id();
  ::bnet::protocol::EntityId* temp = target_id_;
  target_id_ = NULL;
  return temp;
}

// required fixed64 invitation_id = 3;
inline bool RevokeInvitationRequest::has_invitation_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RevokeInvitationRequest::set_has_invitation_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RevokeInvitationRequest::clear_has_invitation_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RevokeInvitationRequest::clear_invitation_id() {
  invitation_id_ = GOOGLE_ULONGLONG(0);
  clear_has_invitation_id();
}
inline ::google::protobuf::uint64 RevokeInvitationRequest::invitation_id() const {
  return invitation_id_;
}
inline void RevokeInvitationRequest::set_invitation_id(::google::protobuf::uint64 value) {
  set_has_invitation_id();
  invitation_id_ = value;
}

// required .bnet.protocol.EntityId channel_id = 4;
inline bool RevokeInvitationRequest::has_channel_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RevokeInvitationRequest::set_has_channel_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RevokeInvitationRequest::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RevokeInvitationRequest::clear_channel_id() {
  if (channel_id_ != NULL) channel_id_->::bnet::protocol::EntityId::Clear();
  clear_has_channel_id();
}
inline const ::bnet::protocol::EntityId& RevokeInvitationRequest::channel_id() const {
  return channel_id_ != NULL ? *channel_id_ : *default_instance_->channel_id_;
}
inline ::bnet::protocol::EntityId* RevokeInvitationRequest::mutable_channel_id() {
  set_has_channel_id();
  if (channel_id_ == NULL) channel_id_ = new ::bnet::protocol::EntityId;
  return channel_id_;
}
inline ::bnet::protocol::EntityId* RevokeInvitationRequest::release_channel_id() {
  clear_has_channel_id();
  ::bnet::protocol::EntityId* temp = channel_id_;
  channel_id_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// HasRoomForInvitationRequest

// required uint32 service_type = 1;
inline bool HasRoomForInvitationRequest::has_service_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HasRoomForInvitationRequest::set_has_service_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HasRoomForInvitationRequest::clear_has_service_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HasRoomForInvitationRequest::clear_service_type() {
  service_type_ = 0u;
  clear_has_service_type();
}
inline ::google::protobuf::uint32 HasRoomForInvitationRequest::service_type() const {
  return service_type_;
}
inline void HasRoomForInvitationRequest::set_service_type(::google::protobuf::uint32 value) {
  set_has_service_type();
  service_type_ = value;
}

// -------------------------------------------------------------------

// InvitationAddedNotification

// required .bnet.protocol.invitation.Invitation invitation = 1;
inline bool InvitationAddedNotification::has_invitation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InvitationAddedNotification::set_has_invitation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InvitationAddedNotification::clear_has_invitation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InvitationAddedNotification::clear_invitation() {
  if (invitation_ != NULL) invitation_->::bnet::protocol::invitation::Invitation::Clear();
  clear_has_invitation();
}
inline const ::bnet::protocol::invitation::Invitation& InvitationAddedNotification::invitation() const {
  return invitation_ != NULL ? *invitation_ : *default_instance_->invitation_;
}
inline ::bnet::protocol::invitation::Invitation* InvitationAddedNotification::mutable_invitation() {
  set_has_invitation();
  if (invitation_ == NULL) invitation_ = new ::bnet::protocol::invitation::Invitation;
  return invitation_;
}
inline ::bnet::protocol::invitation::Invitation* InvitationAddedNotification::release_invitation() {
  clear_has_invitation();
  ::bnet::protocol::invitation::Invitation* temp = invitation_;
  invitation_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// InvitationRemovedNotification

// required .bnet.protocol.invitation.Invitation invitation = 1;
inline bool InvitationRemovedNotification::has_invitation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InvitationRemovedNotification::set_has_invitation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InvitationRemovedNotification::clear_has_invitation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InvitationRemovedNotification::clear_invitation() {
  if (invitation_ != NULL) invitation_->::bnet::protocol::invitation::Invitation::Clear();
  clear_has_invitation();
}
inline const ::bnet::protocol::invitation::Invitation& InvitationRemovedNotification::invitation() const {
  return invitation_ != NULL ? *invitation_ : *default_instance_->invitation_;
}
inline ::bnet::protocol::invitation::Invitation* InvitationRemovedNotification::mutable_invitation() {
  set_has_invitation();
  if (invitation_ == NULL) invitation_ = new ::bnet::protocol::invitation::Invitation;
  return invitation_;
}
inline ::bnet::protocol::invitation::Invitation* InvitationRemovedNotification::release_invitation() {
  clear_has_invitation();
  ::bnet::protocol::invitation::Invitation* temp = invitation_;
  invitation_ = NULL;
  return temp;
}

// optional uint32 reason = 2;
inline bool InvitationRemovedNotification::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InvitationRemovedNotification::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InvitationRemovedNotification::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InvitationRemovedNotification::clear_reason() {
  reason_ = 0u;
  clear_has_reason();
}
inline ::google::protobuf::uint32 InvitationRemovedNotification::reason() const {
  return reason_;
}
inline void InvitationRemovedNotification::set_reason(::google::protobuf::uint32 value) {
  set_has_reason();
  reason_ = value;
}

// -------------------------------------------------------------------

// SuggestionAddedNotification

// required .bnet.protocol.invitation.Suggestion suggestion = 1;
inline bool SuggestionAddedNotification::has_suggestion() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SuggestionAddedNotification::set_has_suggestion() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SuggestionAddedNotification::clear_has_suggestion() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SuggestionAddedNotification::clear_suggestion() {
  if (suggestion_ != NULL) suggestion_->::bnet::protocol::invitation::Suggestion::Clear();
  clear_has_suggestion();
}
inline const ::bnet::protocol::invitation::Suggestion& SuggestionAddedNotification::suggestion() const {
  return suggestion_ != NULL ? *suggestion_ : *default_instance_->suggestion_;
}
inline ::bnet::protocol::invitation::Suggestion* SuggestionAddedNotification::mutable_suggestion() {
  set_has_suggestion();
  if (suggestion_ == NULL) suggestion_ = new ::bnet::protocol::invitation::Suggestion;
  return suggestion_;
}
inline ::bnet::protocol::invitation::Suggestion* SuggestionAddedNotification::release_suggestion() {
  clear_has_suggestion();
  ::bnet::protocol::invitation::Suggestion* temp = suggestion_;
  suggestion_ = NULL;
  return temp;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace channel_invitation
}  // namespace protocol
}  // namespace bnet

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_service_2fchannel_5finvitation_2fdefinition_2fchannel_5finvitation_2eproto__INCLUDED
