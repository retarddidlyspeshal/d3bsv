// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/authentication/authentication.proto

#ifndef PROTOBUF_service_2fauthentication_2fauthentication_2eproto__INCLUDED
#define PROTOBUF_service_2fauthentication_2fauthentication_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "lib/rpc/rpc.pb.h"
#include "lib/protocol/content_handle.pb.h"
#include "lib/protocol/entity.pb.h"
#include "lib/config/process_config.pb.h"
// @@protoc_insertion_point(includes)

namespace bnet {
namespace protocol {
namespace authentication {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_service_2fauthentication_2fauthentication_2eproto();
void protobuf_AssignDesc_service_2fauthentication_2fauthentication_2eproto();
void protobuf_ShutdownFile_service_2fauthentication_2fauthentication_2eproto();

class ModuleLoadRequest;
class ModuleLoadResponse;
class ModuleMessageRequest;
class LogonRequest;
class LogonResponse;
class AuthenticationConfig;
class AuthModuleVariant;
class AuthModuleConfig;
class AuthAgreementLocale;
class AuthAgreement;

// ===================================================================

class ModuleLoadRequest : public ::google::protobuf::Message {
 public:
  ModuleLoadRequest();
  virtual ~ModuleLoadRequest();
  
  ModuleLoadRequest(const ModuleLoadRequest& from);
  
  inline ModuleLoadRequest& operator=(const ModuleLoadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ModuleLoadRequest& default_instance();
  
  void Swap(ModuleLoadRequest* other);
  
  // implements Message ----------------------------------------------
  
  ModuleLoadRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModuleLoadRequest& from);
  void MergeFrom(const ModuleLoadRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.ContentHandle module_handle = 1;
  inline bool has_module_handle() const;
  inline void clear_module_handle();
  static const int kModuleHandleFieldNumber = 1;
  inline const ::bnet::protocol::ContentHandle& module_handle() const;
  inline ::bnet::protocol::ContentHandle* mutable_module_handle();
  inline ::bnet::protocol::ContentHandle* release_module_handle();
  
  // optional bytes message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const void* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.authentication.ModuleLoadRequest)
 private:
  inline void set_has_module_handle();
  inline void clear_has_module_handle();
  inline void set_has_message();
  inline void clear_has_message();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::ContentHandle* module_handle_;
  ::std::string* message_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fauthentication_2fauthentication_2eproto();
  friend void protobuf_AssignDesc_service_2fauthentication_2fauthentication_2eproto();
  friend void protobuf_ShutdownFile_service_2fauthentication_2fauthentication_2eproto();
  
  void InitAsDefaultInstance();
  static ModuleLoadRequest* default_instance_;
};
// -------------------------------------------------------------------

class ModuleLoadResponse : public ::google::protobuf::Message {
 public:
  ModuleLoadResponse();
  virtual ~ModuleLoadResponse();
  
  ModuleLoadResponse(const ModuleLoadResponse& from);
  
  inline ModuleLoadResponse& operator=(const ModuleLoadResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ModuleLoadResponse& default_instance();
  
  void Swap(ModuleLoadResponse* other);
  
  // implements Message ----------------------------------------------
  
  ModuleLoadResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModuleLoadResponse& from);
  void MergeFrom(const ModuleLoadResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 module_id = 2;
  inline bool has_module_id() const;
  inline void clear_module_id();
  static const int kModuleIdFieldNumber = 2;
  inline ::google::protobuf::int32 module_id() const;
  inline void set_module_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.authentication.ModuleLoadResponse)
 private:
  inline void set_has_module_id();
  inline void clear_has_module_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 module_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fauthentication_2fauthentication_2eproto();
  friend void protobuf_AssignDesc_service_2fauthentication_2fauthentication_2eproto();
  friend void protobuf_ShutdownFile_service_2fauthentication_2fauthentication_2eproto();
  
  void InitAsDefaultInstance();
  static ModuleLoadResponse* default_instance_;
};
// -------------------------------------------------------------------

class ModuleMessageRequest : public ::google::protobuf::Message {
 public:
  ModuleMessageRequest();
  virtual ~ModuleMessageRequest();
  
  ModuleMessageRequest(const ModuleMessageRequest& from);
  
  inline ModuleMessageRequest& operator=(const ModuleMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ModuleMessageRequest& default_instance();
  
  void Swap(ModuleMessageRequest* other);
  
  // implements Message ----------------------------------------------
  
  ModuleMessageRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModuleMessageRequest& from);
  void MergeFrom(const ModuleMessageRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 module_id = 1;
  inline bool has_module_id() const;
  inline void clear_module_id();
  static const int kModuleIdFieldNumber = 1;
  inline ::google::protobuf::int32 module_id() const;
  inline void set_module_id(::google::protobuf::int32 value);
  
  // optional bytes message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const void* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.authentication.ModuleMessageRequest)
 private:
  inline void set_has_module_id();
  inline void clear_has_module_id();
  inline void set_has_message();
  inline void clear_has_message();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* message_;
  ::google::protobuf::int32 module_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fauthentication_2fauthentication_2eproto();
  friend void protobuf_AssignDesc_service_2fauthentication_2fauthentication_2eproto();
  friend void protobuf_ShutdownFile_service_2fauthentication_2fauthentication_2eproto();
  
  void InitAsDefaultInstance();
  static ModuleMessageRequest* default_instance_;
};
// -------------------------------------------------------------------

class LogonRequest : public ::google::protobuf::Message {
 public:
  LogonRequest();
  virtual ~LogonRequest();
  
  LogonRequest(const LogonRequest& from);
  
  inline LogonRequest& operator=(const LogonRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LogonRequest& default_instance();
  
  void Swap(LogonRequest* other);
  
  // implements Message ----------------------------------------------
  
  LogonRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogonRequest& from);
  void MergeFrom(const LogonRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string program = 1;
  inline bool has_program() const;
  inline void clear_program();
  static const int kProgramFieldNumber = 1;
  inline const ::std::string& program() const;
  inline void set_program(const ::std::string& value);
  inline void set_program(const char* value);
  inline void set_program(const char* value, size_t size);
  inline ::std::string* mutable_program();
  inline ::std::string* release_program();
  
  // optional string platform = 2;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatformFieldNumber = 2;
  inline const ::std::string& platform() const;
  inline void set_platform(const ::std::string& value);
  inline void set_platform(const char* value);
  inline void set_platform(const char* value, size_t size);
  inline ::std::string* mutable_platform();
  inline ::std::string* release_platform();
  
  // optional string locale = 3;
  inline bool has_locale() const;
  inline void clear_locale();
  static const int kLocaleFieldNumber = 3;
  inline const ::std::string& locale() const;
  inline void set_locale(const ::std::string& value);
  inline void set_locale(const char* value);
  inline void set_locale(const char* value, size_t size);
  inline ::std::string* mutable_locale();
  inline ::std::string* release_locale();
  
  // optional string email = 4;
  inline bool has_email() const;
  inline void clear_email();
  static const int kEmailFieldNumber = 4;
  inline const ::std::string& email() const;
  inline void set_email(const ::std::string& value);
  inline void set_email(const char* value);
  inline void set_email(const char* value, size_t size);
  inline ::std::string* mutable_email();
  inline ::std::string* release_email();
  
  // optional uint64 listener_id = 5;
  inline bool has_listener_id() const;
  inline void clear_listener_id();
  static const int kListenerIdFieldNumber = 5;
  inline ::google::protobuf::uint64 listener_id() const;
  inline void set_listener_id(::google::protobuf::uint64 value);
  
  // optional string version = 6;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 6;
  inline const ::std::string& version() const;
  inline void set_version(const ::std::string& value);
  inline void set_version(const char* value);
  inline void set_version(const char* value, size_t size);
  inline ::std::string* mutable_version();
  inline ::std::string* release_version();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.authentication.LogonRequest)
 private:
  inline void set_has_program();
  inline void clear_has_program();
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_locale();
  inline void clear_has_locale();
  inline void set_has_email();
  inline void clear_has_email();
  inline void set_has_listener_id();
  inline void clear_has_listener_id();
  inline void set_has_version();
  inline void clear_has_version();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* program_;
  ::std::string* platform_;
  ::std::string* locale_;
  ::std::string* email_;
  ::google::protobuf::uint64 listener_id_;
  ::std::string* version_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fauthentication_2fauthentication_2eproto();
  friend void protobuf_AssignDesc_service_2fauthentication_2fauthentication_2eproto();
  friend void protobuf_ShutdownFile_service_2fauthentication_2fauthentication_2eproto();
  
  void InitAsDefaultInstance();
  static LogonRequest* default_instance_;
};
// -------------------------------------------------------------------

class LogonResponse : public ::google::protobuf::Message {
 public:
  LogonResponse();
  virtual ~LogonResponse();
  
  LogonResponse(const LogonResponse& from);
  
  inline LogonResponse& operator=(const LogonResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LogonResponse& default_instance();
  
  void Swap(LogonResponse* other);
  
  // implements Message ----------------------------------------------
  
  LogonResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogonResponse& from);
  void MergeFrom(const LogonResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.EntityId account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::bnet::protocol::EntityId& account() const;
  inline ::bnet::protocol::EntityId* mutable_account();
  inline ::bnet::protocol::EntityId* release_account();
  
  // required .bnet.protocol.EntityId game_account = 2;
  inline bool has_game_account() const;
  inline void clear_game_account();
  static const int kGameAccountFieldNumber = 2;
  inline const ::bnet::protocol::EntityId& game_account() const;
  inline ::bnet::protocol::EntityId* mutable_game_account();
  inline ::bnet::protocol::EntityId* release_game_account();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.authentication.LogonResponse)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_game_account();
  inline void clear_has_game_account();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::EntityId* account_;
  ::bnet::protocol::EntityId* game_account_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fauthentication_2fauthentication_2eproto();
  friend void protobuf_AssignDesc_service_2fauthentication_2fauthentication_2eproto();
  friend void protobuf_ShutdownFile_service_2fauthentication_2fauthentication_2eproto();
  
  void InitAsDefaultInstance();
  static LogonResponse* default_instance_;
};
// -------------------------------------------------------------------

class AuthenticationConfig : public ::google::protobuf::Message {
 public:
  AuthenticationConfig();
  virtual ~AuthenticationConfig();
  
  AuthenticationConfig(const AuthenticationConfig& from);
  
  inline AuthenticationConfig& operator=(const AuthenticationConfig& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthenticationConfig& default_instance();
  
  void Swap(AuthenticationConfig* other);
  
  // implements Message ----------------------------------------------
  
  AuthenticationConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthenticationConfig& from);
  void MergeFrom(const AuthenticationConfig& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .bnet.protocol.config.Resource module = 1;
  inline int module_size() const;
  inline void clear_module();
  static const int kModuleFieldNumber = 1;
  inline const ::bnet::protocol::config::Resource& module(int index) const;
  inline ::bnet::protocol::config::Resource* mutable_module(int index);
  inline ::bnet::protocol::config::Resource* add_module();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::config::Resource >&
      module() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::config::Resource >*
      mutable_module();
  
  // repeated string allow_version = 2;
  inline int allow_version_size() const;
  inline void clear_allow_version();
  static const int kAllowVersionFieldNumber = 2;
  inline const ::std::string& allow_version(int index) const;
  inline ::std::string* mutable_allow_version(int index);
  inline void set_allow_version(int index, const ::std::string& value);
  inline void set_allow_version(int index, const char* value);
  inline void set_allow_version(int index, const char* value, size_t size);
  inline ::std::string* add_allow_version();
  inline void add_allow_version(const ::std::string& value);
  inline void add_allow_version(const char* value);
  inline void add_allow_version(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& allow_version() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_allow_version();
  
  // repeated string deny_version = 3;
  inline int deny_version_size() const;
  inline void clear_deny_version();
  static const int kDenyVersionFieldNumber = 3;
  inline const ::std::string& deny_version(int index) const;
  inline ::std::string* mutable_deny_version(int index);
  inline void set_deny_version(int index, const ::std::string& value);
  inline void set_deny_version(int index, const char* value);
  inline void set_deny_version(int index, const char* value, size_t size);
  inline ::std::string* add_deny_version();
  inline void add_deny_version(const ::std::string& value);
  inline void add_deny_version(const char* value);
  inline void add_deny_version(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& deny_version() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_deny_version();
  
  // repeated .bnet.protocol.config.Resource agreement = 4;
  inline int agreement_size() const;
  inline void clear_agreement();
  static const int kAgreementFieldNumber = 4;
  inline const ::bnet::protocol::config::Resource& agreement(int index) const;
  inline ::bnet::protocol::config::Resource* mutable_agreement(int index);
  inline ::bnet::protocol::config::Resource* add_agreement();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::config::Resource >&
      agreement() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::config::Resource >*
      mutable_agreement();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.authentication.AuthenticationConfig)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::config::Resource > module_;
  ::google::protobuf::RepeatedPtrField< ::std::string> allow_version_;
  ::google::protobuf::RepeatedPtrField< ::std::string> deny_version_;
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::config::Resource > agreement_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fauthentication_2fauthentication_2eproto();
  friend void protobuf_AssignDesc_service_2fauthentication_2fauthentication_2eproto();
  friend void protobuf_ShutdownFile_service_2fauthentication_2fauthentication_2eproto();
  
  void InitAsDefaultInstance();
  static AuthenticationConfig* default_instance_;
};
// -------------------------------------------------------------------

class AuthModuleVariant : public ::google::protobuf::Message {
 public:
  AuthModuleVariant();
  virtual ~AuthModuleVariant();
  
  AuthModuleVariant(const AuthModuleVariant& from);
  
  inline AuthModuleVariant& operator=(const AuthModuleVariant& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthModuleVariant& default_instance();
  
  void Swap(AuthModuleVariant* other);
  
  // implements Message ----------------------------------------------
  
  AuthModuleVariant* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthModuleVariant& from);
  void MergeFrom(const AuthModuleVariant& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string platform = 1;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatformFieldNumber = 1;
  inline const ::std::string& platform() const;
  inline void set_platform(const ::std::string& value);
  inline void set_platform(const char* value);
  inline void set_platform(const char* value, size_t size);
  inline ::std::string* mutable_platform();
  inline ::std::string* release_platform();
  
  // required string handle = 2;
  inline bool has_handle() const;
  inline void clear_handle();
  static const int kHandleFieldNumber = 2;
  inline const ::std::string& handle() const;
  inline void set_handle(const ::std::string& value);
  inline void set_handle(const char* value);
  inline void set_handle(const char* value, size_t size);
  inline ::std::string* mutable_handle();
  inline ::std::string* release_handle();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.authentication.AuthModuleVariant)
 private:
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_handle();
  inline void clear_has_handle();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* platform_;
  ::std::string* handle_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fauthentication_2fauthentication_2eproto();
  friend void protobuf_AssignDesc_service_2fauthentication_2fauthentication_2eproto();
  friend void protobuf_ShutdownFile_service_2fauthentication_2fauthentication_2eproto();
  
  void InitAsDefaultInstance();
  static AuthModuleVariant* default_instance_;
};
// -------------------------------------------------------------------

class AuthModuleConfig : public ::google::protobuf::Message {
 public:
  AuthModuleConfig();
  virtual ~AuthModuleConfig();
  
  AuthModuleConfig(const AuthModuleConfig& from);
  
  inline AuthModuleConfig& operator=(const AuthModuleConfig& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthModuleConfig& default_instance();
  
  void Swap(AuthModuleConfig* other);
  
  // implements Message ----------------------------------------------
  
  AuthModuleConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthModuleConfig& from);
  void MergeFrom(const AuthModuleConfig& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .bnet.protocol.authentication.AuthModuleVariant variant = 1;
  inline int variant_size() const;
  inline void clear_variant();
  static const int kVariantFieldNumber = 1;
  inline const ::bnet::protocol::authentication::AuthModuleVariant& variant(int index) const;
  inline ::bnet::protocol::authentication::AuthModuleVariant* mutable_variant(int index);
  inline ::bnet::protocol::authentication::AuthModuleVariant* add_variant();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::authentication::AuthModuleVariant >&
      variant() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::authentication::AuthModuleVariant >*
      mutable_variant();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.authentication.AuthModuleConfig)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::authentication::AuthModuleVariant > variant_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fauthentication_2fauthentication_2eproto();
  friend void protobuf_AssignDesc_service_2fauthentication_2fauthentication_2eproto();
  friend void protobuf_ShutdownFile_service_2fauthentication_2fauthentication_2eproto();
  
  void InitAsDefaultInstance();
  static AuthModuleConfig* default_instance_;
};
// -------------------------------------------------------------------

class AuthAgreementLocale : public ::google::protobuf::Message {
 public:
  AuthAgreementLocale();
  virtual ~AuthAgreementLocale();
  
  AuthAgreementLocale(const AuthAgreementLocale& from);
  
  inline AuthAgreementLocale& operator=(const AuthAgreementLocale& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthAgreementLocale& default_instance();
  
  void Swap(AuthAgreementLocale* other);
  
  // implements Message ----------------------------------------------
  
  AuthAgreementLocale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthAgreementLocale& from);
  void MergeFrom(const AuthAgreementLocale& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  
  // required string handle = 2;
  inline bool has_handle() const;
  inline void clear_handle();
  static const int kHandleFieldNumber = 2;
  inline const ::std::string& handle() const;
  inline void set_handle(const ::std::string& value);
  inline void set_handle(const char* value);
  inline void set_handle(const char* value, size_t size);
  inline ::std::string* mutable_handle();
  inline ::std::string* release_handle();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.authentication.AuthAgreementLocale)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_handle();
  inline void clear_has_handle();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* id_;
  ::std::string* handle_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fauthentication_2fauthentication_2eproto();
  friend void protobuf_AssignDesc_service_2fauthentication_2fauthentication_2eproto();
  friend void protobuf_ShutdownFile_service_2fauthentication_2fauthentication_2eproto();
  
  void InitAsDefaultInstance();
  static AuthAgreementLocale* default_instance_;
};
// -------------------------------------------------------------------

class AuthAgreement : public ::google::protobuf::Message {
 public:
  AuthAgreement();
  virtual ~AuthAgreement();
  
  AuthAgreement(const AuthAgreement& from);
  
  inline AuthAgreement& operator=(const AuthAgreement& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthAgreement& default_instance();
  
  void Swap(AuthAgreement* other);
  
  // implements Message ----------------------------------------------
  
  AuthAgreement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthAgreement& from);
  void MergeFrom(const AuthAgreement& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  inline ::std::string* release_type();
  
  // required string program = 2;
  inline bool has_program() const;
  inline void clear_program();
  static const int kProgramFieldNumber = 2;
  inline const ::std::string& program() const;
  inline void set_program(const ::std::string& value);
  inline void set_program(const char* value);
  inline void set_program(const char* value, size_t size);
  inline ::std::string* mutable_program();
  inline ::std::string* release_program();
  
  // required uint32 scheme = 3;
  inline bool has_scheme() const;
  inline void clear_scheme();
  static const int kSchemeFieldNumber = 3;
  inline ::google::protobuf::uint32 scheme() const;
  inline void set_scheme(::google::protobuf::uint32 value);
  
  // repeated .bnet.protocol.authentication.AuthAgreementLocale locale = 4;
  inline int locale_size() const;
  inline void clear_locale();
  static const int kLocaleFieldNumber = 4;
  inline const ::bnet::protocol::authentication::AuthAgreementLocale& locale(int index) const;
  inline ::bnet::protocol::authentication::AuthAgreementLocale* mutable_locale(int index);
  inline ::bnet::protocol::authentication::AuthAgreementLocale* add_locale();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::authentication::AuthAgreementLocale >&
      locale() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::authentication::AuthAgreementLocale >*
      mutable_locale();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.authentication.AuthAgreement)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_program();
  inline void clear_has_program();
  inline void set_has_scheme();
  inline void clear_has_scheme();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* type_;
  ::std::string* program_;
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::authentication::AuthAgreementLocale > locale_;
  ::google::protobuf::uint32 scheme_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fauthentication_2fauthentication_2eproto();
  friend void protobuf_AssignDesc_service_2fauthentication_2fauthentication_2eproto();
  friend void protobuf_ShutdownFile_service_2fauthentication_2fauthentication_2eproto();
  
  void InitAsDefaultInstance();
  static AuthAgreement* default_instance_;
};
// ===================================================================


// ===================================================================

// ModuleLoadRequest

// required .bnet.protocol.ContentHandle module_handle = 1;
inline bool ModuleLoadRequest::has_module_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModuleLoadRequest::set_has_module_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModuleLoadRequest::clear_has_module_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModuleLoadRequest::clear_module_handle() {
  if (module_handle_ != NULL) module_handle_->::bnet::protocol::ContentHandle::Clear();
  clear_has_module_handle();
}
inline const ::bnet::protocol::ContentHandle& ModuleLoadRequest::module_handle() const {
  return module_handle_ != NULL ? *module_handle_ : *default_instance_->module_handle_;
}
inline ::bnet::protocol::ContentHandle* ModuleLoadRequest::mutable_module_handle() {
  set_has_module_handle();
  if (module_handle_ == NULL) module_handle_ = new ::bnet::protocol::ContentHandle;
  return module_handle_;
}
inline ::bnet::protocol::ContentHandle* ModuleLoadRequest::release_module_handle() {
  clear_has_module_handle();
  ::bnet::protocol::ContentHandle* temp = module_handle_;
  module_handle_ = NULL;
  return temp;
}

// optional bytes message = 2;
inline bool ModuleLoadRequest::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModuleLoadRequest::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModuleLoadRequest::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModuleLoadRequest::clear_message() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& ModuleLoadRequest::message() const {
  return *message_;
}
inline void ModuleLoadRequest::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void ModuleLoadRequest::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void ModuleLoadRequest::set_message(const void* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ModuleLoadRequest::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  return message_;
}
inline ::std::string* ModuleLoadRequest::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ModuleLoadResponse

// optional int32 module_id = 2;
inline bool ModuleLoadResponse::has_module_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModuleLoadResponse::set_has_module_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModuleLoadResponse::clear_has_module_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModuleLoadResponse::clear_module_id() {
  module_id_ = 0;
  clear_has_module_id();
}
inline ::google::protobuf::int32 ModuleLoadResponse::module_id() const {
  return module_id_;
}
inline void ModuleLoadResponse::set_module_id(::google::protobuf::int32 value) {
  set_has_module_id();
  module_id_ = value;
}

// -------------------------------------------------------------------

// ModuleMessageRequest

// required int32 module_id = 1;
inline bool ModuleMessageRequest::has_module_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModuleMessageRequest::set_has_module_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModuleMessageRequest::clear_has_module_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModuleMessageRequest::clear_module_id() {
  module_id_ = 0;
  clear_has_module_id();
}
inline ::google::protobuf::int32 ModuleMessageRequest::module_id() const {
  return module_id_;
}
inline void ModuleMessageRequest::set_module_id(::google::protobuf::int32 value) {
  set_has_module_id();
  module_id_ = value;
}

// optional bytes message = 2;
inline bool ModuleMessageRequest::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModuleMessageRequest::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModuleMessageRequest::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModuleMessageRequest::clear_message() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& ModuleMessageRequest::message() const {
  return *message_;
}
inline void ModuleMessageRequest::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void ModuleMessageRequest::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void ModuleMessageRequest::set_message(const void* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ModuleMessageRequest::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  return message_;
}
inline ::std::string* ModuleMessageRequest::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// LogonRequest

// optional string program = 1;
inline bool LogonRequest::has_program() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogonRequest::set_has_program() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogonRequest::clear_has_program() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogonRequest::clear_program() {
  if (program_ != &::google::protobuf::internal::kEmptyString) {
    program_->clear();
  }
  clear_has_program();
}
inline const ::std::string& LogonRequest::program() const {
  return *program_;
}
inline void LogonRequest::set_program(const ::std::string& value) {
  set_has_program();
  if (program_ == &::google::protobuf::internal::kEmptyString) {
    program_ = new ::std::string;
  }
  program_->assign(value);
}
inline void LogonRequest::set_program(const char* value) {
  set_has_program();
  if (program_ == &::google::protobuf::internal::kEmptyString) {
    program_ = new ::std::string;
  }
  program_->assign(value);
}
inline void LogonRequest::set_program(const char* value, size_t size) {
  set_has_program();
  if (program_ == &::google::protobuf::internal::kEmptyString) {
    program_ = new ::std::string;
  }
  program_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LogonRequest::mutable_program() {
  set_has_program();
  if (program_ == &::google::protobuf::internal::kEmptyString) {
    program_ = new ::std::string;
  }
  return program_;
}
inline ::std::string* LogonRequest::release_program() {
  clear_has_program();
  if (program_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = program_;
    program_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string platform = 2;
inline bool LogonRequest::has_platform() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogonRequest::set_has_platform() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogonRequest::clear_has_platform() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogonRequest::clear_platform() {
  if (platform_ != &::google::protobuf::internal::kEmptyString) {
    platform_->clear();
  }
  clear_has_platform();
}
inline const ::std::string& LogonRequest::platform() const {
  return *platform_;
}
inline void LogonRequest::set_platform(const ::std::string& value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
}
inline void LogonRequest::set_platform(const char* value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
}
inline void LogonRequest::set_platform(const char* value, size_t size) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LogonRequest::mutable_platform() {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  return platform_;
}
inline ::std::string* LogonRequest::release_platform() {
  clear_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = platform_;
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string locale = 3;
inline bool LogonRequest::has_locale() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LogonRequest::set_has_locale() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LogonRequest::clear_has_locale() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LogonRequest::clear_locale() {
  if (locale_ != &::google::protobuf::internal::kEmptyString) {
    locale_->clear();
  }
  clear_has_locale();
}
inline const ::std::string& LogonRequest::locale() const {
  return *locale_;
}
inline void LogonRequest::set_locale(const ::std::string& value) {
  set_has_locale();
  if (locale_ == &::google::protobuf::internal::kEmptyString) {
    locale_ = new ::std::string;
  }
  locale_->assign(value);
}
inline void LogonRequest::set_locale(const char* value) {
  set_has_locale();
  if (locale_ == &::google::protobuf::internal::kEmptyString) {
    locale_ = new ::std::string;
  }
  locale_->assign(value);
}
inline void LogonRequest::set_locale(const char* value, size_t size) {
  set_has_locale();
  if (locale_ == &::google::protobuf::internal::kEmptyString) {
    locale_ = new ::std::string;
  }
  locale_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LogonRequest::mutable_locale() {
  set_has_locale();
  if (locale_ == &::google::protobuf::internal::kEmptyString) {
    locale_ = new ::std::string;
  }
  return locale_;
}
inline ::std::string* LogonRequest::release_locale() {
  clear_has_locale();
  if (locale_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = locale_;
    locale_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string email = 4;
inline bool LogonRequest::has_email() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LogonRequest::set_has_email() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LogonRequest::clear_has_email() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LogonRequest::clear_email() {
  if (email_ != &::google::protobuf::internal::kEmptyString) {
    email_->clear();
  }
  clear_has_email();
}
inline const ::std::string& LogonRequest::email() const {
  return *email_;
}
inline void LogonRequest::set_email(const ::std::string& value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::kEmptyString) {
    email_ = new ::std::string;
  }
  email_->assign(value);
}
inline void LogonRequest::set_email(const char* value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::kEmptyString) {
    email_ = new ::std::string;
  }
  email_->assign(value);
}
inline void LogonRequest::set_email(const char* value, size_t size) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::kEmptyString) {
    email_ = new ::std::string;
  }
  email_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LogonRequest::mutable_email() {
  set_has_email();
  if (email_ == &::google::protobuf::internal::kEmptyString) {
    email_ = new ::std::string;
  }
  return email_;
}
inline ::std::string* LogonRequest::release_email() {
  clear_has_email();
  if (email_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = email_;
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint64 listener_id = 5;
inline bool LogonRequest::has_listener_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LogonRequest::set_has_listener_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LogonRequest::clear_has_listener_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LogonRequest::clear_listener_id() {
  listener_id_ = GOOGLE_ULONGLONG(0);
  clear_has_listener_id();
}
inline ::google::protobuf::uint64 LogonRequest::listener_id() const {
  return listener_id_;
}
inline void LogonRequest::set_listener_id(::google::protobuf::uint64 value) {
  set_has_listener_id();
  listener_id_ = value;
}

// optional string version = 6;
inline bool LogonRequest::has_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LogonRequest::set_has_version() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LogonRequest::clear_has_version() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LogonRequest::clear_version() {
  if (version_ != &::google::protobuf::internal::kEmptyString) {
    version_->clear();
  }
  clear_has_version();
}
inline const ::std::string& LogonRequest::version() const {
  return *version_;
}
inline void LogonRequest::set_version(const ::std::string& value) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::kEmptyString) {
    version_ = new ::std::string;
  }
  version_->assign(value);
}
inline void LogonRequest::set_version(const char* value) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::kEmptyString) {
    version_ = new ::std::string;
  }
  version_->assign(value);
}
inline void LogonRequest::set_version(const char* value, size_t size) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::kEmptyString) {
    version_ = new ::std::string;
  }
  version_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LogonRequest::mutable_version() {
  set_has_version();
  if (version_ == &::google::protobuf::internal::kEmptyString) {
    version_ = new ::std::string;
  }
  return version_;
}
inline ::std::string* LogonRequest::release_version() {
  clear_has_version();
  if (version_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = version_;
    version_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// LogonResponse

// required .bnet.protocol.EntityId account = 1;
inline bool LogonResponse::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogonResponse::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogonResponse::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogonResponse::clear_account() {
  if (account_ != NULL) account_->::bnet::protocol::EntityId::Clear();
  clear_has_account();
}
inline const ::bnet::protocol::EntityId& LogonResponse::account() const {
  return account_ != NULL ? *account_ : *default_instance_->account_;
}
inline ::bnet::protocol::EntityId* LogonResponse::mutable_account() {
  set_has_account();
  if (account_ == NULL) account_ = new ::bnet::protocol::EntityId;
  return account_;
}
inline ::bnet::protocol::EntityId* LogonResponse::release_account() {
  clear_has_account();
  ::bnet::protocol::EntityId* temp = account_;
  account_ = NULL;
  return temp;
}

// required .bnet.protocol.EntityId game_account = 2;
inline bool LogonResponse::has_game_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogonResponse::set_has_game_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogonResponse::clear_has_game_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogonResponse::clear_game_account() {
  if (game_account_ != NULL) game_account_->::bnet::protocol::EntityId::Clear();
  clear_has_game_account();
}
inline const ::bnet::protocol::EntityId& LogonResponse::game_account() const {
  return game_account_ != NULL ? *game_account_ : *default_instance_->game_account_;
}
inline ::bnet::protocol::EntityId* LogonResponse::mutable_game_account() {
  set_has_game_account();
  if (game_account_ == NULL) game_account_ = new ::bnet::protocol::EntityId;
  return game_account_;
}
inline ::bnet::protocol::EntityId* LogonResponse::release_game_account() {
  clear_has_game_account();
  ::bnet::protocol::EntityId* temp = game_account_;
  game_account_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// AuthenticationConfig

// repeated .bnet.protocol.config.Resource module = 1;
inline int AuthenticationConfig::module_size() const {
  return module_.size();
}
inline void AuthenticationConfig::clear_module() {
  module_.Clear();
}
inline const ::bnet::protocol::config::Resource& AuthenticationConfig::module(int index) const {
  return module_.Get(index);
}
inline ::bnet::protocol::config::Resource* AuthenticationConfig::mutable_module(int index) {
  return module_.Mutable(index);
}
inline ::bnet::protocol::config::Resource* AuthenticationConfig::add_module() {
  return module_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::config::Resource >&
AuthenticationConfig::module() const {
  return module_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::config::Resource >*
AuthenticationConfig::mutable_module() {
  return &module_;
}

// repeated string allow_version = 2;
inline int AuthenticationConfig::allow_version_size() const {
  return allow_version_.size();
}
inline void AuthenticationConfig::clear_allow_version() {
  allow_version_.Clear();
}
inline const ::std::string& AuthenticationConfig::allow_version(int index) const {
  return allow_version_.Get(index);
}
inline ::std::string* AuthenticationConfig::mutable_allow_version(int index) {
  return allow_version_.Mutable(index);
}
inline void AuthenticationConfig::set_allow_version(int index, const ::std::string& value) {
  allow_version_.Mutable(index)->assign(value);
}
inline void AuthenticationConfig::set_allow_version(int index, const char* value) {
  allow_version_.Mutable(index)->assign(value);
}
inline void AuthenticationConfig::set_allow_version(int index, const char* value, size_t size) {
  allow_version_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AuthenticationConfig::add_allow_version() {
  return allow_version_.Add();
}
inline void AuthenticationConfig::add_allow_version(const ::std::string& value) {
  allow_version_.Add()->assign(value);
}
inline void AuthenticationConfig::add_allow_version(const char* value) {
  allow_version_.Add()->assign(value);
}
inline void AuthenticationConfig::add_allow_version(const char* value, size_t size) {
  allow_version_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AuthenticationConfig::allow_version() const {
  return allow_version_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AuthenticationConfig::mutable_allow_version() {
  return &allow_version_;
}

// repeated string deny_version = 3;
inline int AuthenticationConfig::deny_version_size() const {
  return deny_version_.size();
}
inline void AuthenticationConfig::clear_deny_version() {
  deny_version_.Clear();
}
inline const ::std::string& AuthenticationConfig::deny_version(int index) const {
  return deny_version_.Get(index);
}
inline ::std::string* AuthenticationConfig::mutable_deny_version(int index) {
  return deny_version_.Mutable(index);
}
inline void AuthenticationConfig::set_deny_version(int index, const ::std::string& value) {
  deny_version_.Mutable(index)->assign(value);
}
inline void AuthenticationConfig::set_deny_version(int index, const char* value) {
  deny_version_.Mutable(index)->assign(value);
}
inline void AuthenticationConfig::set_deny_version(int index, const char* value, size_t size) {
  deny_version_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AuthenticationConfig::add_deny_version() {
  return deny_version_.Add();
}
inline void AuthenticationConfig::add_deny_version(const ::std::string& value) {
  deny_version_.Add()->assign(value);
}
inline void AuthenticationConfig::add_deny_version(const char* value) {
  deny_version_.Add()->assign(value);
}
inline void AuthenticationConfig::add_deny_version(const char* value, size_t size) {
  deny_version_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AuthenticationConfig::deny_version() const {
  return deny_version_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AuthenticationConfig::mutable_deny_version() {
  return &deny_version_;
}

// repeated .bnet.protocol.config.Resource agreement = 4;
inline int AuthenticationConfig::agreement_size() const {
  return agreement_.size();
}
inline void AuthenticationConfig::clear_agreement() {
  agreement_.Clear();
}
inline const ::bnet::protocol::config::Resource& AuthenticationConfig::agreement(int index) const {
  return agreement_.Get(index);
}
inline ::bnet::protocol::config::Resource* AuthenticationConfig::mutable_agreement(int index) {
  return agreement_.Mutable(index);
}
inline ::bnet::protocol::config::Resource* AuthenticationConfig::add_agreement() {
  return agreement_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::config::Resource >&
AuthenticationConfig::agreement() const {
  return agreement_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::config::Resource >*
AuthenticationConfig::mutable_agreement() {
  return &agreement_;
}

// -------------------------------------------------------------------

// AuthModuleVariant

// required string platform = 1;
inline bool AuthModuleVariant::has_platform() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthModuleVariant::set_has_platform() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthModuleVariant::clear_has_platform() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthModuleVariant::clear_platform() {
  if (platform_ != &::google::protobuf::internal::kEmptyString) {
    platform_->clear();
  }
  clear_has_platform();
}
inline const ::std::string& AuthModuleVariant::platform() const {
  return *platform_;
}
inline void AuthModuleVariant::set_platform(const ::std::string& value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
}
inline void AuthModuleVariant::set_platform(const char* value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
}
inline void AuthModuleVariant::set_platform(const char* value, size_t size) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AuthModuleVariant::mutable_platform() {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  return platform_;
}
inline ::std::string* AuthModuleVariant::release_platform() {
  clear_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = platform_;
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string handle = 2;
inline bool AuthModuleVariant::has_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthModuleVariant::set_has_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthModuleVariant::clear_has_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthModuleVariant::clear_handle() {
  if (handle_ != &::google::protobuf::internal::kEmptyString) {
    handle_->clear();
  }
  clear_has_handle();
}
inline const ::std::string& AuthModuleVariant::handle() const {
  return *handle_;
}
inline void AuthModuleVariant::set_handle(const ::std::string& value) {
  set_has_handle();
  if (handle_ == &::google::protobuf::internal::kEmptyString) {
    handle_ = new ::std::string;
  }
  handle_->assign(value);
}
inline void AuthModuleVariant::set_handle(const char* value) {
  set_has_handle();
  if (handle_ == &::google::protobuf::internal::kEmptyString) {
    handle_ = new ::std::string;
  }
  handle_->assign(value);
}
inline void AuthModuleVariant::set_handle(const char* value, size_t size) {
  set_has_handle();
  if (handle_ == &::google::protobuf::internal::kEmptyString) {
    handle_ = new ::std::string;
  }
  handle_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AuthModuleVariant::mutable_handle() {
  set_has_handle();
  if (handle_ == &::google::protobuf::internal::kEmptyString) {
    handle_ = new ::std::string;
  }
  return handle_;
}
inline ::std::string* AuthModuleVariant::release_handle() {
  clear_has_handle();
  if (handle_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = handle_;
    handle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// AuthModuleConfig

// repeated .bnet.protocol.authentication.AuthModuleVariant variant = 1;
inline int AuthModuleConfig::variant_size() const {
  return variant_.size();
}
inline void AuthModuleConfig::clear_variant() {
  variant_.Clear();
}
inline const ::bnet::protocol::authentication::AuthModuleVariant& AuthModuleConfig::variant(int index) const {
  return variant_.Get(index);
}
inline ::bnet::protocol::authentication::AuthModuleVariant* AuthModuleConfig::mutable_variant(int index) {
  return variant_.Mutable(index);
}
inline ::bnet::protocol::authentication::AuthModuleVariant* AuthModuleConfig::add_variant() {
  return variant_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::authentication::AuthModuleVariant >&
AuthModuleConfig::variant() const {
  return variant_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::authentication::AuthModuleVariant >*
AuthModuleConfig::mutable_variant() {
  return &variant_;
}

// -------------------------------------------------------------------

// AuthAgreementLocale

// required string id = 1;
inline bool AuthAgreementLocale::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthAgreementLocale::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthAgreementLocale::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthAgreementLocale::clear_id() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& AuthAgreementLocale::id() const {
  return *id_;
}
inline void AuthAgreementLocale::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void AuthAgreementLocale::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void AuthAgreementLocale::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AuthAgreementLocale::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  return id_;
}
inline ::std::string* AuthAgreementLocale::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string handle = 2;
inline bool AuthAgreementLocale::has_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthAgreementLocale::set_has_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthAgreementLocale::clear_has_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthAgreementLocale::clear_handle() {
  if (handle_ != &::google::protobuf::internal::kEmptyString) {
    handle_->clear();
  }
  clear_has_handle();
}
inline const ::std::string& AuthAgreementLocale::handle() const {
  return *handle_;
}
inline void AuthAgreementLocale::set_handle(const ::std::string& value) {
  set_has_handle();
  if (handle_ == &::google::protobuf::internal::kEmptyString) {
    handle_ = new ::std::string;
  }
  handle_->assign(value);
}
inline void AuthAgreementLocale::set_handle(const char* value) {
  set_has_handle();
  if (handle_ == &::google::protobuf::internal::kEmptyString) {
    handle_ = new ::std::string;
  }
  handle_->assign(value);
}
inline void AuthAgreementLocale::set_handle(const char* value, size_t size) {
  set_has_handle();
  if (handle_ == &::google::protobuf::internal::kEmptyString) {
    handle_ = new ::std::string;
  }
  handle_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AuthAgreementLocale::mutable_handle() {
  set_has_handle();
  if (handle_ == &::google::protobuf::internal::kEmptyString) {
    handle_ = new ::std::string;
  }
  return handle_;
}
inline ::std::string* AuthAgreementLocale::release_handle() {
  clear_has_handle();
  if (handle_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = handle_;
    handle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// AuthAgreement

// required string type = 1;
inline bool AuthAgreement::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthAgreement::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthAgreement::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthAgreement::clear_type() {
  if (type_ != &::google::protobuf::internal::kEmptyString) {
    type_->clear();
  }
  clear_has_type();
}
inline const ::std::string& AuthAgreement::type() const {
  return *type_;
}
inline void AuthAgreement::set_type(const ::std::string& value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::kEmptyString) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void AuthAgreement::set_type(const char* value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::kEmptyString) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void AuthAgreement::set_type(const char* value, size_t size) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::kEmptyString) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AuthAgreement::mutable_type() {
  set_has_type();
  if (type_ == &::google::protobuf::internal::kEmptyString) {
    type_ = new ::std::string;
  }
  return type_;
}
inline ::std::string* AuthAgreement::release_type() {
  clear_has_type();
  if (type_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = type_;
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string program = 2;
inline bool AuthAgreement::has_program() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthAgreement::set_has_program() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthAgreement::clear_has_program() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthAgreement::clear_program() {
  if (program_ != &::google::protobuf::internal::kEmptyString) {
    program_->clear();
  }
  clear_has_program();
}
inline const ::std::string& AuthAgreement::program() const {
  return *program_;
}
inline void AuthAgreement::set_program(const ::std::string& value) {
  set_has_program();
  if (program_ == &::google::protobuf::internal::kEmptyString) {
    program_ = new ::std::string;
  }
  program_->assign(value);
}
inline void AuthAgreement::set_program(const char* value) {
  set_has_program();
  if (program_ == &::google::protobuf::internal::kEmptyString) {
    program_ = new ::std::string;
  }
  program_->assign(value);
}
inline void AuthAgreement::set_program(const char* value, size_t size) {
  set_has_program();
  if (program_ == &::google::protobuf::internal::kEmptyString) {
    program_ = new ::std::string;
  }
  program_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AuthAgreement::mutable_program() {
  set_has_program();
  if (program_ == &::google::protobuf::internal::kEmptyString) {
    program_ = new ::std::string;
  }
  return program_;
}
inline ::std::string* AuthAgreement::release_program() {
  clear_has_program();
  if (program_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = program_;
    program_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 scheme = 3;
inline bool AuthAgreement::has_scheme() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AuthAgreement::set_has_scheme() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AuthAgreement::clear_has_scheme() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AuthAgreement::clear_scheme() {
  scheme_ = 0u;
  clear_has_scheme();
}
inline ::google::protobuf::uint32 AuthAgreement::scheme() const {
  return scheme_;
}
inline void AuthAgreement::set_scheme(::google::protobuf::uint32 value) {
  set_has_scheme();
  scheme_ = value;
}

// repeated .bnet.protocol.authentication.AuthAgreementLocale locale = 4;
inline int AuthAgreement::locale_size() const {
  return locale_.size();
}
inline void AuthAgreement::clear_locale() {
  locale_.Clear();
}
inline const ::bnet::protocol::authentication::AuthAgreementLocale& AuthAgreement::locale(int index) const {
  return locale_.Get(index);
}
inline ::bnet::protocol::authentication::AuthAgreementLocale* AuthAgreement::mutable_locale(int index) {
  return locale_.Mutable(index);
}
inline ::bnet::protocol::authentication::AuthAgreementLocale* AuthAgreement::add_locale() {
  return locale_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::authentication::AuthAgreementLocale >&
AuthAgreement::locale() const {
  return locale_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::authentication::AuthAgreementLocale >*
AuthAgreement::mutable_locale() {
  return &locale_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace authentication
}  // namespace protocol
}  // namespace bnet

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_service_2fauthentication_2fauthentication_2eproto__INCLUDED
