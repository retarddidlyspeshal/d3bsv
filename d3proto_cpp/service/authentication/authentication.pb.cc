// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "service/authentication/authentication.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace bnet {
namespace protocol {
namespace authentication {

namespace {

const ::google::protobuf::Descriptor* ModuleLoadRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ModuleLoadRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ModuleLoadResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ModuleLoadResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ModuleMessageRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ModuleMessageRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* LogonRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LogonRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* LogonResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LogonResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* AuthenticationConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AuthenticationConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* AuthModuleVariant_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AuthModuleVariant_reflection_ = NULL;
const ::google::protobuf::Descriptor* AuthModuleConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AuthModuleConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* AuthAgreementLocale_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AuthAgreementLocale_reflection_ = NULL;
const ::google::protobuf::Descriptor* AuthAgreement_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AuthAgreement_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_service_2fauthentication_2fauthentication_2eproto() {
  protobuf_AddDesc_service_2fauthentication_2fauthentication_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "service/authentication/authentication.proto");
  GOOGLE_CHECK(file != NULL);
  ModuleLoadRequest_descriptor_ = file->message_type(0);
  static const int ModuleLoadRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleLoadRequest, module_handle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleLoadRequest, message_),
  };
  ModuleLoadRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ModuleLoadRequest_descriptor_,
      ModuleLoadRequest::default_instance_,
      ModuleLoadRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleLoadRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleLoadRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ModuleLoadRequest));
  ModuleLoadResponse_descriptor_ = file->message_type(1);
  static const int ModuleLoadResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleLoadResponse, module_id_),
  };
  ModuleLoadResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ModuleLoadResponse_descriptor_,
      ModuleLoadResponse::default_instance_,
      ModuleLoadResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleLoadResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleLoadResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ModuleLoadResponse));
  ModuleMessageRequest_descriptor_ = file->message_type(2);
  static const int ModuleMessageRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleMessageRequest, module_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleMessageRequest, message_),
  };
  ModuleMessageRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ModuleMessageRequest_descriptor_,
      ModuleMessageRequest::default_instance_,
      ModuleMessageRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleMessageRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleMessageRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ModuleMessageRequest));
  LogonRequest_descriptor_ = file->message_type(3);
  static const int LogonRequest_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogonRequest, program_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogonRequest, platform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogonRequest, locale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogonRequest, email_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogonRequest, listener_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogonRequest, version_),
  };
  LogonRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LogonRequest_descriptor_,
      LogonRequest::default_instance_,
      LogonRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogonRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogonRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LogonRequest));
  LogonResponse_descriptor_ = file->message_type(4);
  static const int LogonResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogonResponse, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogonResponse, game_account_),
  };
  LogonResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LogonResponse_descriptor_,
      LogonResponse::default_instance_,
      LogonResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogonResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogonResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LogonResponse));
  AuthenticationConfig_descriptor_ = file->message_type(5);
  static const int AuthenticationConfig_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticationConfig, module_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticationConfig, allow_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticationConfig, deny_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticationConfig, agreement_),
  };
  AuthenticationConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AuthenticationConfig_descriptor_,
      AuthenticationConfig::default_instance_,
      AuthenticationConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticationConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticationConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AuthenticationConfig));
  AuthModuleVariant_descriptor_ = file->message_type(6);
  static const int AuthModuleVariant_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthModuleVariant, platform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthModuleVariant, handle_),
  };
  AuthModuleVariant_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AuthModuleVariant_descriptor_,
      AuthModuleVariant::default_instance_,
      AuthModuleVariant_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthModuleVariant, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthModuleVariant, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AuthModuleVariant));
  AuthModuleConfig_descriptor_ = file->message_type(7);
  static const int AuthModuleConfig_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthModuleConfig, variant_),
  };
  AuthModuleConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AuthModuleConfig_descriptor_,
      AuthModuleConfig::default_instance_,
      AuthModuleConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthModuleConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthModuleConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AuthModuleConfig));
  AuthAgreementLocale_descriptor_ = file->message_type(8);
  static const int AuthAgreementLocale_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthAgreementLocale, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthAgreementLocale, handle_),
  };
  AuthAgreementLocale_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AuthAgreementLocale_descriptor_,
      AuthAgreementLocale::default_instance_,
      AuthAgreementLocale_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthAgreementLocale, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthAgreementLocale, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AuthAgreementLocale));
  AuthAgreement_descriptor_ = file->message_type(9);
  static const int AuthAgreement_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthAgreement, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthAgreement, program_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthAgreement, scheme_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthAgreement, locale_),
  };
  AuthAgreement_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AuthAgreement_descriptor_,
      AuthAgreement::default_instance_,
      AuthAgreement_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthAgreement, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthAgreement, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AuthAgreement));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_service_2fauthentication_2fauthentication_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ModuleLoadRequest_descriptor_, &ModuleLoadRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ModuleLoadResponse_descriptor_, &ModuleLoadResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ModuleMessageRequest_descriptor_, &ModuleMessageRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LogonRequest_descriptor_, &LogonRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LogonResponse_descriptor_, &LogonResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AuthenticationConfig_descriptor_, &AuthenticationConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AuthModuleVariant_descriptor_, &AuthModuleVariant::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AuthModuleConfig_descriptor_, &AuthModuleConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AuthAgreementLocale_descriptor_, &AuthAgreementLocale::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AuthAgreement_descriptor_, &AuthAgreement::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_service_2fauthentication_2fauthentication_2eproto() {
  delete ModuleLoadRequest::default_instance_;
  delete ModuleLoadRequest_reflection_;
  delete ModuleLoadResponse::default_instance_;
  delete ModuleLoadResponse_reflection_;
  delete ModuleMessageRequest::default_instance_;
  delete ModuleMessageRequest_reflection_;
  delete LogonRequest::default_instance_;
  delete LogonRequest_reflection_;
  delete LogonResponse::default_instance_;
  delete LogonResponse_reflection_;
  delete AuthenticationConfig::default_instance_;
  delete AuthenticationConfig_reflection_;
  delete AuthModuleVariant::default_instance_;
  delete AuthModuleVariant_reflection_;
  delete AuthModuleConfig::default_instance_;
  delete AuthModuleConfig_reflection_;
  delete AuthAgreementLocale::default_instance_;
  delete AuthAgreementLocale_reflection_;
  delete AuthAgreement::default_instance_;
  delete AuthAgreement_reflection_;
}

void protobuf_AddDesc_service_2fauthentication_2fauthentication_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::bnet::protocol::protobuf_AddDesc_lib_2frpc_2frpc_2eproto();
  ::bnet::protocol::protobuf_AddDesc_lib_2fprotocol_2fcontent_5fhandle_2eproto();
  ::bnet::protocol::protobuf_AddDesc_lib_2fprotocol_2fentity_2eproto();
  ::bnet::protocol::config::protobuf_AddDesc_lib_2fconfig_2fprocess_5fconfig_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n+service/authentication/authentication."
    "proto\022\034bnet.protocol.authentication\032\021lib"
    "/rpc/rpc.proto\032!lib/protocol/content_han"
    "dle.proto\032\031lib/protocol/entity.proto\032\037li"
    "b/config/process_config.proto\"Y\n\021ModuleL"
    "oadRequest\0223\n\rmodule_handle\030\001 \002(\0132\034.bnet"
    ".protocol.ContentHandle\022\017\n\007message\030\002 \001(\014"
    "\"\'\n\022ModuleLoadResponse\022\021\n\tmodule_id\030\002 \001("
    "\005\":\n\024ModuleMessageRequest\022\021\n\tmodule_id\030\001"
    " \002(\005\022\017\n\007message\030\002 \001(\014\"v\n\014LogonRequest\022\017\n"
    "\007program\030\001 \001(\t\022\020\n\010platform\030\002 \001(\t\022\016\n\006loca"
    "le\030\003 \001(\t\022\r\n\005email\030\004 \001(\t\022\023\n\013listener_id\030\005"
    " \001(\004\022\017\n\007version\030\006 \001(\t\"h\n\rLogonResponse\022("
    "\n\007account\030\001 \002(\0132\027.bnet.protocol.EntityId"
    "\022-\n\014game_account\030\002 \002(\0132\027.bnet.protocol.E"
    "ntityId\"\246\001\n\024AuthenticationConfig\022.\n\006modu"
    "le\030\001 \003(\0132\036.bnet.protocol.config.Resource"
    "\022\025\n\rallow_version\030\002 \003(\t\022\024\n\014deny_version\030"
    "\003 \003(\t\0221\n\tagreement\030\004 \003(\0132\036.bnet.protocol"
    ".config.Resource\"5\n\021AuthModuleVariant\022\020\n"
    "\010platform\030\001 \002(\t\022\016\n\006handle\030\002 \002(\t\"T\n\020AuthM"
    "oduleConfig\022@\n\007variant\030\001 \003(\0132/.bnet.prot"
    "ocol.authentication.AuthModuleVariant\"1\n"
    "\023AuthAgreementLocale\022\n\n\002id\030\001 \002(\t\022\016\n\006hand"
    "le\030\002 \002(\t\"\201\001\n\rAuthAgreement\022\014\n\004type\030\001 \002(\t"
    "\022\017\n\007program\030\002 \002(\t\022\016\n\006scheme\030\003 \002(\r\022A\n\006loc"
    "ale\030\004 \003(\01321.bnet.protocol.authentication"
    ".AuthAgreementLocale", 1100);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "service/authentication/authentication.proto", &protobuf_RegisterTypes);
  ModuleLoadRequest::default_instance_ = new ModuleLoadRequest();
  ModuleLoadResponse::default_instance_ = new ModuleLoadResponse();
  ModuleMessageRequest::default_instance_ = new ModuleMessageRequest();
  LogonRequest::default_instance_ = new LogonRequest();
  LogonResponse::default_instance_ = new LogonResponse();
  AuthenticationConfig::default_instance_ = new AuthenticationConfig();
  AuthModuleVariant::default_instance_ = new AuthModuleVariant();
  AuthModuleConfig::default_instance_ = new AuthModuleConfig();
  AuthAgreementLocale::default_instance_ = new AuthAgreementLocale();
  AuthAgreement::default_instance_ = new AuthAgreement();
  ModuleLoadRequest::default_instance_->InitAsDefaultInstance();
  ModuleLoadResponse::default_instance_->InitAsDefaultInstance();
  ModuleMessageRequest::default_instance_->InitAsDefaultInstance();
  LogonRequest::default_instance_->InitAsDefaultInstance();
  LogonResponse::default_instance_->InitAsDefaultInstance();
  AuthenticationConfig::default_instance_->InitAsDefaultInstance();
  AuthModuleVariant::default_instance_->InitAsDefaultInstance();
  AuthModuleConfig::default_instance_->InitAsDefaultInstance();
  AuthAgreementLocale::default_instance_->InitAsDefaultInstance();
  AuthAgreement::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_service_2fauthentication_2fauthentication_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_service_2fauthentication_2fauthentication_2eproto {
  StaticDescriptorInitializer_service_2fauthentication_2fauthentication_2eproto() {
    protobuf_AddDesc_service_2fauthentication_2fauthentication_2eproto();
  }
} static_descriptor_initializer_service_2fauthentication_2fauthentication_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int ModuleLoadRequest::kModuleHandleFieldNumber;
const int ModuleLoadRequest::kMessageFieldNumber;
#endif  // !_MSC_VER

ModuleLoadRequest::ModuleLoadRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ModuleLoadRequest::InitAsDefaultInstance() {
  module_handle_ = const_cast< ::bnet::protocol::ContentHandle*>(&::bnet::protocol::ContentHandle::default_instance());
}

ModuleLoadRequest::ModuleLoadRequest(const ModuleLoadRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ModuleLoadRequest::SharedCtor() {
  _cached_size_ = 0;
  module_handle_ = NULL;
  message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ModuleLoadRequest::~ModuleLoadRequest() {
  SharedDtor();
}

void ModuleLoadRequest::SharedDtor() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (this != default_instance_) {
    delete module_handle_;
  }
}

void ModuleLoadRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModuleLoadRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ModuleLoadRequest_descriptor_;
}

const ModuleLoadRequest& ModuleLoadRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_service_2fauthentication_2fauthentication_2eproto();  return *default_instance_;
}

ModuleLoadRequest* ModuleLoadRequest::default_instance_ = NULL;

ModuleLoadRequest* ModuleLoadRequest::New() const {
  return new ModuleLoadRequest;
}

void ModuleLoadRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_module_handle()) {
      if (module_handle_ != NULL) module_handle_->::bnet::protocol::ContentHandle::Clear();
    }
    if (has_message()) {
      if (message_ != &::google::protobuf::internal::kEmptyString) {
        message_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ModuleLoadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .bnet.protocol.ContentHandle module_handle = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_module_handle()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }
      
      // optional bytes message = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ModuleLoadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .bnet.protocol.ContentHandle module_handle = 1;
  if (has_module_handle()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->module_handle(), output);
  }
  
  // optional bytes message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->message(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ModuleLoadRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .bnet.protocol.ContentHandle module_handle = 1;
  if (has_module_handle()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->module_handle(), target);
  }
  
  // optional bytes message = 2;
  if (has_message()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->message(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ModuleLoadRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .bnet.protocol.ContentHandle module_handle = 1;
    if (has_module_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->module_handle());
    }
    
    // optional bytes message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->message());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModuleLoadRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ModuleLoadRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ModuleLoadRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ModuleLoadRequest::MergeFrom(const ModuleLoadRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_module_handle()) {
      mutable_module_handle()->::bnet::protocol::ContentHandle::MergeFrom(from.module_handle());
    }
    if (from.has_message()) {
      set_message(from.message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ModuleLoadRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModuleLoadRequest::CopyFrom(const ModuleLoadRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleLoadRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_module_handle()) {
    if (!this->module_handle().IsInitialized()) return false;
  }
  return true;
}

void ModuleLoadRequest::Swap(ModuleLoadRequest* other) {
  if (other != this) {
    std::swap(module_handle_, other->module_handle_);
    std::swap(message_, other->message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ModuleLoadRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ModuleLoadRequest_descriptor_;
  metadata.reflection = ModuleLoadRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ModuleLoadResponse::kModuleIdFieldNumber;
#endif  // !_MSC_VER

ModuleLoadResponse::ModuleLoadResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ModuleLoadResponse::InitAsDefaultInstance() {
}

ModuleLoadResponse::ModuleLoadResponse(const ModuleLoadResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ModuleLoadResponse::SharedCtor() {
  _cached_size_ = 0;
  module_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ModuleLoadResponse::~ModuleLoadResponse() {
  SharedDtor();
}

void ModuleLoadResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ModuleLoadResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModuleLoadResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ModuleLoadResponse_descriptor_;
}

const ModuleLoadResponse& ModuleLoadResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_service_2fauthentication_2fauthentication_2eproto();  return *default_instance_;
}

ModuleLoadResponse* ModuleLoadResponse::default_instance_ = NULL;

ModuleLoadResponse* ModuleLoadResponse::New() const {
  return new ModuleLoadResponse;
}

void ModuleLoadResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    module_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ModuleLoadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 module_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &module_id_)));
          set_has_module_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ModuleLoadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 module_id = 2;
  if (has_module_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->module_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ModuleLoadResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 module_id = 2;
  if (has_module_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->module_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ModuleLoadResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 module_id = 2;
    if (has_module_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->module_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModuleLoadResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ModuleLoadResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ModuleLoadResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ModuleLoadResponse::MergeFrom(const ModuleLoadResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_module_id()) {
      set_module_id(from.module_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ModuleLoadResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModuleLoadResponse::CopyFrom(const ModuleLoadResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleLoadResponse::IsInitialized() const {
  
  return true;
}

void ModuleLoadResponse::Swap(ModuleLoadResponse* other) {
  if (other != this) {
    std::swap(module_id_, other->module_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ModuleLoadResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ModuleLoadResponse_descriptor_;
  metadata.reflection = ModuleLoadResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ModuleMessageRequest::kModuleIdFieldNumber;
const int ModuleMessageRequest::kMessageFieldNumber;
#endif  // !_MSC_VER

ModuleMessageRequest::ModuleMessageRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ModuleMessageRequest::InitAsDefaultInstance() {
}

ModuleMessageRequest::ModuleMessageRequest(const ModuleMessageRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ModuleMessageRequest::SharedCtor() {
  _cached_size_ = 0;
  module_id_ = 0;
  message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ModuleMessageRequest::~ModuleMessageRequest() {
  SharedDtor();
}

void ModuleMessageRequest::SharedDtor() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (this != default_instance_) {
  }
}

void ModuleMessageRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModuleMessageRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ModuleMessageRequest_descriptor_;
}

const ModuleMessageRequest& ModuleMessageRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_service_2fauthentication_2fauthentication_2eproto();  return *default_instance_;
}

ModuleMessageRequest* ModuleMessageRequest::default_instance_ = NULL;

ModuleMessageRequest* ModuleMessageRequest::New() const {
  return new ModuleMessageRequest;
}

void ModuleMessageRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    module_id_ = 0;
    if (has_message()) {
      if (message_ != &::google::protobuf::internal::kEmptyString) {
        message_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ModuleMessageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 module_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &module_id_)));
          set_has_module_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }
      
      // optional bytes message = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ModuleMessageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 module_id = 1;
  if (has_module_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->module_id(), output);
  }
  
  // optional bytes message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->message(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ModuleMessageRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 module_id = 1;
  if (has_module_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->module_id(), target);
  }
  
  // optional bytes message = 2;
  if (has_message()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->message(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ModuleMessageRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 module_id = 1;
    if (has_module_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->module_id());
    }
    
    // optional bytes message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->message());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModuleMessageRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ModuleMessageRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ModuleMessageRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ModuleMessageRequest::MergeFrom(const ModuleMessageRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_module_id()) {
      set_module_id(from.module_id());
    }
    if (from.has_message()) {
      set_message(from.message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ModuleMessageRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModuleMessageRequest::CopyFrom(const ModuleMessageRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleMessageRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void ModuleMessageRequest::Swap(ModuleMessageRequest* other) {
  if (other != this) {
    std::swap(module_id_, other->module_id_);
    std::swap(message_, other->message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ModuleMessageRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ModuleMessageRequest_descriptor_;
  metadata.reflection = ModuleMessageRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LogonRequest::kProgramFieldNumber;
const int LogonRequest::kPlatformFieldNumber;
const int LogonRequest::kLocaleFieldNumber;
const int LogonRequest::kEmailFieldNumber;
const int LogonRequest::kListenerIdFieldNumber;
const int LogonRequest::kVersionFieldNumber;
#endif  // !_MSC_VER

LogonRequest::LogonRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LogonRequest::InitAsDefaultInstance() {
}

LogonRequest::LogonRequest(const LogonRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LogonRequest::SharedCtor() {
  _cached_size_ = 0;
  program_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  locale_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  email_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  listener_id_ = GOOGLE_ULONGLONG(0);
  version_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LogonRequest::~LogonRequest() {
  SharedDtor();
}

void LogonRequest::SharedDtor() {
  if (program_ != &::google::protobuf::internal::kEmptyString) {
    delete program_;
  }
  if (platform_ != &::google::protobuf::internal::kEmptyString) {
    delete platform_;
  }
  if (locale_ != &::google::protobuf::internal::kEmptyString) {
    delete locale_;
  }
  if (email_ != &::google::protobuf::internal::kEmptyString) {
    delete email_;
  }
  if (version_ != &::google::protobuf::internal::kEmptyString) {
    delete version_;
  }
  if (this != default_instance_) {
  }
}

void LogonRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogonRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LogonRequest_descriptor_;
}

const LogonRequest& LogonRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_service_2fauthentication_2fauthentication_2eproto();  return *default_instance_;
}

LogonRequest* LogonRequest::default_instance_ = NULL;

LogonRequest* LogonRequest::New() const {
  return new LogonRequest;
}

void LogonRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_program()) {
      if (program_ != &::google::protobuf::internal::kEmptyString) {
        program_->clear();
      }
    }
    if (has_platform()) {
      if (platform_ != &::google::protobuf::internal::kEmptyString) {
        platform_->clear();
      }
    }
    if (has_locale()) {
      if (locale_ != &::google::protobuf::internal::kEmptyString) {
        locale_->clear();
      }
    }
    if (has_email()) {
      if (email_ != &::google::protobuf::internal::kEmptyString) {
        email_->clear();
      }
    }
    listener_id_ = GOOGLE_ULONGLONG(0);
    if (has_version()) {
      if (version_ != &::google::protobuf::internal::kEmptyString) {
        version_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LogonRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string program = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_program()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->program().data(), this->program().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_platform;
        break;
      }
      
      // optional string platform = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_platform:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platform()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->platform().data(), this->platform().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_locale;
        break;
      }
      
      // optional string locale = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_locale:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_locale()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->locale().data(), this->locale().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_email;
        break;
      }
      
      // optional string email = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_email:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_listener_id;
        break;
      }
      
      // optional uint64 listener_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_listener_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &listener_id_)));
          set_has_listener_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_version;
        break;
      }
      
      // optional string version = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LogonRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string program = 1;
  if (has_program()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->program().data(), this->program().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->program(), output);
  }
  
  // optional string platform = 2;
  if (has_platform()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->platform().data(), this->platform().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->platform(), output);
  }
  
  // optional string locale = 3;
  if (has_locale()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->locale().data(), this->locale().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->locale(), output);
  }
  
  // optional string email = 4;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->email(), output);
  }
  
  // optional uint64 listener_id = 5;
  if (has_listener_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->listener_id(), output);
  }
  
  // optional string version = 6;
  if (has_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->version(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LogonRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string program = 1;
  if (has_program()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->program().data(), this->program().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->program(), target);
  }
  
  // optional string platform = 2;
  if (has_platform()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->platform().data(), this->platform().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->platform(), target);
  }
  
  // optional string locale = 3;
  if (has_locale()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->locale().data(), this->locale().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->locale(), target);
  }
  
  // optional string email = 4;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->email(), target);
  }
  
  // optional uint64 listener_id = 5;
  if (has_listener_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->listener_id(), target);
  }
  
  // optional string version = 6;
  if (has_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->version(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LogonRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string program = 1;
    if (has_program()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->program());
    }
    
    // optional string platform = 2;
    if (has_platform()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->platform());
    }
    
    // optional string locale = 3;
    if (has_locale()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->locale());
    }
    
    // optional string email = 4;
    if (has_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email());
    }
    
    // optional uint64 listener_id = 5;
    if (has_listener_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->listener_id());
    }
    
    // optional string version = 6;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->version());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogonRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LogonRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LogonRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LogonRequest::MergeFrom(const LogonRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_program()) {
      set_program(from.program());
    }
    if (from.has_platform()) {
      set_platform(from.platform());
    }
    if (from.has_locale()) {
      set_locale(from.locale());
    }
    if (from.has_email()) {
      set_email(from.email());
    }
    if (from.has_listener_id()) {
      set_listener_id(from.listener_id());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LogonRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogonRequest::CopyFrom(const LogonRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogonRequest::IsInitialized() const {
  
  return true;
}

void LogonRequest::Swap(LogonRequest* other) {
  if (other != this) {
    std::swap(program_, other->program_);
    std::swap(platform_, other->platform_);
    std::swap(locale_, other->locale_);
    std::swap(email_, other->email_);
    std::swap(listener_id_, other->listener_id_);
    std::swap(version_, other->version_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LogonRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LogonRequest_descriptor_;
  metadata.reflection = LogonRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LogonResponse::kAccountFieldNumber;
const int LogonResponse::kGameAccountFieldNumber;
#endif  // !_MSC_VER

LogonResponse::LogonResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LogonResponse::InitAsDefaultInstance() {
  account_ = const_cast< ::bnet::protocol::EntityId*>(&::bnet::protocol::EntityId::default_instance());
  game_account_ = const_cast< ::bnet::protocol::EntityId*>(&::bnet::protocol::EntityId::default_instance());
}

LogonResponse::LogonResponse(const LogonResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LogonResponse::SharedCtor() {
  _cached_size_ = 0;
  account_ = NULL;
  game_account_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LogonResponse::~LogonResponse() {
  SharedDtor();
}

void LogonResponse::SharedDtor() {
  if (this != default_instance_) {
    delete account_;
    delete game_account_;
  }
}

void LogonResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogonResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LogonResponse_descriptor_;
}

const LogonResponse& LogonResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_service_2fauthentication_2fauthentication_2eproto();  return *default_instance_;
}

LogonResponse* LogonResponse::default_instance_ = NULL;

LogonResponse* LogonResponse::New() const {
  return new LogonResponse;
}

void LogonResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_account()) {
      if (account_ != NULL) account_->::bnet::protocol::EntityId::Clear();
    }
    if (has_game_account()) {
      if (game_account_ != NULL) game_account_->::bnet::protocol::EntityId::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LogonResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .bnet.protocol.EntityId account = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_account()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_game_account;
        break;
      }
      
      // required .bnet.protocol.EntityId game_account = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_game_account:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_game_account()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LogonResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .bnet.protocol.EntityId account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->account(), output);
  }
  
  // required .bnet.protocol.EntityId game_account = 2;
  if (has_game_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->game_account(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LogonResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .bnet.protocol.EntityId account = 1;
  if (has_account()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->account(), target);
  }
  
  // required .bnet.protocol.EntityId game_account = 2;
  if (has_game_account()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->game_account(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LogonResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .bnet.protocol.EntityId account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->account());
    }
    
    // required .bnet.protocol.EntityId game_account = 2;
    if (has_game_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->game_account());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogonResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LogonResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LogonResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LogonResponse::MergeFrom(const LogonResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account()) {
      mutable_account()->::bnet::protocol::EntityId::MergeFrom(from.account());
    }
    if (from.has_game_account()) {
      mutable_game_account()->::bnet::protocol::EntityId::MergeFrom(from.game_account());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LogonResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogonResponse::CopyFrom(const LogonResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogonResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_account()) {
    if (!this->account().IsInitialized()) return false;
  }
  if (has_game_account()) {
    if (!this->game_account().IsInitialized()) return false;
  }
  return true;
}

void LogonResponse::Swap(LogonResponse* other) {
  if (other != this) {
    std::swap(account_, other->account_);
    std::swap(game_account_, other->game_account_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LogonResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LogonResponse_descriptor_;
  metadata.reflection = LogonResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AuthenticationConfig::kModuleFieldNumber;
const int AuthenticationConfig::kAllowVersionFieldNumber;
const int AuthenticationConfig::kDenyVersionFieldNumber;
const int AuthenticationConfig::kAgreementFieldNumber;
#endif  // !_MSC_VER

AuthenticationConfig::AuthenticationConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AuthenticationConfig::InitAsDefaultInstance() {
}

AuthenticationConfig::AuthenticationConfig(const AuthenticationConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AuthenticationConfig::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AuthenticationConfig::~AuthenticationConfig() {
  SharedDtor();
}

void AuthenticationConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AuthenticationConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthenticationConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AuthenticationConfig_descriptor_;
}

const AuthenticationConfig& AuthenticationConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_service_2fauthentication_2fauthentication_2eproto();  return *default_instance_;
}

AuthenticationConfig* AuthenticationConfig::default_instance_ = NULL;

AuthenticationConfig* AuthenticationConfig::New() const {
  return new AuthenticationConfig;
}

void AuthenticationConfig::Clear() {
  module_.Clear();
  allow_version_.Clear();
  deny_version_.Clear();
  agreement_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AuthenticationConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .bnet.protocol.config.Resource module = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_module:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_module()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_module;
        if (input->ExpectTag(18)) goto parse_allow_version;
        break;
      }
      
      // repeated string allow_version = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_allow_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_allow_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->allow_version(0).data(), this->allow_version(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_allow_version;
        if (input->ExpectTag(26)) goto parse_deny_version;
        break;
      }
      
      // repeated string deny_version = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_deny_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_deny_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->deny_version(0).data(), this->deny_version(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_deny_version;
        if (input->ExpectTag(34)) goto parse_agreement;
        break;
      }
      
      // repeated .bnet.protocol.config.Resource agreement = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_agreement:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_agreement()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_agreement;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AuthenticationConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .bnet.protocol.config.Resource module = 1;
  for (int i = 0; i < this->module_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->module(i), output);
  }
  
  // repeated string allow_version = 2;
  for (int i = 0; i < this->allow_version_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->allow_version(i).data(), this->allow_version(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->allow_version(i), output);
  }
  
  // repeated string deny_version = 3;
  for (int i = 0; i < this->deny_version_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->deny_version(i).data(), this->deny_version(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->deny_version(i), output);
  }
  
  // repeated .bnet.protocol.config.Resource agreement = 4;
  for (int i = 0; i < this->agreement_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->agreement(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AuthenticationConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .bnet.protocol.config.Resource module = 1;
  for (int i = 0; i < this->module_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->module(i), target);
  }
  
  // repeated string allow_version = 2;
  for (int i = 0; i < this->allow_version_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->allow_version(i).data(), this->allow_version(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->allow_version(i), target);
  }
  
  // repeated string deny_version = 3;
  for (int i = 0; i < this->deny_version_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->deny_version(i).data(), this->deny_version(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->deny_version(i), target);
  }
  
  // repeated .bnet.protocol.config.Resource agreement = 4;
  for (int i = 0; i < this->agreement_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->agreement(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AuthenticationConfig::ByteSize() const {
  int total_size = 0;
  
  // repeated .bnet.protocol.config.Resource module = 1;
  total_size += 1 * this->module_size();
  for (int i = 0; i < this->module_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->module(i));
  }
  
  // repeated string allow_version = 2;
  total_size += 1 * this->allow_version_size();
  for (int i = 0; i < this->allow_version_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->allow_version(i));
  }
  
  // repeated string deny_version = 3;
  total_size += 1 * this->deny_version_size();
  for (int i = 0; i < this->deny_version_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->deny_version(i));
  }
  
  // repeated .bnet.protocol.config.Resource agreement = 4;
  total_size += 1 * this->agreement_size();
  for (int i = 0; i < this->agreement_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->agreement(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthenticationConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AuthenticationConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AuthenticationConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AuthenticationConfig::MergeFrom(const AuthenticationConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  module_.MergeFrom(from.module_);
  allow_version_.MergeFrom(from.allow_version_);
  deny_version_.MergeFrom(from.deny_version_);
  agreement_.MergeFrom(from.agreement_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AuthenticationConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticationConfig::CopyFrom(const AuthenticationConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticationConfig::IsInitialized() const {
  
  for (int i = 0; i < module_size(); i++) {
    if (!this->module(i).IsInitialized()) return false;
  }
  for (int i = 0; i < agreement_size(); i++) {
    if (!this->agreement(i).IsInitialized()) return false;
  }
  return true;
}

void AuthenticationConfig::Swap(AuthenticationConfig* other) {
  if (other != this) {
    module_.Swap(&other->module_);
    allow_version_.Swap(&other->allow_version_);
    deny_version_.Swap(&other->deny_version_);
    agreement_.Swap(&other->agreement_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AuthenticationConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AuthenticationConfig_descriptor_;
  metadata.reflection = AuthenticationConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AuthModuleVariant::kPlatformFieldNumber;
const int AuthModuleVariant::kHandleFieldNumber;
#endif  // !_MSC_VER

AuthModuleVariant::AuthModuleVariant()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AuthModuleVariant::InitAsDefaultInstance() {
}

AuthModuleVariant::AuthModuleVariant(const AuthModuleVariant& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AuthModuleVariant::SharedCtor() {
  _cached_size_ = 0;
  platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  handle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AuthModuleVariant::~AuthModuleVariant() {
  SharedDtor();
}

void AuthModuleVariant::SharedDtor() {
  if (platform_ != &::google::protobuf::internal::kEmptyString) {
    delete platform_;
  }
  if (handle_ != &::google::protobuf::internal::kEmptyString) {
    delete handle_;
  }
  if (this != default_instance_) {
  }
}

void AuthModuleVariant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthModuleVariant::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AuthModuleVariant_descriptor_;
}

const AuthModuleVariant& AuthModuleVariant::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_service_2fauthentication_2fauthentication_2eproto();  return *default_instance_;
}

AuthModuleVariant* AuthModuleVariant::default_instance_ = NULL;

AuthModuleVariant* AuthModuleVariant::New() const {
  return new AuthModuleVariant;
}

void AuthModuleVariant::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_platform()) {
      if (platform_ != &::google::protobuf::internal::kEmptyString) {
        platform_->clear();
      }
    }
    if (has_handle()) {
      if (handle_ != &::google::protobuf::internal::kEmptyString) {
        handle_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AuthModuleVariant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string platform = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platform()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->platform().data(), this->platform().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_handle;
        break;
      }
      
      // required string handle = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_handle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_handle()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->handle().data(), this->handle().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AuthModuleVariant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string platform = 1;
  if (has_platform()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->platform().data(), this->platform().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->platform(), output);
  }
  
  // required string handle = 2;
  if (has_handle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->handle().data(), this->handle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->handle(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AuthModuleVariant::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string platform = 1;
  if (has_platform()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->platform().data(), this->platform().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->platform(), target);
  }
  
  // required string handle = 2;
  if (has_handle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->handle().data(), this->handle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->handle(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AuthModuleVariant::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string platform = 1;
    if (has_platform()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->platform());
    }
    
    // required string handle = 2;
    if (has_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->handle());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthModuleVariant::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AuthModuleVariant* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AuthModuleVariant*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AuthModuleVariant::MergeFrom(const AuthModuleVariant& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_platform()) {
      set_platform(from.platform());
    }
    if (from.has_handle()) {
      set_handle(from.handle());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AuthModuleVariant::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthModuleVariant::CopyFrom(const AuthModuleVariant& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthModuleVariant::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void AuthModuleVariant::Swap(AuthModuleVariant* other) {
  if (other != this) {
    std::swap(platform_, other->platform_);
    std::swap(handle_, other->handle_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AuthModuleVariant::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AuthModuleVariant_descriptor_;
  metadata.reflection = AuthModuleVariant_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AuthModuleConfig::kVariantFieldNumber;
#endif  // !_MSC_VER

AuthModuleConfig::AuthModuleConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AuthModuleConfig::InitAsDefaultInstance() {
}

AuthModuleConfig::AuthModuleConfig(const AuthModuleConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AuthModuleConfig::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AuthModuleConfig::~AuthModuleConfig() {
  SharedDtor();
}

void AuthModuleConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AuthModuleConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthModuleConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AuthModuleConfig_descriptor_;
}

const AuthModuleConfig& AuthModuleConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_service_2fauthentication_2fauthentication_2eproto();  return *default_instance_;
}

AuthModuleConfig* AuthModuleConfig::default_instance_ = NULL;

AuthModuleConfig* AuthModuleConfig::New() const {
  return new AuthModuleConfig;
}

void AuthModuleConfig::Clear() {
  variant_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AuthModuleConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .bnet.protocol.authentication.AuthModuleVariant variant = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_variant:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_variant()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_variant;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AuthModuleConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .bnet.protocol.authentication.AuthModuleVariant variant = 1;
  for (int i = 0; i < this->variant_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->variant(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AuthModuleConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .bnet.protocol.authentication.AuthModuleVariant variant = 1;
  for (int i = 0; i < this->variant_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->variant(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AuthModuleConfig::ByteSize() const {
  int total_size = 0;
  
  // repeated .bnet.protocol.authentication.AuthModuleVariant variant = 1;
  total_size += 1 * this->variant_size();
  for (int i = 0; i < this->variant_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->variant(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthModuleConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AuthModuleConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AuthModuleConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AuthModuleConfig::MergeFrom(const AuthModuleConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  variant_.MergeFrom(from.variant_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AuthModuleConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthModuleConfig::CopyFrom(const AuthModuleConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthModuleConfig::IsInitialized() const {
  
  for (int i = 0; i < variant_size(); i++) {
    if (!this->variant(i).IsInitialized()) return false;
  }
  return true;
}

void AuthModuleConfig::Swap(AuthModuleConfig* other) {
  if (other != this) {
    variant_.Swap(&other->variant_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AuthModuleConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AuthModuleConfig_descriptor_;
  metadata.reflection = AuthModuleConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AuthAgreementLocale::kIdFieldNumber;
const int AuthAgreementLocale::kHandleFieldNumber;
#endif  // !_MSC_VER

AuthAgreementLocale::AuthAgreementLocale()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AuthAgreementLocale::InitAsDefaultInstance() {
}

AuthAgreementLocale::AuthAgreementLocale(const AuthAgreementLocale& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AuthAgreementLocale::SharedCtor() {
  _cached_size_ = 0;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  handle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AuthAgreementLocale::~AuthAgreementLocale() {
  SharedDtor();
}

void AuthAgreementLocale::SharedDtor() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (handle_ != &::google::protobuf::internal::kEmptyString) {
    delete handle_;
  }
  if (this != default_instance_) {
  }
}

void AuthAgreementLocale::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthAgreementLocale::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AuthAgreementLocale_descriptor_;
}

const AuthAgreementLocale& AuthAgreementLocale::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_service_2fauthentication_2fauthentication_2eproto();  return *default_instance_;
}

AuthAgreementLocale* AuthAgreementLocale::default_instance_ = NULL;

AuthAgreementLocale* AuthAgreementLocale::New() const {
  return new AuthAgreementLocale;
}

void AuthAgreementLocale::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
    if (has_handle()) {
      if (handle_ != &::google::protobuf::internal::kEmptyString) {
        handle_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AuthAgreementLocale::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_handle;
        break;
      }
      
      // required string handle = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_handle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_handle()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->handle().data(), this->handle().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AuthAgreementLocale::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->id(), output);
  }
  
  // required string handle = 2;
  if (has_handle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->handle().data(), this->handle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->handle(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AuthAgreementLocale::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }
  
  // required string handle = 2;
  if (has_handle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->handle().data(), this->handle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->handle(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AuthAgreementLocale::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }
    
    // required string handle = 2;
    if (has_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->handle());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthAgreementLocale::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AuthAgreementLocale* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AuthAgreementLocale*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AuthAgreementLocale::MergeFrom(const AuthAgreementLocale& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_handle()) {
      set_handle(from.handle());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AuthAgreementLocale::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthAgreementLocale::CopyFrom(const AuthAgreementLocale& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthAgreementLocale::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void AuthAgreementLocale::Swap(AuthAgreementLocale* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(handle_, other->handle_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AuthAgreementLocale::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AuthAgreementLocale_descriptor_;
  metadata.reflection = AuthAgreementLocale_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AuthAgreement::kTypeFieldNumber;
const int AuthAgreement::kProgramFieldNumber;
const int AuthAgreement::kSchemeFieldNumber;
const int AuthAgreement::kLocaleFieldNumber;
#endif  // !_MSC_VER

AuthAgreement::AuthAgreement()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AuthAgreement::InitAsDefaultInstance() {
}

AuthAgreement::AuthAgreement(const AuthAgreement& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AuthAgreement::SharedCtor() {
  _cached_size_ = 0;
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  program_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  scheme_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AuthAgreement::~AuthAgreement() {
  SharedDtor();
}

void AuthAgreement::SharedDtor() {
  if (type_ != &::google::protobuf::internal::kEmptyString) {
    delete type_;
  }
  if (program_ != &::google::protobuf::internal::kEmptyString) {
    delete program_;
  }
  if (this != default_instance_) {
  }
}

void AuthAgreement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthAgreement::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AuthAgreement_descriptor_;
}

const AuthAgreement& AuthAgreement::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_service_2fauthentication_2fauthentication_2eproto();  return *default_instance_;
}

AuthAgreement* AuthAgreement::default_instance_ = NULL;

AuthAgreement* AuthAgreement::New() const {
  return new AuthAgreement;
}

void AuthAgreement::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_type()) {
      if (type_ != &::google::protobuf::internal::kEmptyString) {
        type_->clear();
      }
    }
    if (has_program()) {
      if (program_ != &::google::protobuf::internal::kEmptyString) {
        program_->clear();
      }
    }
    scheme_ = 0u;
  }
  locale_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AuthAgreement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_program;
        break;
      }
      
      // required string program = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_program:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_program()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->program().data(), this->program().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_scheme;
        break;
      }
      
      // required uint32 scheme = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scheme:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scheme_)));
          set_has_scheme();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_locale;
        break;
      }
      
      // repeated .bnet.protocol.authentication.AuthAgreementLocale locale = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_locale:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_locale()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_locale;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AuthAgreement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->type(), output);
  }
  
  // required string program = 2;
  if (has_program()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->program().data(), this->program().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->program(), output);
  }
  
  // required uint32 scheme = 3;
  if (has_scheme()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->scheme(), output);
  }
  
  // repeated .bnet.protocol.authentication.AuthAgreementLocale locale = 4;
  for (int i = 0; i < this->locale_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->locale(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AuthAgreement::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }
  
  // required string program = 2;
  if (has_program()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->program().data(), this->program().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->program(), target);
  }
  
  // required uint32 scheme = 3;
  if (has_scheme()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->scheme(), target);
  }
  
  // repeated .bnet.protocol.authentication.AuthAgreementLocale locale = 4;
  for (int i = 0; i < this->locale_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->locale(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AuthAgreement::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }
    
    // required string program = 2;
    if (has_program()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->program());
    }
    
    // required uint32 scheme = 3;
    if (has_scheme()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->scheme());
    }
    
  }
  // repeated .bnet.protocol.authentication.AuthAgreementLocale locale = 4;
  total_size += 1 * this->locale_size();
  for (int i = 0; i < this->locale_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->locale(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthAgreement::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AuthAgreement* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AuthAgreement*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AuthAgreement::MergeFrom(const AuthAgreement& from) {
  GOOGLE_CHECK_NE(&from, this);
  locale_.MergeFrom(from.locale_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_program()) {
      set_program(from.program());
    }
    if (from.has_scheme()) {
      set_scheme(from.scheme());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AuthAgreement::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthAgreement::CopyFrom(const AuthAgreement& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthAgreement::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  for (int i = 0; i < locale_size(); i++) {
    if (!this->locale(i).IsInitialized()) return false;
  }
  return true;
}

void AuthAgreement::Swap(AuthAgreement* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(program_, other->program_);
    std::swap(scheme_, other->scheme_);
    locale_.Swap(&other->locale_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AuthAgreement::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AuthAgreement_descriptor_;
  metadata.reflection = AuthAgreement_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace authentication
}  // namespace protocol
}  // namespace bnet

// @@protoc_insertion_point(global_scope)
