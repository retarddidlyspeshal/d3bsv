// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/presence/presence.proto

#ifndef PROTOBUF_service_2fpresence_2fpresence_2eproto__INCLUDED
#define PROTOBUF_service_2fpresence_2fpresence_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "lib/protocol/attribute.pb.h"
#include "lib/protocol/entity.pb.h"
#include "lib/rpc/rpc.pb.h"
#include "service/presence/presence_types.pb.h"
// @@protoc_insertion_point(includes)

namespace bnet {
namespace protocol {
namespace presence {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_service_2fpresence_2fpresence_2eproto();
void protobuf_AssignDesc_service_2fpresence_2fpresence_2eproto();
void protobuf_ShutdownFile_service_2fpresence_2fpresence_2eproto();

class SubscribeRequest;
class UnsubscribeRequest;
class UpdateRequest;
class QueryRequest;
class QueryResponse;

// ===================================================================

class SubscribeRequest : public ::google::protobuf::Message {
 public:
  SubscribeRequest();
  virtual ~SubscribeRequest();
  
  SubscribeRequest(const SubscribeRequest& from);
  
  inline SubscribeRequest& operator=(const SubscribeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubscribeRequest& default_instance();
  
  void Swap(SubscribeRequest* other);
  
  // implements Message ----------------------------------------------
  
  SubscribeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubscribeRequest& from);
  void MergeFrom(const SubscribeRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .bnet.protocol.EntityId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bnet::protocol::EntityId& agent_id() const;
  inline ::bnet::protocol::EntityId* mutable_agent_id();
  inline ::bnet::protocol::EntityId* release_agent_id();
  
  // required .bnet.protocol.EntityId entity_id = 2;
  inline bool has_entity_id() const;
  inline void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  inline const ::bnet::protocol::EntityId& entity_id() const;
  inline ::bnet::protocol::EntityId* mutable_entity_id();
  inline ::bnet::protocol::EntityId* release_entity_id();
  
  // required uint64 object_id = 3;
  inline bool has_object_id() const;
  inline void clear_object_id();
  static const int kObjectIdFieldNumber = 3;
  inline ::google::protobuf::uint64 object_id() const;
  inline void set_object_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.presence.SubscribeRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_entity_id();
  inline void clear_has_entity_id();
  inline void set_has_object_id();
  inline void clear_has_object_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::EntityId* agent_id_;
  ::bnet::protocol::EntityId* entity_id_;
  ::google::protobuf::uint64 object_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fpresence_2fpresence_2eproto();
  friend void protobuf_AssignDesc_service_2fpresence_2fpresence_2eproto();
  friend void protobuf_ShutdownFile_service_2fpresence_2fpresence_2eproto();
  
  void InitAsDefaultInstance();
  static SubscribeRequest* default_instance_;
};
// -------------------------------------------------------------------

class UnsubscribeRequest : public ::google::protobuf::Message {
 public:
  UnsubscribeRequest();
  virtual ~UnsubscribeRequest();
  
  UnsubscribeRequest(const UnsubscribeRequest& from);
  
  inline UnsubscribeRequest& operator=(const UnsubscribeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnsubscribeRequest& default_instance();
  
  void Swap(UnsubscribeRequest* other);
  
  // implements Message ----------------------------------------------
  
  UnsubscribeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnsubscribeRequest& from);
  void MergeFrom(const UnsubscribeRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .bnet.protocol.EntityId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bnet::protocol::EntityId& agent_id() const;
  inline ::bnet::protocol::EntityId* mutable_agent_id();
  inline ::bnet::protocol::EntityId* release_agent_id();
  
  // required .bnet.protocol.EntityId entity_id = 2;
  inline bool has_entity_id() const;
  inline void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  inline const ::bnet::protocol::EntityId& entity_id() const;
  inline ::bnet::protocol::EntityId* mutable_entity_id();
  inline ::bnet::protocol::EntityId* release_entity_id();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.presence.UnsubscribeRequest)
 private:
  inline void set_has_agent_id();
  inline void clear_has_agent_id();
  inline void set_has_entity_id();
  inline void clear_has_entity_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::EntityId* agent_id_;
  ::bnet::protocol::EntityId* entity_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fpresence_2fpresence_2eproto();
  friend void protobuf_AssignDesc_service_2fpresence_2fpresence_2eproto();
  friend void protobuf_ShutdownFile_service_2fpresence_2fpresence_2eproto();
  
  void InitAsDefaultInstance();
  static UnsubscribeRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateRequest : public ::google::protobuf::Message {
 public:
  UpdateRequest();
  virtual ~UpdateRequest();
  
  UpdateRequest(const UpdateRequest& from);
  
  inline UpdateRequest& operator=(const UpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateRequest& default_instance();
  
  void Swap(UpdateRequest* other);
  
  // implements Message ----------------------------------------------
  
  UpdateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateRequest& from);
  void MergeFrom(const UpdateRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.EntityId entity_id = 1;
  inline bool has_entity_id() const;
  inline void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  inline const ::bnet::protocol::EntityId& entity_id() const;
  inline ::bnet::protocol::EntityId* mutable_entity_id();
  inline ::bnet::protocol::EntityId* release_entity_id();
  
  // repeated .bnet.protocol.presence.FieldOperation field_operation = 2;
  inline int field_operation_size() const;
  inline void clear_field_operation();
  static const int kFieldOperationFieldNumber = 2;
  inline const ::bnet::protocol::presence::FieldOperation& field_operation(int index) const;
  inline ::bnet::protocol::presence::FieldOperation* mutable_field_operation(int index);
  inline ::bnet::protocol::presence::FieldOperation* add_field_operation();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::presence::FieldOperation >&
      field_operation() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::presence::FieldOperation >*
      mutable_field_operation();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.presence.UpdateRequest)
 private:
  inline void set_has_entity_id();
  inline void clear_has_entity_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::EntityId* entity_id_;
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::presence::FieldOperation > field_operation_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fpresence_2fpresence_2eproto();
  friend void protobuf_AssignDesc_service_2fpresence_2fpresence_2eproto();
  friend void protobuf_ShutdownFile_service_2fpresence_2fpresence_2eproto();
  
  void InitAsDefaultInstance();
  static UpdateRequest* default_instance_;
};
// -------------------------------------------------------------------

class QueryRequest : public ::google::protobuf::Message {
 public:
  QueryRequest();
  virtual ~QueryRequest();
  
  QueryRequest(const QueryRequest& from);
  
  inline QueryRequest& operator=(const QueryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryRequest& default_instance();
  
  void Swap(QueryRequest* other);
  
  // implements Message ----------------------------------------------
  
  QueryRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryRequest& from);
  void MergeFrom(const QueryRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.EntityId entity_id = 1;
  inline bool has_entity_id() const;
  inline void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  inline const ::bnet::protocol::EntityId& entity_id() const;
  inline ::bnet::protocol::EntityId* mutable_entity_id();
  inline ::bnet::protocol::EntityId* release_entity_id();
  
  // repeated .bnet.protocol.presence.FieldKey key = 2;
  inline int key_size() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline const ::bnet::protocol::presence::FieldKey& key(int index) const;
  inline ::bnet::protocol::presence::FieldKey* mutable_key(int index);
  inline ::bnet::protocol::presence::FieldKey* add_key();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::presence::FieldKey >&
      key() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::presence::FieldKey >*
      mutable_key();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.presence.QueryRequest)
 private:
  inline void set_has_entity_id();
  inline void clear_has_entity_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::EntityId* entity_id_;
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::presence::FieldKey > key_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fpresence_2fpresence_2eproto();
  friend void protobuf_AssignDesc_service_2fpresence_2fpresence_2eproto();
  friend void protobuf_ShutdownFile_service_2fpresence_2fpresence_2eproto();
  
  void InitAsDefaultInstance();
  static QueryRequest* default_instance_;
};
// -------------------------------------------------------------------

class QueryResponse : public ::google::protobuf::Message {
 public:
  QueryResponse();
  virtual ~QueryResponse();
  
  QueryResponse(const QueryResponse& from);
  
  inline QueryResponse& operator=(const QueryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryResponse& default_instance();
  
  void Swap(QueryResponse* other);
  
  // implements Message ----------------------------------------------
  
  QueryResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryResponse& from);
  void MergeFrom(const QueryResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .bnet.protocol.presence.Field field = 2;
  inline int field_size() const;
  inline void clear_field();
  static const int kFieldFieldNumber = 2;
  inline const ::bnet::protocol::presence::Field& field(int index) const;
  inline ::bnet::protocol::presence::Field* mutable_field(int index);
  inline ::bnet::protocol::presence::Field* add_field();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::presence::Field >&
      field() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::presence::Field >*
      mutable_field();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.presence.QueryResponse)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::presence::Field > field_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fpresence_2fpresence_2eproto();
  friend void protobuf_AssignDesc_service_2fpresence_2fpresence_2eproto();
  friend void protobuf_ShutdownFile_service_2fpresence_2fpresence_2eproto();
  
  void InitAsDefaultInstance();
  static QueryResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// SubscribeRequest

// optional .bnet.protocol.EntityId agent_id = 1;
inline bool SubscribeRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SubscribeRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SubscribeRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SubscribeRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bnet::protocol::EntityId::Clear();
  clear_has_agent_id();
}
inline const ::bnet::protocol::EntityId& SubscribeRequest::agent_id() const {
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bnet::protocol::EntityId* SubscribeRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bnet::protocol::EntityId;
  return agent_id_;
}
inline ::bnet::protocol::EntityId* SubscribeRequest::release_agent_id() {
  clear_has_agent_id();
  ::bnet::protocol::EntityId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}

// required .bnet.protocol.EntityId entity_id = 2;
inline bool SubscribeRequest::has_entity_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SubscribeRequest::set_has_entity_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SubscribeRequest::clear_has_entity_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SubscribeRequest::clear_entity_id() {
  if (entity_id_ != NULL) entity_id_->::bnet::protocol::EntityId::Clear();
  clear_has_entity_id();
}
inline const ::bnet::protocol::EntityId& SubscribeRequest::entity_id() const {
  return entity_id_ != NULL ? *entity_id_ : *default_instance_->entity_id_;
}
inline ::bnet::protocol::EntityId* SubscribeRequest::mutable_entity_id() {
  set_has_entity_id();
  if (entity_id_ == NULL) entity_id_ = new ::bnet::protocol::EntityId;
  return entity_id_;
}
inline ::bnet::protocol::EntityId* SubscribeRequest::release_entity_id() {
  clear_has_entity_id();
  ::bnet::protocol::EntityId* temp = entity_id_;
  entity_id_ = NULL;
  return temp;
}

// required uint64 object_id = 3;
inline bool SubscribeRequest::has_object_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SubscribeRequest::set_has_object_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SubscribeRequest::clear_has_object_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SubscribeRequest::clear_object_id() {
  object_id_ = GOOGLE_ULONGLONG(0);
  clear_has_object_id();
}
inline ::google::protobuf::uint64 SubscribeRequest::object_id() const {
  return object_id_;
}
inline void SubscribeRequest::set_object_id(::google::protobuf::uint64 value) {
  set_has_object_id();
  object_id_ = value;
}

// -------------------------------------------------------------------

// UnsubscribeRequest

// optional .bnet.protocol.EntityId agent_id = 1;
inline bool UnsubscribeRequest::has_agent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnsubscribeRequest::set_has_agent_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnsubscribeRequest::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnsubscribeRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bnet::protocol::EntityId::Clear();
  clear_has_agent_id();
}
inline const ::bnet::protocol::EntityId& UnsubscribeRequest::agent_id() const {
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bnet::protocol::EntityId* UnsubscribeRequest::mutable_agent_id() {
  set_has_agent_id();
  if (agent_id_ == NULL) agent_id_ = new ::bnet::protocol::EntityId;
  return agent_id_;
}
inline ::bnet::protocol::EntityId* UnsubscribeRequest::release_agent_id() {
  clear_has_agent_id();
  ::bnet::protocol::EntityId* temp = agent_id_;
  agent_id_ = NULL;
  return temp;
}

// required .bnet.protocol.EntityId entity_id = 2;
inline bool UnsubscribeRequest::has_entity_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnsubscribeRequest::set_has_entity_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnsubscribeRequest::clear_has_entity_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnsubscribeRequest::clear_entity_id() {
  if (entity_id_ != NULL) entity_id_->::bnet::protocol::EntityId::Clear();
  clear_has_entity_id();
}
inline const ::bnet::protocol::EntityId& UnsubscribeRequest::entity_id() const {
  return entity_id_ != NULL ? *entity_id_ : *default_instance_->entity_id_;
}
inline ::bnet::protocol::EntityId* UnsubscribeRequest::mutable_entity_id() {
  set_has_entity_id();
  if (entity_id_ == NULL) entity_id_ = new ::bnet::protocol::EntityId;
  return entity_id_;
}
inline ::bnet::protocol::EntityId* UnsubscribeRequest::release_entity_id() {
  clear_has_entity_id();
  ::bnet::protocol::EntityId* temp = entity_id_;
  entity_id_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// UpdateRequest

// required .bnet.protocol.EntityId entity_id = 1;
inline bool UpdateRequest::has_entity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateRequest::set_has_entity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateRequest::clear_has_entity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateRequest::clear_entity_id() {
  if (entity_id_ != NULL) entity_id_->::bnet::protocol::EntityId::Clear();
  clear_has_entity_id();
}
inline const ::bnet::protocol::EntityId& UpdateRequest::entity_id() const {
  return entity_id_ != NULL ? *entity_id_ : *default_instance_->entity_id_;
}
inline ::bnet::protocol::EntityId* UpdateRequest::mutable_entity_id() {
  set_has_entity_id();
  if (entity_id_ == NULL) entity_id_ = new ::bnet::protocol::EntityId;
  return entity_id_;
}
inline ::bnet::protocol::EntityId* UpdateRequest::release_entity_id() {
  clear_has_entity_id();
  ::bnet::protocol::EntityId* temp = entity_id_;
  entity_id_ = NULL;
  return temp;
}

// repeated .bnet.protocol.presence.FieldOperation field_operation = 2;
inline int UpdateRequest::field_operation_size() const {
  return field_operation_.size();
}
inline void UpdateRequest::clear_field_operation() {
  field_operation_.Clear();
}
inline const ::bnet::protocol::presence::FieldOperation& UpdateRequest::field_operation(int index) const {
  return field_operation_.Get(index);
}
inline ::bnet::protocol::presence::FieldOperation* UpdateRequest::mutable_field_operation(int index) {
  return field_operation_.Mutable(index);
}
inline ::bnet::protocol::presence::FieldOperation* UpdateRequest::add_field_operation() {
  return field_operation_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::presence::FieldOperation >&
UpdateRequest::field_operation() const {
  return field_operation_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::presence::FieldOperation >*
UpdateRequest::mutable_field_operation() {
  return &field_operation_;
}

// -------------------------------------------------------------------

// QueryRequest

// required .bnet.protocol.EntityId entity_id = 1;
inline bool QueryRequest::has_entity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryRequest::set_has_entity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryRequest::clear_has_entity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryRequest::clear_entity_id() {
  if (entity_id_ != NULL) entity_id_->::bnet::protocol::EntityId::Clear();
  clear_has_entity_id();
}
inline const ::bnet::protocol::EntityId& QueryRequest::entity_id() const {
  return entity_id_ != NULL ? *entity_id_ : *default_instance_->entity_id_;
}
inline ::bnet::protocol::EntityId* QueryRequest::mutable_entity_id() {
  set_has_entity_id();
  if (entity_id_ == NULL) entity_id_ = new ::bnet::protocol::EntityId;
  return entity_id_;
}
inline ::bnet::protocol::EntityId* QueryRequest::release_entity_id() {
  clear_has_entity_id();
  ::bnet::protocol::EntityId* temp = entity_id_;
  entity_id_ = NULL;
  return temp;
}

// repeated .bnet.protocol.presence.FieldKey key = 2;
inline int QueryRequest::key_size() const {
  return key_.size();
}
inline void QueryRequest::clear_key() {
  key_.Clear();
}
inline const ::bnet::protocol::presence::FieldKey& QueryRequest::key(int index) const {
  return key_.Get(index);
}
inline ::bnet::protocol::presence::FieldKey* QueryRequest::mutable_key(int index) {
  return key_.Mutable(index);
}
inline ::bnet::protocol::presence::FieldKey* QueryRequest::add_key() {
  return key_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::presence::FieldKey >&
QueryRequest::key() const {
  return key_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::presence::FieldKey >*
QueryRequest::mutable_key() {
  return &key_;
}

// -------------------------------------------------------------------

// QueryResponse

// repeated .bnet.protocol.presence.Field field = 2;
inline int QueryResponse::field_size() const {
  return field_.size();
}
inline void QueryResponse::clear_field() {
  field_.Clear();
}
inline const ::bnet::protocol::presence::Field& QueryResponse::field(int index) const {
  return field_.Get(index);
}
inline ::bnet::protocol::presence::Field* QueryResponse::mutable_field(int index) {
  return field_.Mutable(index);
}
inline ::bnet::protocol::presence::Field* QueryResponse::add_field() {
  return field_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::presence::Field >&
QueryResponse::field() const {
  return field_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::presence::Field >*
QueryResponse::mutable_field() {
  return &field_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace presence
}  // namespace protocol
}  // namespace bnet

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_service_2fpresence_2fpresence_2eproto__INCLUDED
