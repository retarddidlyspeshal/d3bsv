// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/presence/presence_types.proto

#ifndef PROTOBUF_service_2fpresence_2fpresence_5ftypes_2eproto__INCLUDED
#define PROTOBUF_service_2fpresence_2fpresence_5ftypes_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "lib/protocol/attribute.pb.h"
#include "lib/protocol/entity.pb.h"
#include "service/channel/channel_types.pb.h"
// @@protoc_insertion_point(includes)

namespace bnet {
namespace protocol {
namespace presence {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_service_2fpresence_2fpresence_5ftypes_2eproto();
void protobuf_AssignDesc_service_2fpresence_2fpresence_5ftypes_2eproto();
void protobuf_ShutdownFile_service_2fpresence_2fpresence_5ftypes_2eproto();

class FieldKey;
class Field;
class FieldOperation;
class ChannelState;

enum FieldOperation_OperationType {
  FieldOperation_OperationType_SET = 0,
  FieldOperation_OperationType_CLEAR = 1
};
bool FieldOperation_OperationType_IsValid(int value);
const FieldOperation_OperationType FieldOperation_OperationType_OperationType_MIN = FieldOperation_OperationType_SET;
const FieldOperation_OperationType FieldOperation_OperationType_OperationType_MAX = FieldOperation_OperationType_CLEAR;
const int FieldOperation_OperationType_OperationType_ARRAYSIZE = FieldOperation_OperationType_OperationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FieldOperation_OperationType_descriptor();
inline const ::std::string& FieldOperation_OperationType_Name(FieldOperation_OperationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FieldOperation_OperationType_descriptor(), value);
}
inline bool FieldOperation_OperationType_Parse(
    const ::std::string& name, FieldOperation_OperationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FieldOperation_OperationType>(
    FieldOperation_OperationType_descriptor(), name, value);
}
// ===================================================================

class FieldKey : public ::google::protobuf::Message {
 public:
  FieldKey();
  virtual ~FieldKey();
  
  FieldKey(const FieldKey& from);
  
  inline FieldKey& operator=(const FieldKey& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FieldKey& default_instance();
  
  void Swap(FieldKey* other);
  
  // implements Message ----------------------------------------------
  
  FieldKey* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FieldKey& from);
  void MergeFrom(const FieldKey& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 program = 1;
  inline bool has_program() const;
  inline void clear_program();
  static const int kProgramFieldNumber = 1;
  inline ::google::protobuf::uint32 program() const;
  inline void set_program(::google::protobuf::uint32 value);
  
  // required uint32 group = 2;
  inline bool has_group() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 2;
  inline ::google::protobuf::uint32 group() const;
  inline void set_group(::google::protobuf::uint32 value);
  
  // required uint32 field = 3;
  inline bool has_field() const;
  inline void clear_field();
  static const int kFieldFieldNumber = 3;
  inline ::google::protobuf::uint32 field() const;
  inline void set_field(::google::protobuf::uint32 value);
  
  // optional uint64 index = 4;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 4;
  inline ::google::protobuf::uint64 index() const;
  inline void set_index(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.presence.FieldKey)
 private:
  inline void set_has_program();
  inline void clear_has_program();
  inline void set_has_group();
  inline void clear_has_group();
  inline void set_has_field();
  inline void clear_has_field();
  inline void set_has_index();
  inline void clear_has_index();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 program_;
  ::google::protobuf::uint32 group_;
  ::google::protobuf::uint64 index_;
  ::google::protobuf::uint32 field_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fpresence_2fpresence_5ftypes_2eproto();
  friend void protobuf_AssignDesc_service_2fpresence_2fpresence_5ftypes_2eproto();
  friend void protobuf_ShutdownFile_service_2fpresence_2fpresence_5ftypes_2eproto();
  
  void InitAsDefaultInstance();
  static FieldKey* default_instance_;
};
// -------------------------------------------------------------------

class Field : public ::google::protobuf::Message {
 public:
  Field();
  virtual ~Field();
  
  Field(const Field& from);
  
  inline Field& operator=(const Field& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Field& default_instance();
  
  void Swap(Field* other);
  
  // implements Message ----------------------------------------------
  
  Field* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Field& from);
  void MergeFrom(const Field& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.presence.FieldKey key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::bnet::protocol::presence::FieldKey& key() const;
  inline ::bnet::protocol::presence::FieldKey* mutable_key();
  inline ::bnet::protocol::presence::FieldKey* release_key();
  
  // required .bnet.protocol.attribute.Variant value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::bnet::protocol::attribute::Variant& value() const;
  inline ::bnet::protocol::attribute::Variant* mutable_value();
  inline ::bnet::protocol::attribute::Variant* release_value();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.presence.Field)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::presence::FieldKey* key_;
  ::bnet::protocol::attribute::Variant* value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fpresence_2fpresence_5ftypes_2eproto();
  friend void protobuf_AssignDesc_service_2fpresence_2fpresence_5ftypes_2eproto();
  friend void protobuf_ShutdownFile_service_2fpresence_2fpresence_5ftypes_2eproto();
  
  void InitAsDefaultInstance();
  static Field* default_instance_;
};
// -------------------------------------------------------------------

class FieldOperation : public ::google::protobuf::Message {
 public:
  FieldOperation();
  virtual ~FieldOperation();
  
  FieldOperation(const FieldOperation& from);
  
  inline FieldOperation& operator=(const FieldOperation& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FieldOperation& default_instance();
  
  void Swap(FieldOperation* other);
  
  // implements Message ----------------------------------------------
  
  FieldOperation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FieldOperation& from);
  void MergeFrom(const FieldOperation& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef FieldOperation_OperationType OperationType;
  static const OperationType SET = FieldOperation_OperationType_SET;
  static const OperationType CLEAR = FieldOperation_OperationType_CLEAR;
  static inline bool OperationType_IsValid(int value) {
    return FieldOperation_OperationType_IsValid(value);
  }
  static const OperationType OperationType_MIN =
    FieldOperation_OperationType_OperationType_MIN;
  static const OperationType OperationType_MAX =
    FieldOperation_OperationType_OperationType_MAX;
  static const int OperationType_ARRAYSIZE =
    FieldOperation_OperationType_OperationType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  OperationType_descriptor() {
    return FieldOperation_OperationType_descriptor();
  }
  static inline const ::std::string& OperationType_Name(OperationType value) {
    return FieldOperation_OperationType_Name(value);
  }
  static inline bool OperationType_Parse(const ::std::string& name,
      OperationType* value) {
    return FieldOperation_OperationType_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.presence.Field field = 1;
  inline bool has_field() const;
  inline void clear_field();
  static const int kFieldFieldNumber = 1;
  inline const ::bnet::protocol::presence::Field& field() const;
  inline ::bnet::protocol::presence::Field* mutable_field();
  inline ::bnet::protocol::presence::Field* release_field();
  
  // optional .bnet.protocol.presence.FieldOperation.OperationType operation = 2;
  inline bool has_operation() const;
  inline void clear_operation();
  static const int kOperationFieldNumber = 2;
  inline ::bnet::protocol::presence::FieldOperation_OperationType operation() const;
  inline void set_operation(::bnet::protocol::presence::FieldOperation_OperationType value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.presence.FieldOperation)
 private:
  inline void set_has_field();
  inline void clear_has_field();
  inline void set_has_operation();
  inline void clear_has_operation();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::presence::Field* field_;
  int operation_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fpresence_2fpresence_5ftypes_2eproto();
  friend void protobuf_AssignDesc_service_2fpresence_2fpresence_5ftypes_2eproto();
  friend void protobuf_ShutdownFile_service_2fpresence_2fpresence_5ftypes_2eproto();
  
  void InitAsDefaultInstance();
  static FieldOperation* default_instance_;
};
// -------------------------------------------------------------------

class ChannelState : public ::google::protobuf::Message {
 public:
  ChannelState();
  virtual ~ChannelState();
  
  ChannelState(const ChannelState& from);
  
  inline ChannelState& operator=(const ChannelState& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChannelState& default_instance();
  
  void Swap(ChannelState* other);
  
  // implements Message ----------------------------------------------
  
  ChannelState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChannelState& from);
  void MergeFrom(const ChannelState& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .bnet.protocol.EntityId entity_id = 1;
  inline bool has_entity_id() const;
  inline void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  inline const ::bnet::protocol::EntityId& entity_id() const;
  inline ::bnet::protocol::EntityId* mutable_entity_id();
  inline ::bnet::protocol::EntityId* release_entity_id();
  
  // repeated .bnet.protocol.presence.FieldOperation field_operation = 2;
  inline int field_operation_size() const;
  inline void clear_field_operation();
  static const int kFieldOperationFieldNumber = 2;
  inline const ::bnet::protocol::presence::FieldOperation& field_operation(int index) const;
  inline ::bnet::protocol::presence::FieldOperation* mutable_field_operation(int index);
  inline ::bnet::protocol::presence::FieldOperation* add_field_operation();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::presence::FieldOperation >&
      field_operation() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::presence::FieldOperation >*
      mutable_field_operation();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.presence.ChannelState)
 private:
  inline void set_has_entity_id();
  inline void clear_has_entity_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::bnet::protocol::EntityId* entity_id_;
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::presence::FieldOperation > field_operation_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_service_2fpresence_2fpresence_5ftypes_2eproto();
  friend void protobuf_AssignDesc_service_2fpresence_2fpresence_5ftypes_2eproto();
  friend void protobuf_ShutdownFile_service_2fpresence_2fpresence_5ftypes_2eproto();
  
  void InitAsDefaultInstance();
  static ChannelState* default_instance_;
};
// ===================================================================


// ===================================================================

// FieldKey

// required uint32 program = 1;
inline bool FieldKey::has_program() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FieldKey::set_has_program() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FieldKey::clear_has_program() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FieldKey::clear_program() {
  program_ = 0u;
  clear_has_program();
}
inline ::google::protobuf::uint32 FieldKey::program() const {
  return program_;
}
inline void FieldKey::set_program(::google::protobuf::uint32 value) {
  set_has_program();
  program_ = value;
}

// required uint32 group = 2;
inline bool FieldKey::has_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FieldKey::set_has_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FieldKey::clear_has_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FieldKey::clear_group() {
  group_ = 0u;
  clear_has_group();
}
inline ::google::protobuf::uint32 FieldKey::group() const {
  return group_;
}
inline void FieldKey::set_group(::google::protobuf::uint32 value) {
  set_has_group();
  group_ = value;
}

// required uint32 field = 3;
inline bool FieldKey::has_field() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FieldKey::set_has_field() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FieldKey::clear_has_field() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FieldKey::clear_field() {
  field_ = 0u;
  clear_has_field();
}
inline ::google::protobuf::uint32 FieldKey::field() const {
  return field_;
}
inline void FieldKey::set_field(::google::protobuf::uint32 value) {
  set_has_field();
  field_ = value;
}

// optional uint64 index = 4;
inline bool FieldKey::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FieldKey::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FieldKey::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FieldKey::clear_index() {
  index_ = GOOGLE_ULONGLONG(0);
  clear_has_index();
}
inline ::google::protobuf::uint64 FieldKey::index() const {
  return index_;
}
inline void FieldKey::set_index(::google::protobuf::uint64 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// Field

// required .bnet.protocol.presence.FieldKey key = 1;
inline bool Field::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Field::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Field::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Field::clear_key() {
  if (key_ != NULL) key_->::bnet::protocol::presence::FieldKey::Clear();
  clear_has_key();
}
inline const ::bnet::protocol::presence::FieldKey& Field::key() const {
  return key_ != NULL ? *key_ : *default_instance_->key_;
}
inline ::bnet::protocol::presence::FieldKey* Field::mutable_key() {
  set_has_key();
  if (key_ == NULL) key_ = new ::bnet::protocol::presence::FieldKey;
  return key_;
}
inline ::bnet::protocol::presence::FieldKey* Field::release_key() {
  clear_has_key();
  ::bnet::protocol::presence::FieldKey* temp = key_;
  key_ = NULL;
  return temp;
}

// required .bnet.protocol.attribute.Variant value = 2;
inline bool Field::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Field::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Field::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Field::clear_value() {
  if (value_ != NULL) value_->::bnet::protocol::attribute::Variant::Clear();
  clear_has_value();
}
inline const ::bnet::protocol::attribute::Variant& Field::value() const {
  return value_ != NULL ? *value_ : *default_instance_->value_;
}
inline ::bnet::protocol::attribute::Variant* Field::mutable_value() {
  set_has_value();
  if (value_ == NULL) value_ = new ::bnet::protocol::attribute::Variant;
  return value_;
}
inline ::bnet::protocol::attribute::Variant* Field::release_value() {
  clear_has_value();
  ::bnet::protocol::attribute::Variant* temp = value_;
  value_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// FieldOperation

// required .bnet.protocol.presence.Field field = 1;
inline bool FieldOperation::has_field() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FieldOperation::set_has_field() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FieldOperation::clear_has_field() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FieldOperation::clear_field() {
  if (field_ != NULL) field_->::bnet::protocol::presence::Field::Clear();
  clear_has_field();
}
inline const ::bnet::protocol::presence::Field& FieldOperation::field() const {
  return field_ != NULL ? *field_ : *default_instance_->field_;
}
inline ::bnet::protocol::presence::Field* FieldOperation::mutable_field() {
  set_has_field();
  if (field_ == NULL) field_ = new ::bnet::protocol::presence::Field;
  return field_;
}
inline ::bnet::protocol::presence::Field* FieldOperation::release_field() {
  clear_has_field();
  ::bnet::protocol::presence::Field* temp = field_;
  field_ = NULL;
  return temp;
}

// optional .bnet.protocol.presence.FieldOperation.OperationType operation = 2;
inline bool FieldOperation::has_operation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FieldOperation::set_has_operation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FieldOperation::clear_has_operation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FieldOperation::clear_operation() {
  operation_ = 0;
  clear_has_operation();
}
inline ::bnet::protocol::presence::FieldOperation_OperationType FieldOperation::operation() const {
  return static_cast< ::bnet::protocol::presence::FieldOperation_OperationType >(operation_);
}
inline void FieldOperation::set_operation(::bnet::protocol::presence::FieldOperation_OperationType value) {
  GOOGLE_DCHECK(::bnet::protocol::presence::FieldOperation_OperationType_IsValid(value));
  set_has_operation();
  operation_ = value;
}

// -------------------------------------------------------------------

// ChannelState

// optional .bnet.protocol.EntityId entity_id = 1;
inline bool ChannelState::has_entity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChannelState::set_has_entity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChannelState::clear_has_entity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChannelState::clear_entity_id() {
  if (entity_id_ != NULL) entity_id_->::bnet::protocol::EntityId::Clear();
  clear_has_entity_id();
}
inline const ::bnet::protocol::EntityId& ChannelState::entity_id() const {
  return entity_id_ != NULL ? *entity_id_ : *default_instance_->entity_id_;
}
inline ::bnet::protocol::EntityId* ChannelState::mutable_entity_id() {
  set_has_entity_id();
  if (entity_id_ == NULL) entity_id_ = new ::bnet::protocol::EntityId;
  return entity_id_;
}
inline ::bnet::protocol::EntityId* ChannelState::release_entity_id() {
  clear_has_entity_id();
  ::bnet::protocol::EntityId* temp = entity_id_;
  entity_id_ = NULL;
  return temp;
}

// repeated .bnet.protocol.presence.FieldOperation field_operation = 2;
inline int ChannelState::field_operation_size() const {
  return field_operation_.size();
}
inline void ChannelState::clear_field_operation() {
  field_operation_.Clear();
}
inline const ::bnet::protocol::presence::FieldOperation& ChannelState::field_operation(int index) const {
  return field_operation_.Get(index);
}
inline ::bnet::protocol::presence::FieldOperation* ChannelState::mutable_field_operation(int index) {
  return field_operation_.Mutable(index);
}
inline ::bnet::protocol::presence::FieldOperation* ChannelState::add_field_operation() {
  return field_operation_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::presence::FieldOperation >&
ChannelState::field_operation() const {
  return field_operation_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::presence::FieldOperation >*
ChannelState::mutable_field_operation() {
  return &field_operation_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace presence
}  // namespace protocol
}  // namespace bnet

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bnet::protocol::presence::FieldOperation_OperationType>() {
  return ::bnet::protocol::presence::FieldOperation_OperationType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_service_2fpresence_2fpresence_5ftypes_2eproto__INCLUDED
