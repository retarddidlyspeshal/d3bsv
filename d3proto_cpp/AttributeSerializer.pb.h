// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AttributeSerializer.proto

#ifndef PROTOBUF_AttributeSerializer_2eproto__INCLUDED
#define PROTOBUF_AttributeSerializer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "GBHandle.pb.h"
// @@protoc_insertion_point(includes)

namespace D3 {
namespace AttributeSerializer {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_AttributeSerializer_2eproto();
void protobuf_AssignDesc_AttributeSerializer_2eproto();
void protobuf_ShutdownFile_AttributeSerializer_2eproto();

class SavedAttribute;
class SavedAttributes;

// ===================================================================

class SavedAttribute : public ::google::protobuf::Message {
 public:
  SavedAttribute();
  virtual ~SavedAttribute();
  
  SavedAttribute(const SavedAttribute& from);
  
  inline SavedAttribute& operator=(const SavedAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SavedAttribute& default_instance();
  
  void Swap(SavedAttribute* other);
  
  // implements Message ----------------------------------------------
  
  SavedAttribute* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SavedAttribute& from);
  void MergeFrom(const SavedAttribute& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required sint32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::int32 key() const;
  inline void set_key(::google::protobuf::int32 value);
  
  // required sint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:D3.AttributeSerializer.SavedAttribute)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 key_;
  ::google::protobuf::int32 value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_AttributeSerializer_2eproto();
  friend void protobuf_AssignDesc_AttributeSerializer_2eproto();
  friend void protobuf_ShutdownFile_AttributeSerializer_2eproto();
  
  void InitAsDefaultInstance();
  static SavedAttribute* default_instance_;
};
// -------------------------------------------------------------------

class SavedAttributes : public ::google::protobuf::Message {
 public:
  SavedAttributes();
  virtual ~SavedAttributes();
  
  SavedAttributes(const SavedAttributes& from);
  
  inline SavedAttributes& operator=(const SavedAttributes& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SavedAttributes& default_instance();
  
  void Swap(SavedAttributes* other);
  
  // implements Message ----------------------------------------------
  
  SavedAttributes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SavedAttributes& from);
  void MergeFrom(const SavedAttributes& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .D3.GameBalance.Handle gb_handle = 1;
  inline bool has_gb_handle() const;
  inline void clear_gb_handle();
  static const int kGbHandleFieldNumber = 1;
  inline const ::D3::GameBalance::Handle& gb_handle() const;
  inline ::D3::GameBalance::Handle* mutable_gb_handle();
  inline ::D3::GameBalance::Handle* release_gb_handle();
  
  // repeated .D3.AttributeSerializer.SavedAttribute attributes = 2;
  inline int attributes_size() const;
  inline void clear_attributes();
  static const int kAttributesFieldNumber = 2;
  inline const ::D3::AttributeSerializer::SavedAttribute& attributes(int index) const;
  inline ::D3::AttributeSerializer::SavedAttribute* mutable_attributes(int index);
  inline ::D3::AttributeSerializer::SavedAttribute* add_attributes();
  inline const ::google::protobuf::RepeatedPtrField< ::D3::AttributeSerializer::SavedAttribute >&
      attributes() const;
  inline ::google::protobuf::RepeatedPtrField< ::D3::AttributeSerializer::SavedAttribute >*
      mutable_attributes();
  
  // @@protoc_insertion_point(class_scope:D3.AttributeSerializer.SavedAttributes)
 private:
  inline void set_has_gb_handle();
  inline void clear_has_gb_handle();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::D3::GameBalance::Handle* gb_handle_;
  ::google::protobuf::RepeatedPtrField< ::D3::AttributeSerializer::SavedAttribute > attributes_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_AttributeSerializer_2eproto();
  friend void protobuf_AssignDesc_AttributeSerializer_2eproto();
  friend void protobuf_ShutdownFile_AttributeSerializer_2eproto();
  
  void InitAsDefaultInstance();
  static SavedAttributes* default_instance_;
};
// ===================================================================


// ===================================================================

// SavedAttribute

// required sint32 key = 1;
inline bool SavedAttribute::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SavedAttribute::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SavedAttribute::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SavedAttribute::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::google::protobuf::int32 SavedAttribute::key() const {
  return key_;
}
inline void SavedAttribute::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
}

// required sint32 value = 2;
inline bool SavedAttribute::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SavedAttribute::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SavedAttribute::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SavedAttribute::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 SavedAttribute::value() const {
  return value_;
}
inline void SavedAttribute::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// SavedAttributes

// required .D3.GameBalance.Handle gb_handle = 1;
inline bool SavedAttributes::has_gb_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SavedAttributes::set_has_gb_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SavedAttributes::clear_has_gb_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SavedAttributes::clear_gb_handle() {
  if (gb_handle_ != NULL) gb_handle_->::D3::GameBalance::Handle::Clear();
  clear_has_gb_handle();
}
inline const ::D3::GameBalance::Handle& SavedAttributes::gb_handle() const {
  return gb_handle_ != NULL ? *gb_handle_ : *default_instance_->gb_handle_;
}
inline ::D3::GameBalance::Handle* SavedAttributes::mutable_gb_handle() {
  set_has_gb_handle();
  if (gb_handle_ == NULL) gb_handle_ = new ::D3::GameBalance::Handle;
  return gb_handle_;
}
inline ::D3::GameBalance::Handle* SavedAttributes::release_gb_handle() {
  clear_has_gb_handle();
  ::D3::GameBalance::Handle* temp = gb_handle_;
  gb_handle_ = NULL;
  return temp;
}

// repeated .D3.AttributeSerializer.SavedAttribute attributes = 2;
inline int SavedAttributes::attributes_size() const {
  return attributes_.size();
}
inline void SavedAttributes::clear_attributes() {
  attributes_.Clear();
}
inline const ::D3::AttributeSerializer::SavedAttribute& SavedAttributes::attributes(int index) const {
  return attributes_.Get(index);
}
inline ::D3::AttributeSerializer::SavedAttribute* SavedAttributes::mutable_attributes(int index) {
  return attributes_.Mutable(index);
}
inline ::D3::AttributeSerializer::SavedAttribute* SavedAttributes::add_attributes() {
  return attributes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::D3::AttributeSerializer::SavedAttribute >&
SavedAttributes::attributes() const {
  return attributes_;
}
inline ::google::protobuf::RepeatedPtrField< ::D3::AttributeSerializer::SavedAttribute >*
SavedAttributes::mutable_attributes() {
  return &attributes_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace AttributeSerializer
}  // namespace D3

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AttributeSerializer_2eproto__INCLUDED
