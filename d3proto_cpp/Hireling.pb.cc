// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Hireling.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace D3 {
namespace Hireling {

namespace {

const ::google::protobuf::Descriptor* Info_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Info_reflection_ = NULL;
const ::google::protobuf::Descriptor* SavedData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SavedData_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Hireling_2eproto() {
  protobuf_AddDesc_Hireling_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Hireling.proto");
  GOOGLE_CHECK(file != NULL);
  Info_descriptor_ = file->message_type(0);
  static const int Info_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Info, hireling_class_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Info, gbid_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Info, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Info, attribute_experience_next_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Info, power_key_params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Info, dead_),
  };
  Info_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Info_descriptor_,
      Info::default_instance_,
      Info_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Info, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Info, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Info));
  SavedData_descriptor_ = file->message_type(1);
  static const int SavedData_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedData, hirelings_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedData, active_hireling_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedData, available_hirelings_bitfield_),
  };
  SavedData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SavedData_descriptor_,
      SavedData::default_instance_,
      SavedData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavedData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SavedData));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Hireling_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Info_descriptor_, &Info::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SavedData_descriptor_, &SavedData::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Hireling_2eproto() {
  delete Info::default_instance_;
  delete Info_reflection_;
  delete SavedData::default_instance_;
  delete SavedData_reflection_;
}

void protobuf_AddDesc_Hireling_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016Hireling.proto\022\013D3.Hireling\"\213\001\n\004Info\022\026"
    "\n\016hireling_class\030\001 \002(\021\022\021\n\tgbid_name\030\002 \002("
    "\017\022\r\n\005level\030\003 \002(\021\022!\n\031attribute_experience"
    "_next\030\004 \002(\r\022\030\n\020power_key_params\030\013 \003(\021\022\014\n"
    "\004dead\030\014 \002(\010\"p\n\tSavedData\022$\n\thirelings\030\001 "
    "\003(\0132\021.D3.Hireling.Info\022\027\n\017active_hirelin"
    "g\030\002 \002(\r\022$\n\034available_hirelings_bitfield\030"
    "\003 \002(\r", 285);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Hireling.proto", &protobuf_RegisterTypes);
  Info::default_instance_ = new Info();
  SavedData::default_instance_ = new SavedData();
  Info::default_instance_->InitAsDefaultInstance();
  SavedData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Hireling_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Hireling_2eproto {
  StaticDescriptorInitializer_Hireling_2eproto() {
    protobuf_AddDesc_Hireling_2eproto();
  }
} static_descriptor_initializer_Hireling_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Info::kHirelingClassFieldNumber;
const int Info::kGbidNameFieldNumber;
const int Info::kLevelFieldNumber;
const int Info::kAttributeExperienceNextFieldNumber;
const int Info::kPowerKeyParamsFieldNumber;
const int Info::kDeadFieldNumber;
#endif  // !_MSC_VER

Info::Info()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Info::InitAsDefaultInstance() {
}

Info::Info(const Info& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Info::SharedCtor() {
  _cached_size_ = 0;
  hireling_class_ = 0;
  gbid_name_ = 0;
  level_ = 0;
  attribute_experience_next_ = 0u;
  dead_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Info::~Info() {
  SharedDtor();
}

void Info::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Info::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Info_descriptor_;
}

const Info& Info::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Hireling_2eproto();  return *default_instance_;
}

Info* Info::default_instance_ = NULL;

Info* Info::New() const {
  return new Info;
}

void Info::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    hireling_class_ = 0;
    gbid_name_ = 0;
    level_ = 0;
    attribute_experience_next_ = 0u;
    dead_ = false;
  }
  power_key_params_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 hireling_class = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &hireling_class_)));
          set_has_hireling_class();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(21)) goto parse_gbid_name;
        break;
      }
      
      // required sfixed32 gbid_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_gbid_name:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &gbid_name_)));
          set_has_gbid_name();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }
      
      // required sint32 level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_attribute_experience_next;
        break;
      }
      
      // required uint32 attribute_experience_next = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attribute_experience_next:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attribute_experience_next_)));
          set_has_attribute_experience_next();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_power_key_params;
        break;
      }
      
      // repeated sint32 power_key_params = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_power_key_params:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 88, input, this->mutable_power_key_params())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_power_key_params())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_power_key_params;
        if (input->ExpectTag(96)) goto parse_dead;
        break;
      }
      
      // required bool dead = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dead:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dead_)));
          set_has_dead();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required sint32 hireling_class = 1;
  if (has_hireling_class()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->hireling_class(), output);
  }
  
  // required sfixed32 gbid_name = 2;
  if (has_gbid_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(2, this->gbid_name(), output);
  }
  
  // required sint32 level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->level(), output);
  }
  
  // required uint32 attribute_experience_next = 4;
  if (has_attribute_experience_next()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->attribute_experience_next(), output);
  }
  
  // repeated sint32 power_key_params = 11;
  for (int i = 0; i < this->power_key_params_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(
      11, this->power_key_params(i), output);
  }
  
  // required bool dead = 12;
  if (has_dead()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->dead(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Info::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required sint32 hireling_class = 1;
  if (has_hireling_class()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->hireling_class(), target);
  }
  
  // required sfixed32 gbid_name = 2;
  if (has_gbid_name()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(2, this->gbid_name(), target);
  }
  
  // required sint32 level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->level(), target);
  }
  
  // required uint32 attribute_experience_next = 4;
  if (has_attribute_experience_next()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->attribute_experience_next(), target);
  }
  
  // repeated sint32 power_key_params = 11;
  for (int i = 0; i < this->power_key_params_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32ToArray(11, this->power_key_params(i), target);
  }
  
  // required bool dead = 12;
  if (has_dead()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->dead(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Info::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required sint32 hireling_class = 1;
    if (has_hireling_class()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->hireling_class());
    }
    
    // required sfixed32 gbid_name = 2;
    if (has_gbid_name()) {
      total_size += 1 + 4;
    }
    
    // required sint32 level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->level());
    }
    
    // required uint32 attribute_experience_next = 4;
    if (has_attribute_experience_next()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->attribute_experience_next());
    }
    
    // required bool dead = 12;
    if (has_dead()) {
      total_size += 1 + 1;
    }
    
  }
  // repeated sint32 power_key_params = 11;
  {
    int data_size = 0;
    for (int i = 0; i < this->power_key_params_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->power_key_params(i));
    }
    total_size += 1 * this->power_key_params_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Info::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Info* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Info*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Info::MergeFrom(const Info& from) {
  GOOGLE_CHECK_NE(&from, this);
  power_key_params_.MergeFrom(from.power_key_params_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hireling_class()) {
      set_hireling_class(from.hireling_class());
    }
    if (from.has_gbid_name()) {
      set_gbid_name(from.gbid_name());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_attribute_experience_next()) {
      set_attribute_experience_next(from.attribute_experience_next());
    }
    if (from.has_dead()) {
      set_dead(from.dead());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Info::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Info::CopyFrom(const Info& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Info::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000002f) != 0x0000002f) return false;
  
  return true;
}

void Info::Swap(Info* other) {
  if (other != this) {
    std::swap(hireling_class_, other->hireling_class_);
    std::swap(gbid_name_, other->gbid_name_);
    std::swap(level_, other->level_);
    std::swap(attribute_experience_next_, other->attribute_experience_next_);
    power_key_params_.Swap(&other->power_key_params_);
    std::swap(dead_, other->dead_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Info::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Info_descriptor_;
  metadata.reflection = Info_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SavedData::kHirelingsFieldNumber;
const int SavedData::kActiveHirelingFieldNumber;
const int SavedData::kAvailableHirelingsBitfieldFieldNumber;
#endif  // !_MSC_VER

SavedData::SavedData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SavedData::InitAsDefaultInstance() {
}

SavedData::SavedData(const SavedData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SavedData::SharedCtor() {
  _cached_size_ = 0;
  active_hireling_ = 0u;
  available_hirelings_bitfield_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SavedData::~SavedData() {
  SharedDtor();
}

void SavedData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SavedData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SavedData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SavedData_descriptor_;
}

const SavedData& SavedData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Hireling_2eproto();  return *default_instance_;
}

SavedData* SavedData::default_instance_ = NULL;

SavedData* SavedData::New() const {
  return new SavedData;
}

void SavedData::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    active_hireling_ = 0u;
    available_hirelings_bitfield_ = 0u;
  }
  hirelings_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SavedData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .D3.Hireling.Info hirelings = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_hirelings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_hirelings()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_hirelings;
        if (input->ExpectTag(16)) goto parse_active_hireling;
        break;
      }
      
      // required uint32 active_hireling = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_active_hireling:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &active_hireling_)));
          set_has_active_hireling();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_available_hirelings_bitfield;
        break;
      }
      
      // required uint32 available_hirelings_bitfield = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_available_hirelings_bitfield:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &available_hirelings_bitfield_)));
          set_has_available_hirelings_bitfield();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SavedData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .D3.Hireling.Info hirelings = 1;
  for (int i = 0; i < this->hirelings_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->hirelings(i), output);
  }
  
  // required uint32 active_hireling = 2;
  if (has_active_hireling()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->active_hireling(), output);
  }
  
  // required uint32 available_hirelings_bitfield = 3;
  if (has_available_hirelings_bitfield()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->available_hirelings_bitfield(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SavedData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .D3.Hireling.Info hirelings = 1;
  for (int i = 0; i < this->hirelings_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->hirelings(i), target);
  }
  
  // required uint32 active_hireling = 2;
  if (has_active_hireling()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->active_hireling(), target);
  }
  
  // required uint32 available_hirelings_bitfield = 3;
  if (has_available_hirelings_bitfield()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->available_hirelings_bitfield(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SavedData::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required uint32 active_hireling = 2;
    if (has_active_hireling()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->active_hireling());
    }
    
    // required uint32 available_hirelings_bitfield = 3;
    if (has_available_hirelings_bitfield()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->available_hirelings_bitfield());
    }
    
  }
  // repeated .D3.Hireling.Info hirelings = 1;
  total_size += 1 * this->hirelings_size();
  for (int i = 0; i < this->hirelings_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->hirelings(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SavedData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SavedData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SavedData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SavedData::MergeFrom(const SavedData& from) {
  GOOGLE_CHECK_NE(&from, this);
  hirelings_.MergeFrom(from.hirelings_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_active_hireling()) {
      set_active_hireling(from.active_hireling());
    }
    if (from.has_available_hirelings_bitfield()) {
      set_available_hirelings_bitfield(from.available_hirelings_bitfield());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SavedData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavedData::CopyFrom(const SavedData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  
  for (int i = 0; i < hirelings_size(); i++) {
    if (!this->hirelings(i).IsInitialized()) return false;
  }
  return true;
}

void SavedData::Swap(SavedData* other) {
  if (other != this) {
    hirelings_.Swap(&other->hirelings_);
    std::swap(active_hireling_, other->active_hireling_);
    std::swap(available_hirelings_bitfield_, other->available_hirelings_bitfield_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SavedData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SavedData_descriptor_;
  metadata.reflection = SavedData_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Hireling
}  // namespace D3

// @@protoc_insertion_point(global_scope)
