// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ItemCrafting.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace D3 {
namespace ItemCrafting {

namespace {

const ::google::protobuf::Descriptor* CrafterData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CrafterData_reflection_ = NULL;
const ::google::protobuf::Descriptor* CrafterSavedData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CrafterSavedData_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ItemCrafting_2eproto() {
  protobuf_AddDesc_ItemCrafting_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ItemCrafting.proto");
  GOOGLE_CHECK(file != NULL);
  CrafterData_descriptor_ = file->message_type(0);
  static const int CrafterData_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrafterData, recipes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrafterData, available_enchants_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrafterData, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrafterData, cooldown_end_),
  };
  CrafterData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CrafterData_descriptor_,
      CrafterData::default_instance_,
      CrafterData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrafterData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrafterData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CrafterData));
  CrafterSavedData_descriptor_ = file->message_type(1);
  static const int CrafterSavedData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrafterSavedData, crafter_data_),
  };
  CrafterSavedData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CrafterSavedData_descriptor_,
      CrafterSavedData::default_instance_,
      CrafterSavedData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrafterSavedData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrafterSavedData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CrafterSavedData));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ItemCrafting_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CrafterData_descriptor_, &CrafterData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CrafterSavedData_descriptor_, &CrafterSavedData::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ItemCrafting_2eproto() {
  delete CrafterData::default_instance_;
  delete CrafterData_reflection_;
  delete CrafterSavedData::default_instance_;
  delete CrafterSavedData_reflection_;
}

void protobuf_AddDesc_ItemCrafting_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022ItemCrafting.proto\022\017D3.ItemCrafting\"_\n"
    "\013CrafterData\022\017\n\007recipes\030\001 \003(\017\022\032\n\022availab"
    "le_enchants\030\002 \003(\017\022\r\n\005level\030\003 \002(\005\022\024\n\014cool"
    "down_end\030\004 \002(\020\"F\n\020CrafterSavedData\0222\n\014cr"
    "after_data\030\001 \003(\0132\034.D3.ItemCrafting.Craft"
    "erData", 206);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ItemCrafting.proto", &protobuf_RegisterTypes);
  CrafterData::default_instance_ = new CrafterData();
  CrafterSavedData::default_instance_ = new CrafterSavedData();
  CrafterData::default_instance_->InitAsDefaultInstance();
  CrafterSavedData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ItemCrafting_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ItemCrafting_2eproto {
  StaticDescriptorInitializer_ItemCrafting_2eproto() {
    protobuf_AddDesc_ItemCrafting_2eproto();
  }
} static_descriptor_initializer_ItemCrafting_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int CrafterData::kRecipesFieldNumber;
const int CrafterData::kAvailableEnchantsFieldNumber;
const int CrafterData::kLevelFieldNumber;
const int CrafterData::kCooldownEndFieldNumber;
#endif  // !_MSC_VER

CrafterData::CrafterData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CrafterData::InitAsDefaultInstance() {
}

CrafterData::CrafterData(const CrafterData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CrafterData::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  cooldown_end_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CrafterData::~CrafterData() {
  SharedDtor();
}

void CrafterData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CrafterData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CrafterData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CrafterData_descriptor_;
}

const CrafterData& CrafterData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ItemCrafting_2eproto();  return *default_instance_;
}

CrafterData* CrafterData::default_instance_ = NULL;

CrafterData* CrafterData::New() const {
  return new CrafterData;
}

void CrafterData::Clear() {
  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    level_ = 0;
    cooldown_end_ = GOOGLE_LONGLONG(0);
  }
  recipes_.Clear();
  available_enchants_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CrafterData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed32 recipes = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_recipes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 13, input, this->mutable_recipes())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_recipes())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(13)) goto parse_recipes;
        if (input->ExpectTag(21)) goto parse_available_enchants;
        break;
      }
      
      // repeated sfixed32 available_enchants = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_available_enchants:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 21, input, this->mutable_available_enchants())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_available_enchants())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(21)) goto parse_available_enchants;
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }
      
      // required int32 level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(33)) goto parse_cooldown_end;
        break;
      }
      
      // required sfixed64 cooldown_end = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_cooldown_end:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &cooldown_end_)));
          set_has_cooldown_end();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CrafterData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated sfixed32 recipes = 1;
  for (int i = 0; i < this->recipes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(
      1, this->recipes(i), output);
  }
  
  // repeated sfixed32 available_enchants = 2;
  for (int i = 0; i < this->available_enchants_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(
      2, this->available_enchants(i), output);
  }
  
  // required int32 level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }
  
  // required sfixed64 cooldown_end = 4;
  if (has_cooldown_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(4, this->cooldown_end(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CrafterData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated sfixed32 recipes = 1;
  for (int i = 0; i < this->recipes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32ToArray(1, this->recipes(i), target);
  }
  
  // repeated sfixed32 available_enchants = 2;
  for (int i = 0; i < this->available_enchants_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32ToArray(2, this->available_enchants(i), target);
  }
  
  // required int32 level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }
  
  // required sfixed64 cooldown_end = 4;
  if (has_cooldown_end()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(4, this->cooldown_end(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CrafterData::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // required int32 level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
    // required sfixed64 cooldown_end = 4;
    if (has_cooldown_end()) {
      total_size += 1 + 8;
    }
    
  }
  // repeated sfixed32 recipes = 1;
  {
    int data_size = 0;
    data_size = 4 * this->recipes_size();
    total_size += 1 * this->recipes_size() + data_size;
  }
  
  // repeated sfixed32 available_enchants = 2;
  {
    int data_size = 0;
    data_size = 4 * this->available_enchants_size();
    total_size += 1 * this->available_enchants_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CrafterData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CrafterData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CrafterData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CrafterData::MergeFrom(const CrafterData& from) {
  GOOGLE_CHECK_NE(&from, this);
  recipes_.MergeFrom(from.recipes_);
  available_enchants_.MergeFrom(from.available_enchants_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_cooldown_end()) {
      set_cooldown_end(from.cooldown_end());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CrafterData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CrafterData::CopyFrom(const CrafterData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CrafterData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  
  return true;
}

void CrafterData::Swap(CrafterData* other) {
  if (other != this) {
    recipes_.Swap(&other->recipes_);
    available_enchants_.Swap(&other->available_enchants_);
    std::swap(level_, other->level_);
    std::swap(cooldown_end_, other->cooldown_end_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CrafterData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CrafterData_descriptor_;
  metadata.reflection = CrafterData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CrafterSavedData::kCrafterDataFieldNumber;
#endif  // !_MSC_VER

CrafterSavedData::CrafterSavedData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CrafterSavedData::InitAsDefaultInstance() {
}

CrafterSavedData::CrafterSavedData(const CrafterSavedData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CrafterSavedData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CrafterSavedData::~CrafterSavedData() {
  SharedDtor();
}

void CrafterSavedData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CrafterSavedData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CrafterSavedData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CrafterSavedData_descriptor_;
}

const CrafterSavedData& CrafterSavedData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ItemCrafting_2eproto();  return *default_instance_;
}

CrafterSavedData* CrafterSavedData::default_instance_ = NULL;

CrafterSavedData* CrafterSavedData::New() const {
  return new CrafterSavedData;
}

void CrafterSavedData::Clear() {
  crafter_data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CrafterSavedData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .D3.ItemCrafting.CrafterData crafter_data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_crafter_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_crafter_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_crafter_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CrafterSavedData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .D3.ItemCrafting.CrafterData crafter_data = 1;
  for (int i = 0; i < this->crafter_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->crafter_data(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CrafterSavedData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .D3.ItemCrafting.CrafterData crafter_data = 1;
  for (int i = 0; i < this->crafter_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->crafter_data(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CrafterSavedData::ByteSize() const {
  int total_size = 0;
  
  // repeated .D3.ItemCrafting.CrafterData crafter_data = 1;
  total_size += 1 * this->crafter_data_size();
  for (int i = 0; i < this->crafter_data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->crafter_data(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CrafterSavedData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CrafterSavedData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CrafterSavedData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CrafterSavedData::MergeFrom(const CrafterSavedData& from) {
  GOOGLE_CHECK_NE(&from, this);
  crafter_data_.MergeFrom(from.crafter_data_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CrafterSavedData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CrafterSavedData::CopyFrom(const CrafterSavedData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CrafterSavedData::IsInitialized() const {
  
  for (int i = 0; i < crafter_data_size(); i++) {
    if (!this->crafter_data(i).IsInitialized()) return false;
  }
  return true;
}

void CrafterSavedData::Swap(CrafterSavedData* other) {
  if (other != this) {
    crafter_data_.Swap(&other->crafter_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CrafterSavedData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CrafterSavedData_descriptor_;
  metadata.reflection = CrafterSavedData_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ItemCrafting
}  // namespace D3

// @@protoc_insertion_point(global_scope)
