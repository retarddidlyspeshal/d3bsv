// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Stats.proto

#ifndef PROTOBUF_Stats_2eproto__INCLUDED
#define PROTOBUF_Stats_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace D3 {
namespace Stats {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Stats_2eproto();
void protobuf_AssignDesc_Stats_2eproto();
void protobuf_ShutdownFile_Stats_2eproto();

class StatCategory;
class StatList;

// ===================================================================

class StatCategory : public ::google::protobuf::Message {
 public:
  StatCategory();
  virtual ~StatCategory();
  
  StatCategory(const StatCategory& from);
  
  inline StatCategory& operator=(const StatCategory& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StatCategory& default_instance();
  
  void Swap(StatCategory* other);
  
  // implements Message ----------------------------------------------
  
  StatCategory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatCategory& from);
  void MergeFrom(const StatCategory& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 stat_id = 1;
  inline bool has_stat_id() const;
  inline void clear_stat_id();
  static const int kStatIdFieldNumber = 1;
  inline ::google::protobuf::uint32 stat_id() const;
  inline void set_stat_id(::google::protobuf::uint32 value);
  
  // required uint32 data_1 = 2;
  inline bool has_data_1() const;
  inline void clear_data_1();
  static const int kData1FieldNumber = 2;
  inline ::google::protobuf::uint32 data_1() const;
  inline void set_data_1(::google::protobuf::uint32 value);
  
  // optional uint32 data_2 = 3;
  inline bool has_data_2() const;
  inline void clear_data_2();
  static const int kData2FieldNumber = 3;
  inline ::google::protobuf::uint32 data_2() const;
  inline void set_data_2(::google::protobuf::uint32 value);
  
  // required uint64 total = 4;
  inline bool has_total() const;
  inline void clear_total();
  static const int kTotalFieldNumber = 4;
  inline ::google::protobuf::uint64 total() const;
  inline void set_total(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:D3.Stats.StatCategory)
 private:
  inline void set_has_stat_id();
  inline void clear_has_stat_id();
  inline void set_has_data_1();
  inline void clear_has_data_1();
  inline void set_has_data_2();
  inline void clear_has_data_2();
  inline void set_has_total();
  inline void clear_has_total();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 stat_id_;
  ::google::protobuf::uint32 data_1_;
  ::google::protobuf::uint64 total_;
  ::google::protobuf::uint32 data_2_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_Stats_2eproto();
  friend void protobuf_AssignDesc_Stats_2eproto();
  friend void protobuf_ShutdownFile_Stats_2eproto();
  
  void InitAsDefaultInstance();
  static StatCategory* default_instance_;
};
// -------------------------------------------------------------------

class StatList : public ::google::protobuf::Message {
 public:
  StatList();
  virtual ~StatList();
  
  StatList(const StatList& from);
  
  inline StatList& operator=(const StatList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StatList& default_instance();
  
  void Swap(StatList* other);
  
  // implements Message ----------------------------------------------
  
  StatList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatList& from);
  void MergeFrom(const StatList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .D3.Stats.StatCategory stats = 1;
  inline int stats_size() const;
  inline void clear_stats();
  static const int kStatsFieldNumber = 1;
  inline const ::D3::Stats::StatCategory& stats(int index) const;
  inline ::D3::Stats::StatCategory* mutable_stats(int index);
  inline ::D3::Stats::StatCategory* add_stats();
  inline const ::google::protobuf::RepeatedPtrField< ::D3::Stats::StatCategory >&
      stats() const;
  inline ::google::protobuf::RepeatedPtrField< ::D3::Stats::StatCategory >*
      mutable_stats();
  
  // @@protoc_insertion_point(class_scope:D3.Stats.StatList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::D3::Stats::StatCategory > stats_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Stats_2eproto();
  friend void protobuf_AssignDesc_Stats_2eproto();
  friend void protobuf_ShutdownFile_Stats_2eproto();
  
  void InitAsDefaultInstance();
  static StatList* default_instance_;
};
// ===================================================================


// ===================================================================

// StatCategory

// required uint32 stat_id = 1;
inline bool StatCategory::has_stat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StatCategory::set_has_stat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StatCategory::clear_has_stat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StatCategory::clear_stat_id() {
  stat_id_ = 0u;
  clear_has_stat_id();
}
inline ::google::protobuf::uint32 StatCategory::stat_id() const {
  return stat_id_;
}
inline void StatCategory::set_stat_id(::google::protobuf::uint32 value) {
  set_has_stat_id();
  stat_id_ = value;
}

// required uint32 data_1 = 2;
inline bool StatCategory::has_data_1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StatCategory::set_has_data_1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StatCategory::clear_has_data_1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StatCategory::clear_data_1() {
  data_1_ = 0u;
  clear_has_data_1();
}
inline ::google::protobuf::uint32 StatCategory::data_1() const {
  return data_1_;
}
inline void StatCategory::set_data_1(::google::protobuf::uint32 value) {
  set_has_data_1();
  data_1_ = value;
}

// optional uint32 data_2 = 3;
inline bool StatCategory::has_data_2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StatCategory::set_has_data_2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StatCategory::clear_has_data_2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StatCategory::clear_data_2() {
  data_2_ = 0u;
  clear_has_data_2();
}
inline ::google::protobuf::uint32 StatCategory::data_2() const {
  return data_2_;
}
inline void StatCategory::set_data_2(::google::protobuf::uint32 value) {
  set_has_data_2();
  data_2_ = value;
}

// required uint64 total = 4;
inline bool StatCategory::has_total() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StatCategory::set_has_total() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StatCategory::clear_has_total() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StatCategory::clear_total() {
  total_ = GOOGLE_ULONGLONG(0);
  clear_has_total();
}
inline ::google::protobuf::uint64 StatCategory::total() const {
  return total_;
}
inline void StatCategory::set_total(::google::protobuf::uint64 value) {
  set_has_total();
  total_ = value;
}

// -------------------------------------------------------------------

// StatList

// repeated .D3.Stats.StatCategory stats = 1;
inline int StatList::stats_size() const {
  return stats_.size();
}
inline void StatList::clear_stats() {
  stats_.Clear();
}
inline const ::D3::Stats::StatCategory& StatList::stats(int index) const {
  return stats_.Get(index);
}
inline ::D3::Stats::StatCategory* StatList::mutable_stats(int index) {
  return stats_.Mutable(index);
}
inline ::D3::Stats::StatCategory* StatList::add_stats() {
  return stats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::D3::Stats::StatCategory >&
StatList::stats() const {
  return stats_;
}
inline ::google::protobuf::RepeatedPtrField< ::D3::Stats::StatCategory >*
StatList::mutable_stats() {
  return &stats_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Stats
}  // namespace D3

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Stats_2eproto__INCLUDED
